Search.setIndex({"docnames": ["1-supervised-learning/1-vector-models", "2-notebooks/0_intro", "2-notebooks/1-classification", "2-notebooks/2-neural_networks", "index", "sensai/catboost", "sensai/clustering/clustering_base", "sensai/clustering/greedy_clustering", "sensai/clustering/index", "sensai/clustering/sklearn_clustering", "sensai/columngen", "sensai/data/dataset", "sensai/data/index", "sensai/data/io_data", "sensai/data_transformation/dft", "sensai/data_transformation/index", "sensai/data_transformation/sklearn_transformer", "sensai/data_transformation/value_transformation", "sensai/distance_metric", "sensai/ensemble/ensemble_base", "sensai/ensemble/index", "sensai/ensemble/models", "sensai/evaluation/crossval", "sensai/evaluation/eval_stats/eval_stats_base", "sensai/evaluation/eval_stats/eval_stats_classification", "sensai/evaluation/eval_stats/eval_stats_clustering", "sensai/evaluation/eval_stats/eval_stats_regression", "sensai/evaluation/eval_stats/index", "sensai/evaluation/eval_util", "sensai/evaluation/evaluator", "sensai/evaluation/evaluator_clustering", "sensai/evaluation/index", "sensai/evaluation/metric_computation", "sensai/evaluation/result_set", "sensai/feature_importance", "sensai/feature_selection/index", "sensai/feature_selection/rfe", "sensai/featuregen/feature_generator", "sensai/featuregen/feature_generator_registry", "sensai/featuregen/index", "sensai/geoanalytics/geo_clustering", "sensai/geoanalytics/geo_coords", "sensai/geoanalytics/geopandas/coordinate_clustering", "sensai/geoanalytics/geopandas/coordinate_clustering_ground_truth", "sensai/geoanalytics/geopandas/coordinates", "sensai/geoanalytics/geopandas/geometry", "sensai/geoanalytics/geopandas/graph", "sensai/geoanalytics/geopandas/index", "sensai/geoanalytics/index", "sensai/geoanalytics/local_coords", "sensai/geoanalytics/map_tiles", "sensai/hyperopt", "sensai/index", "sensai/lightgbm", "sensai/local_search", "sensai/minizinc", "sensai/multi_model", "sensai/naive_bayes", "sensai/nearest_neighbors", "sensai/normalisation", "sensai/pytorch_lightning/index", "sensai/pytorch_lightning/pl_models", "sensai/sklearn/index", "sensai/sklearn/sklearn_base", "sensai/sklearn/sklearn_classification", "sensai/sklearn/sklearn_regression", "sensai/sklearn_quantile", "sensai/tensor_model", "sensai/torch/index", "sensai/torch/torch_base", "sensai/torch/torch_data", "sensai/torch/torch_enums", "sensai/torch/torch_eval_util", "sensai/torch/torch_models/index", "sensai/torch/torch_models/lstnet/index", "sensai/torch/torch_models/lstnet/lstnet_models", "sensai/torch/torch_models/lstnet/lstnet_modules", "sensai/torch/torch_models/mlp/index", "sensai/torch/torch_models/mlp/mlp_models", "sensai/torch/torch_models/mlp/mlp_modules", "sensai/torch/torch_models/residualffn/index", "sensai/torch/torch_models/residualffn/residualffn_models", "sensai/torch/torch_models/residualffn/residualffn_modules", "sensai/torch/torch_models/seq/index", "sensai/torch/torch_models/seq/seq_models", "sensai/torch/torch_models/seq/seq_modules", "sensai/torch/torch_modules", "sensai/torch/torch_opt", "sensai/torch/torchtext", "sensai/tracking/azure_tracking", "sensai/tracking/clearml_tracking", "sensai/tracking/index", "sensai/tracking/mlflow_tracking", "sensai/tracking/tracking_base", "sensai/util/aggregation", "sensai/util/cache", "sensai/util/cache_azure", "sensai/util/cache_mysql", "sensai/util/datastruct", "sensai/util/deprecation", "sensai/util/dtype", "sensai/util/git", "sensai/util/hash", "sensai/util/helper", "sensai/util/index", "sensai/util/io", "sensai/util/jscode", "sensai/util/logging", "sensai/util/math", "sensai/util/multiprocessing", "sensai/util/pandas", "sensai/util/pickle", "sensai/util/plot", "sensai/util/profiling", "sensai/util/sequences", "sensai/util/string", "sensai/util/tensorboard", "sensai/util/test", "sensai/util/time", "sensai/util/typing", "sensai/util/version", "sensai/vector_model", "sensai/vectoriser", "sensai/xgboost"], "filenames": ["1-supervised-learning/1-vector-models.ipynb", "2-notebooks/0_intro.md", "2-notebooks/1-classification.ipynb", "2-notebooks/2-neural_networks.ipynb", "index.rst", "sensai/catboost.rst", "sensai/clustering/clustering_base.rst", "sensai/clustering/greedy_clustering.rst", "sensai/clustering/index.rst", "sensai/clustering/sklearn_clustering.rst", "sensai/columngen.rst", "sensai/data/dataset.rst", "sensai/data/index.rst", "sensai/data/io_data.rst", "sensai/data_transformation/dft.rst", "sensai/data_transformation/index.rst", "sensai/data_transformation/sklearn_transformer.rst", "sensai/data_transformation/value_transformation.rst", "sensai/distance_metric.rst", "sensai/ensemble/ensemble_base.rst", "sensai/ensemble/index.rst", "sensai/ensemble/models.rst", "sensai/evaluation/crossval.rst", "sensai/evaluation/eval_stats/eval_stats_base.rst", "sensai/evaluation/eval_stats/eval_stats_classification.rst", "sensai/evaluation/eval_stats/eval_stats_clustering.rst", "sensai/evaluation/eval_stats/eval_stats_regression.rst", "sensai/evaluation/eval_stats/index.rst", "sensai/evaluation/eval_util.rst", "sensai/evaluation/evaluator.rst", "sensai/evaluation/evaluator_clustering.rst", "sensai/evaluation/index.rst", "sensai/evaluation/metric_computation.rst", "sensai/evaluation/result_set.rst", "sensai/feature_importance.rst", "sensai/feature_selection/index.rst", "sensai/feature_selection/rfe.rst", "sensai/featuregen/feature_generator.rst", "sensai/featuregen/feature_generator_registry.rst", "sensai/featuregen/index.rst", "sensai/geoanalytics/geo_clustering.rst", "sensai/geoanalytics/geo_coords.rst", "sensai/geoanalytics/geopandas/coordinate_clustering.rst", "sensai/geoanalytics/geopandas/coordinate_clustering_ground_truth.rst", "sensai/geoanalytics/geopandas/coordinates.rst", "sensai/geoanalytics/geopandas/geometry.rst", "sensai/geoanalytics/geopandas/graph.rst", "sensai/geoanalytics/geopandas/index.rst", "sensai/geoanalytics/index.rst", "sensai/geoanalytics/local_coords.rst", "sensai/geoanalytics/map_tiles.rst", "sensai/hyperopt.rst", "sensai/index.rst", "sensai/lightgbm.rst", "sensai/local_search.rst", "sensai/minizinc.rst", "sensai/multi_model.rst", "sensai/naive_bayes.rst", "sensai/nearest_neighbors.rst", "sensai/normalisation.rst", "sensai/pytorch_lightning/index.rst", "sensai/pytorch_lightning/pl_models.rst", "sensai/sklearn/index.rst", "sensai/sklearn/sklearn_base.rst", "sensai/sklearn/sklearn_classification.rst", "sensai/sklearn/sklearn_regression.rst", "sensai/sklearn_quantile.rst", "sensai/tensor_model.rst", "sensai/torch/index.rst", "sensai/torch/torch_base.rst", "sensai/torch/torch_data.rst", "sensai/torch/torch_enums.rst", "sensai/torch/torch_eval_util.rst", "sensai/torch/torch_models/index.rst", "sensai/torch/torch_models/lstnet/index.rst", "sensai/torch/torch_models/lstnet/lstnet_models.rst", "sensai/torch/torch_models/lstnet/lstnet_modules.rst", "sensai/torch/torch_models/mlp/index.rst", "sensai/torch/torch_models/mlp/mlp_models.rst", "sensai/torch/torch_models/mlp/mlp_modules.rst", "sensai/torch/torch_models/residualffn/index.rst", "sensai/torch/torch_models/residualffn/residualffn_models.rst", "sensai/torch/torch_models/residualffn/residualffn_modules.rst", "sensai/torch/torch_models/seq/index.rst", "sensai/torch/torch_models/seq/seq_models.rst", "sensai/torch/torch_models/seq/seq_modules.rst", "sensai/torch/torch_modules.rst", "sensai/torch/torch_opt.rst", "sensai/torch/torchtext.rst", "sensai/tracking/azure_tracking.rst", "sensai/tracking/clearml_tracking.rst", "sensai/tracking/index.rst", "sensai/tracking/mlflow_tracking.rst", "sensai/tracking/tracking_base.rst", "sensai/util/aggregation.rst", "sensai/util/cache.rst", "sensai/util/cache_azure.rst", "sensai/util/cache_mysql.rst", "sensai/util/datastruct.rst", "sensai/util/deprecation.rst", "sensai/util/dtype.rst", "sensai/util/git.rst", "sensai/util/hash.rst", "sensai/util/helper.rst", "sensai/util/index.rst", "sensai/util/io.rst", "sensai/util/jscode.rst", "sensai/util/logging.rst", "sensai/util/math.rst", "sensai/util/multiprocessing.rst", "sensai/util/pandas.rst", "sensai/util/pickle.rst", "sensai/util/plot.rst", "sensai/util/profiling.rst", "sensai/util/sequences.rst", "sensai/util/string.rst", "sensai/util/tensorboard.rst", "sensai/util/test.rst", "sensai/util/time.rst", "sensai/util/typing.rst", "sensai/util/version.rst", "sensai/vector_model.rst", "sensai/vectoriser.rst", "sensai/xgboost.rst"], "titles": ["Models with Modular Data Pipelines", "Notebook Tutorials", "Introduction to sensAI: Supervised Learning with VectorModels", "Neural Networks", "Welcome to sensAI!", "catboost", "clustering_base", "greedy_clustering", "clustering", "sklearn_clustering", "columngen", "dataset", "data", "io_data", "dft", "data_transformation", "sklearn_transformer", "value_transformation", "distance_metric", "ensemble_base", "ensemble", "models", "crossval", "eval_stats_base", "eval_stats_classification", "eval_stats_clustering", "eval_stats_regression", "eval_stats", "eval_util", "evaluator", "evaluator_clustering", "evaluation", "metric_computation", "result_set", "feature_importance", "feature_selection", "rfe", "feature_generator", "feature_generator_registry", "featuregen", "geo_clustering", "geo_coords", "coordinate_clustering", "coordinate_clustering_ground_truth", "coordinates", "geometry", "graph", "geopandas", "geoanalytics", "local_coords", "map_tiles", "hyperopt", "API Reference", "lightgbm", "local_search", "minizinc", "multi_model", "naive_bayes", "nearest_neighbors", "normalisation", "pytorch_lightning", "pl_models", "sklearn", "sklearn_base", "sklearn_classification", "sklearn_regression", "sklearn_quantile", "tensor_model", "torch", "torch_base", "torch_data", "torch_enums", "torch_eval_util", "torch_models", "lstnet", "lstnet_models", "lstnet_modules", "mlp", "mlp_models", "mlp_modules", "residualffn", "residualffn_models", "residualffn_modules", "seq", "seq_models", "seq_modules", "torch_modules", "torch_opt", "torchtext", "azure_tracking", "clearml_tracking", "tracking", "mlflow_tracking", "tracking_base", "aggregation", "cache", "cache_azure", "cache_mysql", "datastruct", "deprecation", "dtype", "git", "hash", "helper", "util", "io", "jscode", "logging", "math", "multiprocessing", "pandas", "pickle", "plot", "profiling", "sequences", "string", "tensorboard", "test", "time", "typing", "version", "vector_model", "vectoriser", "xgboost"], "terms": {"load_ext": [0, 2, 3], "autoreload": [0, 2, 3], "2": [0, 2, 3, 11, 13, 24, 26, 28, 37, 43, 45, 51, 54, 66, 75, 82, 85, 96, 110, 116, 121, 122], "import": [0, 2, 3, 28, 34, 36, 37, 43, 53, 63, 110, 111, 112, 116, 121], "sy": [0, 2, 3, 107], "path": [0, 2, 3, 42, 43, 51, 55, 65, 75, 76, 82, 95, 105, 107, 111, 112], "append": [0, 2, 14, 37, 95, 96, 105, 107, 122], "src": [0, 2, 3], "sensai": [0, 3, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "xgboost": [0, 2, 4, 52, 63, 64], "torch": [0, 52, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88], "panda": [0, 2, 3, 6, 10, 13, 14, 18, 19, 21, 23, 24, 26, 28, 29, 33, 34, 37, 41, 51, 58, 59, 66, 67, 69, 70, 75, 84, 87, 88, 96, 98, 100, 104, 107, 109, 112, 116, 117, 121], "pd": [0, 2, 3, 10, 13, 14, 37, 98, 105, 107, 110, 112, 118], "backbon": 0, "supervis": 0, "learn": [0, 3, 4, 13, 14, 34, 36, 37, 40, 63, 64, 65, 69, 82, 87, 121], "abstract": [0, 2, 3, 4, 7, 11, 13, 14, 18, 19, 22, 23, 25, 26, 28, 30, 32, 34, 40, 44, 51, 54, 55, 58, 63, 69, 70, 85, 87, 93, 95, 96, 98, 106, 110, 115, 121, 122], "It": [0, 2, 3, 13, 14, 37, 42, 54, 69, 76, 82, 85, 93, 103, 107, 110], "so": [0, 2, 3, 7, 13, 29, 69, 76, 82, 97, 107, 111], "name": [0, 2, 5, 10, 11, 13, 14, 22, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 51, 53, 54, 55, 58, 63, 64, 65, 66, 71, 75, 78, 84, 87, 88, 89, 90, 92, 93, 95, 96, 98, 102, 103, 105, 107, 110, 111, 112, 113, 115, 116, 121, 122], "becaus": [0, 3, 14, 36, 51, 69, 98, 115, 121], "comput": [0, 2, 3, 7, 10, 18, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 40, 41, 45, 46, 51, 53, 54, 58, 63, 64, 85, 87, 94, 95, 98, 102, 111, 116, 121, 122], "scienc": [0, 2], "correspond": [0, 7, 10, 13, 16, 23, 26, 33, 37, 40, 51, 54, 63, 64, 67, 69, 70, 76, 82, 87, 88, 96, 98, 110, 111, 114, 115, 121], "an": [0, 2, 4, 7, 9, 10, 11, 13, 14, 17, 23, 24, 26, 28, 29, 33, 36, 37, 38, 40, 41, 42, 43, 51, 54, 55, 58, 59, 63, 65, 66, 67, 69, 70, 71, 75, 76, 82, 85, 87, 88, 92, 94, 95, 96, 98, 101, 103, 105, 107, 110, 111, 112, 114, 115, 117, 121, 122], "arrai": [0, 2, 3, 14, 17, 36, 42, 43, 44, 55, 66, 67, 69, 96, 110, 114, 117, 121, 122], "map": [0, 14, 16, 23, 24, 25, 26, 28, 29, 34, 40, 46, 51, 54, 63, 69, 75, 78, 82, 84, 85, 87, 88, 94, 103, 107, 111, 112, 115, 117, 122], "desir": [0, 4, 13, 30, 70, 75, 85, 107, 121, 122], "output": [0, 2, 10, 13, 14, 22, 25, 28, 29, 37, 55, 56, 58, 61, 63, 64, 65, 67, 69, 70, 75, 76, 78, 81, 82, 84, 85, 87, 88, 107, 110, 113, 121, 122], "i": [0, 3, 7, 13, 14, 18, 24, 34, 36, 37, 49, 51, 54, 61, 65, 66, 67, 69, 70, 75, 76, 87, 88, 92, 93, 95, 96, 97, 98, 105, 107, 112, 114, 115, 116, 120, 121, 122], "e": [0, 2, 3, 4, 6, 7, 13, 14, 18, 22, 23, 24, 28, 29, 33, 34, 36, 37, 38, 49, 51, 54, 61, 65, 66, 67, 69, 75, 76, 82, 85, 87, 88, 90, 92, 93, 95, 96, 97, 98, 105, 107, 110, 112, 114, 115, 116, 120, 121, 122], "regress": [0, 2, 3, 13, 26, 28, 29, 34, 37, 56, 61, 67, 69, 76, 82, 87, 112, 123], "target": [0, 2, 3, 13, 26, 28, 37, 61, 67, 69, 76, 84, 85, 121, 122], "note": [0, 2, 3, 14, 24, 28, 33, 36, 37, 51, 54, 63, 64, 69, 84, 87, 97, 98, 107, 110, 115, 121, 122], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 22, 23, 24, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 42, 43, 45, 51, 54, 61, 63, 64, 67, 69, 70, 72, 75, 76, 78, 81, 82, 84, 85, 86, 87, 92, 93, 94, 95, 98, 99, 100, 103, 105, 107, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122], "doe": [0, 3, 14, 26, 37, 51, 54, 76, 82, 95, 98, 103, 111, 115, 121], "limit": [0, 2, 23, 24, 37, 53, 55, 107, 115], "tabular": [0, 4], "within": [0, 2, 3, 4, 13, 14, 18, 37, 40, 43, 51, 69, 70, 82, 84, 92, 95, 96, 97, 98, 106, 107, 115, 121], "can": [0, 1, 2, 3, 4, 7, 10, 13, 14, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 37, 38, 49, 51, 54, 58, 61, 66, 67, 69, 70, 71, 72, 75, 76, 82, 84, 85, 87, 88, 92, 93, 95, 97, 98, 99, 103, 105, 106, 107, 110, 111, 115, 121, 122], "take": [0, 2, 3, 14, 23, 24, 25, 26, 37, 61, 66, 67, 69, 70, 75, 84, 85, 95, 96, 107, 121, 122], "arbitrari": [0, 2, 3, 14, 37, 51, 54, 97], "form": [0, 2, 7, 13, 40, 51, 67, 103, 115, 121, 122], "contrast": [0, 45], "thei": [0, 2, 3, 4, 13, 14, 37, 61, 67, 69, 70, 111, 114, 121], "ar": [0, 2, 3, 4, 5, 7, 10, 11, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 34, 36, 37, 38, 40, 49, 51, 53, 54, 56, 58, 66, 67, 69, 70, 75, 76, 82, 84, 85, 87, 88, 92, 94, 95, 96, 97, 98, 103, 105, 106, 107, 110, 111, 112, 114, 115, 121, 122], "mathemat": [0, 2, 121], "everi": [0, 2, 3, 28, 49, 51, 75, 76, 93, 95, 110, 112, 113, 115, 121], "element": [0, 2, 37, 51, 76, 85, 110, 114, 115], "could": [0, 2, 3, 36, 51, 70, 88, 110], "itself": [0, 2, 7, 28, 33, 67, 96, 103, 107, 110, 121], "arbitrarili": [0, 90, 92, 93, 121], "most": [0, 2, 14, 24, 34, 37, 38, 54, 120], "sens": [0, 2, 121], "ani": [0, 2, 3, 13, 14, 16, 17, 22, 23, 24, 28, 29, 36, 37, 40, 51, 63, 69, 70, 72, 75, 76, 79, 82, 84, 85, 87, 88, 92, 93, 95, 96, 98, 102, 103, 105, 106, 107, 110, 111, 112, 114, 115, 121, 122], "kind": [0, 92], "object": [0, 2, 6, 7, 9, 10, 13, 14, 16, 17, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 38, 40, 41, 42, 46, 49, 50, 51, 54, 55, 58, 59, 61, 63, 69, 70, 86, 87, 89, 92, 93, 94, 95, 96, 98, 102, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122], "from": [0, 2, 3, 4, 10, 13, 14, 16, 22, 23, 24, 26, 28, 29, 33, 34, 36, 37, 38, 40, 41, 42, 43, 51, 53, 54, 55, 63, 64, 67, 69, 70, 71, 75, 76, 78, 84, 85, 87, 88, 95, 96, 98, 105, 107, 110, 111, 112, 113, 114, 115, 121, 122], "classif": [0, 2, 5, 24, 26, 28, 29, 34, 37, 61, 67, 69, 75, 76, 78, 81, 84, 87, 123], "vectorclassificationmodel": [0, 2, 22, 28, 32, 36, 57, 58, 63, 67, 69, 121], "vectorregressionmodel": [0, 2, 21, 22, 26, 28, 32, 36, 56, 58, 63, 66, 67, 69, 121], "deriv": [0, 3, 4, 51, 54, 105, 113, 115], "And": 0, "we": [0, 2, 3, 5, 7, 26, 40, 45, 63, 64, 67, 69, 75, 85, 92, 93, 94, 110, 116, 121, 122], "furthermor": [0, 37, 93], "provid": [0, 2, 3, 6, 10, 13, 14, 18, 22, 23, 28, 29, 34, 36, 37, 42, 43, 51, 54, 58, 69, 70, 75, 78, 81, 82, 84, 85, 87, 88, 90, 93, 95, 96, 98, 107, 115, 122], "facilit": [0, 2, 3, 11, 28, 38, 112, 115], "do": [0, 2, 3, 4, 9, 14, 37, 38, 51, 70, 85, 87, 95, 96, 103, 107, 110, 114, 115, 121], "requir": [0, 2, 3, 7, 14, 22, 29, 33, 37, 61, 63, 64, 67, 69, 70, 75, 76, 87, 98, 105, 107, 110, 115, 121], "rulebasedvectorclassificationmodel": [0, 121], "rulebasedvectorregressionmodel": [0, 56, 121], "These": [0, 37, 43, 56, 121], "turn": [0, 2], "specialis": [0, 2, 88], "order": [0, 2, 3, 4, 13, 14, 22, 24, 28, 29, 34, 36, 37, 51, 54, 57, 58, 69, 76, 87, 95, 96, 103, 107, 112, 120, 121, 122], "direct": [0, 23, 24, 76, 85, 98], "access": [0, 36, 95], "wide": [0, 4], "machin": [0, 2, 4], "librari": [0, 2, 4, 107], "scikit": [0, 2, 3, 4, 13, 34, 40, 63, 64, 65], "pytorch": [0, 2, 3, 4], "etc": [0, 2, 34, 87, 97, 115, 120], "your": [0, 2, 4, 7, 69, 107, 121], "id": [0, 2, 38, 115, 122], "view": [0, 3, 13, 96], "inspect": [0, 2, 3, 33], "them": [0, 1, 2, 3, 7, 13, 14, 28, 37, 55, 61, 67, 84, 95, 99, 115, 121, 122], "fundment": 0, "structur": [0, 52, 96, 98, 115], "row": [0, 3, 13, 14, 29, 33, 42, 49, 51, 69, 96, 105, 110, 121], "entir": [0, 2, 14, 28, 36, 75, 76, 85, 87, 121], "thu": [0, 2, 3, 16, 29, 51, 69, 76, 85, 87, 110, 115, 121, 122], "dataset": [0, 2, 3, 12, 28, 29, 30, 70, 72, 88, 110], "batch": [0, 64, 65, 69, 70, 82, 87, 88, 96, 110], "good": [0, 14, 34, 115], "represent": [0, 2, 3, 4, 29, 51, 54, 58, 63, 76, 85, 92, 93, 95, 96, 97, 102, 107, 110, 112, 115, 117], "rudimentari": [0, 3], "column": [0, 2, 3, 5, 10, 11, 13, 14, 18, 23, 24, 28, 29, 34, 37, 38, 49, 51, 53, 61, 67, 69, 75, 78, 81, 84, 88, 96, 110, 112, 116, 121], "avoid": [0, 3, 4, 7, 37, 51, 57, 58, 93], "ambigu": [0, 3], "contain": [0, 1, 2, 3, 4, 6, 7, 11, 13, 14, 22, 23, 24, 25, 26, 28, 29, 34, 36, 37, 40, 42, 43, 46, 51, 53, 54, 55, 66, 67, 69, 70, 78, 81, 84, 85, 95, 96, 98, 100, 103, 107, 114, 115, 118, 120, 121, 122], "yet": [0, 2, 3, 34, 82, 95], "simplest": 0, "directli": [0, 1, 2, 28, 51, 69, 76, 85, 95, 98], "matrix": [0, 2, 40, 75, 76, 112], "2d": [0, 3, 69, 82], "fit": [0, 2, 3, 6, 9, 14, 16, 17, 22, 28, 29, 30, 37, 40, 42, 53, 61, 67, 69, 70, 72, 84, 87, 96, 121, 122], "predict": [0, 2, 11, 22, 23, 24, 25, 26, 28, 29, 33, 34, 37, 61, 63, 65, 66, 67, 69, 76, 84, 85, 93, 121], "method": [0, 2, 3, 7, 25, 28, 29, 33, 34, 36, 37, 42, 46, 53, 69, 70, 87, 93, 96, 107, 111, 115, 121, 122], "latter": [0, 54, 76, 103, 122], "return": [0, 3, 6, 7, 10, 13, 14, 16, 18, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 49, 51, 54, 55, 63, 66, 67, 69, 70, 71, 75, 76, 78, 81, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122], "its": [0, 2, 3, 4, 14, 51, 54, 58, 66, 85, 95, 98, 107, 108, 112, 115], "scope": [0, 107], "appli": [0, 2, 4, 7, 10, 13, 14, 16, 24, 26, 28, 29, 33, 34, 36, 37, 38, 40, 46, 51, 54, 63, 64, 65, 67, 69, 70, 71, 75, 76, 78, 81, 84, 87, 95, 107, 115, 116, 121, 122], "one": [0, 2, 3, 5, 13, 14, 17, 23, 24, 26, 28, 29, 30, 34, 36, 37, 38, 40, 41, 42, 49, 51, 53, 54, 61, 63, 64, 65, 66, 67, 69, 70, 75, 76, 84, 85, 87, 93, 95, 98, 103, 105, 107, 110, 112, 121, 122], "kei": [0, 2, 3, 4, 10, 18, 28, 29, 34, 38, 51, 58, 87, 88, 94, 95, 96, 97, 98, 103, 106, 112, 114, 115], "principl": [0, 2, 3, 4, 115], "mai": [0, 2, 5, 7, 14, 22, 23, 24, 28, 29, 34, 37, 40, 41, 51, 53, 54, 63, 64, 66, 69, 70, 84, 85, 87, 88, 95, 96, 105, 111, 115, 121, 122], "specif": [0, 2, 3, 4, 14, 16, 26, 33, 42, 46, 51, 54, 64, 65, 85, 93, 95, 97, 98, 112, 115, 116], "origin": [0, 2, 5, 7, 13, 14, 26, 34, 37, 49, 53, 55, 63, 64, 69, 82, 85, 87, 105, 107, 112, 121, 122], "g": [0, 2, 4, 6, 14, 22, 23, 24, 28, 29, 33, 34, 37, 38, 51, 54, 61, 67, 69, 76, 82, 85, 90, 92, 93, 95, 96, 97, 98, 105, 107, 110, 112, 115, 116, 121, 122], "convers": [0, 26, 40, 49, 69, 95, 100, 115, 122], "tensor": [0, 3, 4, 61, 67, 69, 70, 71, 76, 78, 82, 85, 87, 88], "neural": [0, 4, 69, 70], "network": [0, 4, 69, 70, 76, 82, 85], "shall": [0, 2, 3, 7, 14, 17, 22, 26, 28, 29, 36, 37, 38, 40, 51, 54, 55, 58, 64, 65, 67, 69, 70, 75, 84, 87, 93, 95, 103, 107, 111, 112, 115, 121, 122], "see": [0, 2, 5, 13, 14, 23, 24, 26, 28, 34, 37, 40, 49, 51, 53, 54, 58, 64, 65, 72, 76, 82, 85, 87, 95, 96, 117, 123], "below": [0, 6, 9, 22, 26, 42, 51, 54], "here": [0, 2, 3, 29, 37, 45, 52, 54, 103, 107, 111], "particularli": [0, 2, 3, 58, 63, 64, 115], "iri": [0, 2], "flower": [0, 2], "speci": 0, "where": [0, 2, 3, 7, 10, 13, 14, 16, 17, 22, 24, 25, 26, 28, 29, 33, 34, 36, 37, 38, 40, 41, 46, 49, 51, 54, 58, 63, 66, 67, 69, 70, 72, 75, 76, 82, 85, 87, 88, 92, 93, 95, 96, 98, 103, 105, 110, 111, 112, 114, 115, 121, 122], "measur": [0, 2], "petal": [0, 2], "sepal": [0, 2], "datasetclassificationiri": [0, 11], "io_data": [0, 12, 26, 28, 29, 34, 36, 66, 72, 121], "load_io_data": [0, 11], "to_df": [0, 13], "sampl": [0, 2, 3, 11, 26, 33, 40, 51, 69, 85, 113], "8": [0, 2, 3, 13, 26, 54, 107, 115], "length": [0, 2, 3, 14, 17, 24, 42, 46, 67, 69, 70, 84, 85, 95, 96, 97, 110, 122], "cm": [0, 2], "width": [0, 2, 110, 112], "92": [0, 112], "5": [0, 2, 3, 13, 16, 22, 24, 34, 45, 51, 54, 75, 78, 82, 95, 110, 111, 112, 116], "6": [0, 2, 13, 75, 117], "4": [0, 2, 3, 13, 37, 82, 110], "0": [0, 2, 3, 11, 13, 14, 16, 18, 24, 25, 26, 28, 36, 37, 41, 45, 49, 51, 53, 54, 57, 58, 61, 63, 64, 65, 67, 69, 75, 76, 85, 87, 94, 95, 96, 107, 108, 110, 112, 114, 115, 116, 118, 119, 121, 122], "1": [0, 2, 3, 6, 9, 11, 13, 14, 16, 18, 19, 21, 24, 25, 26, 28, 30, 34, 36, 37, 42, 43, 46, 49, 51, 53, 54, 57, 61, 63, 64, 65, 67, 69, 76, 81, 82, 85, 87, 94, 95, 96, 107, 108, 110, 112, 114, 115, 116, 122], "versicolor": [0, 2], "89": [0, 112], "3": [0, 2, 3, 11, 13, 37, 82, 110], "106": 0, "9": [0, 2, 3, 96, 112], "7": [0, 2, 13], "virginica": [0, 2], "102": [0, 2], "100": [0, 13, 16, 53, 64, 65, 75, 96, 112], "41": [0, 2], "setosa": [0, 2], "40": 0, "48": [0, 2], "instanc": [0, 2, 13, 14, 16, 22, 24, 28, 29, 30, 33, 37, 38, 42, 43, 46, 51, 54, 69, 71, 78, 81, 85, 87, 88, 90, 92, 93, 95, 96, 98, 105, 106, 107, 111, 115, 119, 121, 122], "inputoutputdata": [0, 2, 3, 11, 13, 22, 26, 28, 29, 34, 36, 66, 72, 121], "which": [0, 2, 3, 7, 10, 11, 13, 14, 16, 17, 18, 22, 23, 24, 26, 28, 29, 33, 34, 36, 37, 38, 40, 41, 43, 51, 53, 54, 58, 63, 64, 65, 67, 69, 70, 72, 75, 76, 78, 81, 82, 84, 85, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 121, 122], "two": [0, 2, 3, 7, 14, 26, 34, 40, 41, 46, 49, 51, 70, 76, 82, 85, 87, 88, 95, 98, 107, 112, 114, 115], "merg": [0, 7, 40], "easier": 0, "visualis": [0, 23, 24, 28, 29, 49], "let": [0, 2, 3], "split": [0, 2, 3, 13, 22, 28, 29, 36, 49, 53, 69, 70, 72, 75], "load": [0, 2, 3, 42, 95, 96, 111], "splitter": [0, 13, 22, 29, 69], "datasplitterfract": [0, 2, 13], "train_io_data": 0, "test_io_data": [0, 2, 28, 72], "train": [0, 3, 14, 22, 28, 29, 36, 37, 53, 56, 61, 63, 64, 65, 67, 69, 70, 72, 75, 76, 78, 81, 82, 87, 88, 90, 121, 122], "sklearn": [0, 2, 3, 9, 13, 14, 16, 34, 36, 38, 40, 42, 52, 63, 64, 65, 115, 122], "sklearnrandomforestvectorclassificationmodel": [0, 2, 3, 64], "n_estim": [0, 3, 53, 64, 65], "15": [0, 2, 107], "fit_input_output_data": [0, 2, 121], "just": [0, 7, 26, 28, 40, 67, 69, 92], "conveni": [0, 14, 29, 38, 42, 69, 92, 93, 96, 98, 107, 115, 121], "pass": [0, 2, 3, 5, 14, 22, 23, 26, 28, 29, 38, 40, 42, 51, 53, 58, 63, 64, 65, 66, 67, 69, 85, 87, 92, 93, 94, 95, 97, 103, 105, 107, 110, 111, 112, 115, 121, 122], "instead": [0, 2, 4, 14, 17, 23, 28, 29, 34, 37, 38, 51, 67, 95, 114, 115, 121], "equival": [0, 2, 13, 51, 58, 117], "separ": [0, 3, 13, 14, 26, 34, 37, 61, 67, 75, 76, 87, 95, 103], "now": [0, 2, 3, 67], "compar": [0, 3, 28, 112], "ground": [0, 2, 23, 24, 25, 29, 43, 61, 66, 67, 70, 87, 121], "truth": [0, 2, 23, 24, 25, 29, 43, 61, 67, 70, 87, 121], "some": [0, 2, 3, 4, 14, 25, 28, 33, 51, 54, 63, 64, 70, 82, 88, 107, 110, 115, 121, 122], "concat": [0, 2, 37, 70, 122], "axi": [0, 2, 14, 23, 26, 112], "20": [0, 3, 53, 58, 116], "140": 0, "74": [0, 2], "71": 0, "57": [0, 2], "straightforward": [0, 2], "own": [0, 2, 69, 107], "simpli": [0, 2, 3, 7, 10, 28, 37, 69, 84], "subclass": [0, 2, 3, 7, 13, 33, 107, 115], "appropri": [0, 2, 14, 29, 54, 69, 87, 105, 107, 111, 117], "depend": [0, 2, 76, 85, 87, 98, 115], "type": [0, 2, 3, 9, 14, 23, 24, 28, 29, 43, 53, 58, 63, 64, 85, 95, 96, 97, 98, 100, 103, 104, 110, 117, 121, 122], "you": [0, 1, 2, 3, 14, 28, 30, 51, 69, 107, 111, 117, 121, 122], "want": [0, 2, 3, 14, 28, 92, 93, 115, 117, 122], "For": [0, 2, 3, 4, 7, 10, 13, 23, 26, 28, 29, 34, 36, 37, 49, 54, 58, 61, 67, 69, 70, 72, 75, 76, 81, 85, 95, 107, 114, 115, 121], "classifi": [0, 2, 3, 25, 28, 53, 67, 121], "alwai": [0, 2, 10, 14, 28, 37, 58, 64, 65, 70, 88, 94, 97, 107, 115, 121, 122], "priori": 0, "probabl": [0, 2, 23, 24, 29, 37, 51, 54, 67, 69, 71, 75, 76, 78, 82, 112, 121], "each": [0, 2, 3, 4, 7, 10, 11, 13, 14, 16, 22, 23, 26, 28, 29, 34, 36, 37, 38, 40, 49, 51, 52, 54, 57, 58, 63, 64, 70, 75, 76, 78, 82, 84, 85, 87, 88, 89, 92, 93, 95, 96, 105, 110, 112, 114, 115, 121, 122], "ignor": [0, 3, 7, 14, 17, 24, 28, 40, 85, 115, 121], "inherit": [0, 2, 3, 95], "priorprobabilityvectorclassificationmodel": 0, "def": [0, 3], "_fit_classifi": [0, 2], "self": [0, 3, 49, 63, 69, 111, 112, 121], "x": [0, 3, 9, 13, 19, 23, 24, 28, 37, 49, 61, 66, 67, 69, 70, 76, 79, 82, 85, 87, 108, 109, 112, 115, 121], "y": [0, 13, 23, 24, 28, 29, 37, 49, 61, 67, 69, 70, 87, 109, 112, 121, 122], "_prior_prob": 0, "iloc": [0, 3], "value_count": [0, 14], "normal": [0, 2, 24, 28, 45, 82, 112, 121], "true": [0, 2, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 43, 51, 54, 55, 61, 63, 65, 66, 67, 69, 70, 75, 78, 81, 82, 87, 88, 93, 95, 97, 98, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122], "to_dict": 0, "_predict_class_prob": 0, "valu": [0, 2, 3, 10, 13, 14, 16, 17, 18, 23, 24, 25, 26, 28, 29, 34, 36, 37, 40, 45, 51, 54, 55, 58, 59, 63, 65, 66, 69, 70, 71, 76, 85, 87, 88, 89, 93, 94, 95, 96, 97, 98, 103, 106, 108, 110, 111, 112, 114, 115, 116, 121, 122], "cl": [0, 14, 111, 121], "get_class_label": [0, 121], "len": [0, 13, 114], "index": [0, 4, 7, 10, 18, 23, 37, 40, 41, 42, 43, 58, 63, 64, 67, 87, 96, 98, 105, 110, 112, 114, 116, 119, 121], "adapt": [0, 4, 54, 76, 85, 105], "anoth": [0, 2, 3, 14, 36, 37, 51, 54, 122], "typic": [0, 2, 7, 29, 37, 56, 69, 76, 107, 121], "few": [0, 2], "line": [0, 2, 26, 41, 51, 63, 69, 105, 112, 115], "adher": 0, "apart": [0, 76], "paramet": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 49, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123], "construct": [0, 2, 3, 7, 14, 26, 29, 37, 54, 58, 69, 95, 96, 98, 105, 107, 122], "question": [0, 49, 121], "all": [0, 2, 3, 4, 6, 7, 13, 14, 16, 17, 18, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 38, 42, 43, 51, 53, 54, 58, 61, 63, 64, 67, 76, 78, 82, 85, 87, 92, 94, 95, 96, 97, 103, 107, 110, 112, 114, 115, 116, 117, 121, 122], "flexibl": [0, 4], "via": [0, 2, 3, 5, 7, 14, 28, 29, 34, 37, 38, 51, 53, 54, 69, 76, 84, 87, 93, 95, 96, 107, 111, 112, 115, 122], "call": [0, 2, 16, 28, 29, 37, 51, 54, 69, 76, 82, 93, 95, 96, 99, 107, 111, 115, 117, 121, 122], "post": [0, 3, 121, 122], "have": [0, 2, 3, 5, 7, 10, 13, 14, 23, 28, 34, 36, 37, 38, 51, 53, 54, 61, 66, 67, 69, 75, 85, 93, 94, 95, 96, 98, 103, 105, 107, 110, 112, 114, 115, 121, 122], "with_": 0, "prefix": [0, 28, 75, 92, 95, 96, 105], "indic": [0, 7, 13, 14, 17, 18, 22, 24, 26, 37, 40, 41, 49, 51, 54, 58, 69, 75, 85, 95, 96, 97, 99, 112, 114], "akin": 0, "builder": [0, 115], "pattern": [0, 14], "allow": [0, 2, 3, 37, 40, 69, 85, 96, 107, 122], "chain": [0, 14, 37, 54, 121], "singl": [0, 2, 4, 7, 10, 14, 22, 23, 24, 28, 29, 33, 37, 42, 51, 53, 56, 61, 63, 67, 69, 70, 72, 84, 85, 87, 89, 110, 115, 121, 122], "statement": [0, 92, 93, 107], "relev": [0, 2, 4, 14, 28, 37, 54, 69, 94, 105], "with_nam": [0, 2, 3, 14, 121], "report": [0, 28, 34, 69, 78, 81, 84, 103, 107, 115], "purpos": [0, 3, 28, 49, 51, 54, 72, 115, 121], "with_raw_input_transform": [0, 121], "initi": [0, 4, 7, 34, 40, 51, 54, 85, 87, 98, 107, 110, 111, 115], "with_feature_gener": [0, 121], "with_feature_collector": [0, 121], "specifi": [0, 3, 4, 5, 13, 14, 23, 25, 26, 28, 29, 33, 37, 38, 51, 53, 66, 69, 70, 72, 78, 82, 87, 95, 105, 107, 110, 111, 112], "how": [0, 2, 4, 7, 26, 54, 85, 95, 121, 122], "with_feature_transform": [0, 121], "three": [0, 2, 110], "point": [0, 2, 7, 13, 22, 23, 24, 25, 26, 28, 29, 36, 37, 40, 41, 42, 43, 45, 46, 52, 53, 54, 58, 63, 64, 67, 69, 70, 87, 88, 110, 112, 118, 121], "essenti": [0, 2], "address": [0, 2, 82], "detail": [0, 28], "option": [0, 3, 5, 6, 7, 9, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 40, 42, 43, 51, 53, 54, 58, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 81, 82, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 101, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123], "reflect": [0, 28, 51, 54, 66], "string": [0, 14, 26, 29, 38, 53, 58, 63, 92, 93, 95, 96, 97, 102, 104, 105, 107, 110, 111, 122], "pretti": [0, 115], "print": [0, 2, 5, 113, 115], "pprint": [0, 115], "str": [0, 5, 6, 10, 13, 14, 18, 22, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 38, 42, 43, 46, 51, 53, 55, 58, 63, 64, 65, 66, 71, 72, 75, 78, 84, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 119, 121], "randomforest": [0, 2, 3, 34], "featuregener": [0, 2, 5, 14, 37, 38, 53, 121], "none": [0, 2, 5, 6, 7, 9, 10, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 40, 41, 42, 43, 49, 50, 51, 53, 54, 55, 58, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 78, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123], "rawinputtransformerchain": [0, 2], "dataframetransformerchain": [0, 2, 14, 121], "dataframetransform": [0, 2, 14, 29, 37, 121], "featuretransformerchain": [0, 2], "fitarg": [0, 2], "usebalancedclassweight": [0, 2], "fals": [0, 2, 3, 5, 7, 10, 11, 13, 14, 17, 18, 22, 23, 24, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 42, 51, 53, 54, 55, 58, 63, 64, 65, 69, 70, 81, 87, 88, 92, 93, 95, 96, 97, 98, 102, 103, 105, 107, 108, 110, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123], "uselabelencod": [0, 2], "randomforestclassifi": [0, 2], "random_st": [0, 2, 5, 34, 51, 53, 64, 65, 66, 123], "42": [0, 2, 5, 13, 22, 29, 34, 51, 53, 54, 64, 65, 66, 123], "strongli": [0, 4], "associ": [0, 2, 4, 6, 7, 9, 14, 28, 42, 43, 51, 54, 95, 112], "critic": 0, "sever": [0, 2, 14, 22, 28, 56, 63, 95, 112, 122], "heterogen": [0, 4], "same": [0, 2, 4, 10, 13, 14, 23, 24, 28, 29, 37, 40, 51, 52, 54, 58, 61, 63, 67, 69, 70, 75, 76, 85, 92, 95, 98, 110, 112, 114, 121, 122], "ha": [0, 10, 14, 29, 37, 38, 43, 51, 52, 54, 58, 61, 67, 69, 70, 76, 82, 88, 93, 95, 98, 107, 110, 111, 112, 121, 122], "differ": [0, 2, 3, 28, 36, 41, 45, 51, 82, 85, 87, 112, 115, 116, 117, 121], "regard": [0, 2, 7], "optim": [0, 38, 87], "mean": [0, 2, 23, 26, 34, 40, 43, 45, 51, 53, 54, 65, 66, 69, 85, 87, 94, 108, 116, 121], "compos": [0, 4, 112], "reusabl": 0, "user": [0, 2, 13, 37, 51, 54, 97, 115, 117], "compon": [0, 2, 3, 51, 58, 70, 75, 76, 84, 85, 95, 115, 120], "serv": [0, 2, 3, 55, 70, 88, 121], "answer": 0, "follow": [0, 2, 3, 7, 14, 75, 76, 82, 87], "might": [0, 2, 3], "necessari": [0, 2, 3, 14, 69, 87, 90, 121], "befor": [0, 13, 22, 28, 29, 30, 37, 69, 82, 87, 95, 107, 112, 121, 122], "extract": [0, 2, 43, 44, 110], "meaning": [0, 33], "need": [0, 2, 3, 5, 14, 28, 51, 53, 54, 69, 85, 87, 95, 96, 107], "filter": [0, 14, 110], "clean": [0, 63, 107], "establish": [0, 4, 112], "usabl": 0, "convert": [0, 14, 26, 54, 55, 67, 69, 84, 97, 105, 106, 110, 115, 117, 121], "date": [0, 107], "proper": [0, 115], "infer": [0, 5, 14, 53, 69, 111, 112, 121], "imput": 0, "miss": [0, 2, 37], "task": [0, 2, 4, 90], "suggest": [0, 28], "non": [0, 4, 7, 24, 28, 29, 40, 43, 54, 61, 67, 69, 82, 95, 96, 103, 111, 115, 121], "easili": [0, 3], "discov": 0, "through": [0, 4, 7, 107, 121], "auto": [0, 2, 23, 26, 64, 65, 76, 112], "complet": [0, 2, 36, 54, 76, 87, 107, 111, 112], "what": [0, 2, 3, 4, 7, 76, 78, 103, 112], "moreov": [0, 103, 110], "hold": [0, 2, 3, 13, 14, 26, 28, 29, 51, 87, 95, 98, 115, 121], "respect": [0, 2, 3, 4, 13, 16, 22, 24, 28, 29, 37, 41, 53, 69, 92, 95, 103, 107, 115, 120], "leverag": [0, 37], "In": [0, 2, 3, 5, 16, 36, 45, 53, 61, 67, 84, 110, 115, 122], "repres": [0, 2, 3, 4, 7, 25, 26, 38, 41, 43, 49, 51, 54, 69, 70, 85, 95, 96, 98, 107, 121, 122], "numer": [0, 2, 3, 14, 38, 54, 121, 122], "categor": [0, 2, 5, 10, 14, 17, 37, 38, 53, 57], "encod": [0, 5, 14, 17, 37, 38, 53, 61, 63, 64, 67, 76, 84, 85, 107, 115, 122], "while": [0, 3, 13, 76, 95], "other": [0, 3, 4, 7, 13, 14, 23, 24, 28, 37, 40, 51, 54, 64, 65, 70, 75, 76, 105, 107, 110, 114, 115, 118], "work": [0, 2, 3, 7, 28, 37, 67, 85, 116, 117], "better": [0, 3, 51, 95], "normalis": [0, 2, 3, 14, 24, 37, 38, 52, 54, 63, 69, 70, 78, 81, 82, 87, 112, 122], "scale": [0, 14, 16, 55, 63, 64, 65, 69, 70, 75, 87, 108], "certain": [0, 61, 67, 82, 92, 95], "wai": [0, 4, 14, 61, 67, 69, 96], "onc": [0, 36, 69, 98, 115, 118, 122], "again": [0, 3], "stage": [0, 2, 69, 75, 76, 85], "present": [0, 13, 29, 37, 51, 58, 93, 95, 105, 110, 111, 114, 115], "abov": [0, 2, 3, 6, 9, 26, 29, 42, 54, 87, 115], "remain": [0, 13, 36, 43, 58], "unmodifi": [0, 2, 28], "If": [0, 2, 3, 10, 13, 14, 23, 25, 26, 28, 29, 34, 37, 38, 42, 51, 53, 54, 58, 67, 69, 70, 75, 76, 82, 85, 87, 88, 93, 95, 96, 98, 107, 111, 114, 115, 121, 122], "given": [0, 2, 3, 7, 10, 13, 14, 18, 22, 24, 26, 28, 29, 33, 34, 36, 37, 38, 40, 41, 46, 49, 51, 53, 54, 55, 58, 66, 67, 69, 70, 71, 85, 87, 88, 93, 94, 95, 98, 102, 103, 105, 107, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122], "full": [0, 2, 3, 28, 29, 34, 85, 93, 95, 105, 115], "As": [0, 2, 3, 76, 115], "concept": [0, 5], "new": [0, 2, 10, 14, 26, 37, 38, 51, 87, 95, 96, 99, 105, 107, 111, 112, 119, 122], "either": [0, 13, 14, 23, 28, 34, 37, 51, 54, 63, 69, 70, 71, 85, 88, 95, 103, 106, 111, 112, 122], "learnt": [0, 3, 16], "common": [0, 2, 85, 105, 112], "modifi": [0, 7, 14, 29, 110, 111, 112], "packag": [0, 52, 107, 120], "data_transform": [0, 14, 16, 17, 52, 58], "multitud": 0, "concret": [0, 2, 51, 54], "well": [0, 2, 3, 4, 28, 38, 67, 95, 107, 111, 115, 117], "consid": [0, 7, 23, 24, 26, 36, 37, 40, 43, 51, 58, 75, 76, 87, 94, 95, 115, 116, 117, 121], "time": [0, 2, 3, 14, 22, 34, 37, 41, 51, 53, 55, 56, 61, 67, 69, 75, 76, 85, 95, 96, 98, 104, 107, 113, 121], "ts": [0, 118], "2024": 0, "09": 0, "08": [0, 116], "12": [0, 2, 117], "31": [0, 5, 53], "18": 0, "2022": 0, "10": [0, 2, 3, 54, 64, 65, 82, 87, 107, 116], "07": [0, 2], "55": 0, "05": [0, 26, 112, 116], "raw_df": 0, "timestamp": [0, 41, 51, 58, 118], "dftstringtotimestamp": 0, "rulebaseddataframetransform": [0, 14], "_appli": 0, "df": [0, 3, 10, 13, 14, 28, 33, 37, 51, 67, 70, 84, 88, 96, 105, 110, 112, 121], "copi": [0, 10, 14, 22, 29, 37], "to_datetim": 0, "onli": [0, 2, 3, 6, 7, 9, 10, 13, 14, 18, 22, 23, 24, 26, 28, 29, 36, 37, 38, 42, 43, 49, 51, 54, 65, 66, 67, 69, 70, 82, 84, 85, 86, 87, 88, 90, 94, 95, 96, 98, 103, 105, 107, 110, 115, 119, 121], "privat": [0, 115], "dft_string_to_timestamp": 0, "transformed_df": 0, "nat": 0, "dataframetranformerchain": 0, "sequenti": [0, 2, 112], "definit": [0, 45, 114, 115], "dft_chain": 0, "dftdropna": [0, 14], "also": [0, 2, 3, 26, 28, 43, 54, 67, 82, 87, 107, 112, 115, 116, 122], "creat": [0, 2, 5, 10, 13, 14, 22, 23, 24, 26, 28, 29, 33, 36, 37, 38, 41, 51, 53, 54, 63, 65, 69, 72, 81, 82, 87, 92, 95, 98, 105, 107, 112, 115, 119, 122], "main": [0, 4, 10, 103, 107], "function": [0, 2, 3, 14, 16, 23, 28, 37, 41, 46, 50, 51, 54, 64, 65, 69, 71, 75, 76, 78, 81, 82, 87, 95, 97, 99, 100, 103, 106, 107, 111, 112, 113, 115, 122], "basic": [0, 3, 69], "suppos": 0, "hour": 0, "dai": [0, 82, 118], "sinc": [0, 3, 18, 69, 75, 82, 95, 96, 97, 116, 121], "rulebasedfeaturegener": [0, 37], "featuregeneratorhourofdai": 0, "featuregen": [0, 14, 37, 38, 52], "_gener": 0, "ctx": [0, 37], "hour_seri": 0, "lambda": [0, 69, 81], "t": [0, 2, 3, 13, 14, 22, 37, 45, 51, 54, 70, 93, 95, 103, 107, 111, 114, 115, 118, 122], "hour_of_dai": 0, "mechan": [0, 2, 22, 28, 69, 82, 95, 96, 115, 122], "must": [0, 2, 7, 13, 14, 24, 28, 29, 34, 37, 38, 40, 54, 67, 69, 70, 75, 76, 84, 94, 95, 96, 111, 115, 120, 122], "our": [0, 2, 3, 82], "_fit": 0, "accordingli": 0, "varieti": [0, 4], "simplifi": [0, 85], "includ": [0, 2, 3, 6, 23, 28, 30, 42, 51, 58, 87, 90, 92, 93, 98, 105, 107, 111, 114, 115, 117, 121], "py": [0, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "feature_gener": [0, 39, 121], "featuregeneratortakecolumn": [0, 37], "over": [0, 3, 34, 37, 43, 51, 70, 88, 95], "without": [0, 4, 10, 13, 14, 16, 24, 37, 51, 58, 64, 65, 82, 85, 87, 105, 107, 115], "featuregeneratormapcolumn": [0, 37], "featuregeneratorflattencolumn": [0, 37], "flatten": [0, 37, 103], "featuregeneratormapcolumndict": [0, 37], "dictionari": [0, 2, 6, 14, 22, 23, 24, 25, 28, 29, 34, 37, 40, 46, 51, 63, 87, 94, 95, 98, 103, 111, 112, 115], "featuregeneratorfromvectormodel": [0, 37], "classifc": 0, "featuregeneratorfromdft": [0, 37], "featuregeneratorfromcolumngener": [0, 37], "columngener": [0, 10, 14, 37], "support": [0, 2, 3, 4, 6, 10, 13, 14, 26, 29, 38, 53, 63, 64, 67, 69, 94, 95, 98, 102, 103, 106, 111, 112, 117, 121, 122], "cach": [0, 10, 18, 37, 51, 58, 96, 97, 104, 122], "featuregeneratortargetdistribut": [0, 37], "condit": [0, 6, 14, 24, 33, 37, 42, 92, 93, 110, 115], "distribut": [0, 2, 16, 23, 28, 37, 82, 108, 112], "discretis": [0, 37], "variabl": [0, 14, 22, 29, 33, 34, 54, 63, 65, 66, 69, 70, 75, 76, 84, 85, 93, 121], "second": [0, 2, 11, 13, 26, 41, 51, 54, 55, 66, 85, 87, 95, 107, 112, 113, 118], "earlier": [0, 2, 3, 69, 86], "week": 0, "featuregeneratordayofweek": 0, "__init__": [0, 3], "super": [0, 3, 58, 111, 115], "input_col_nam": [0, 37], "feature_col_nam": [0, 37], "day_of_week": 0, "_create_valu": 0, "extend": [0, 3, 14, 28, 98, 107, 115], "constructor": [0, 51, 63, 64, 65], "templat": [0, 10, 14, 37], "unnecessari": [0, 7], "repetit": 0, "dftnormalis": [0, 3, 10, 14, 37, 38, 58], "sklearn_transform": [0, 14, 15], "sklearntransformerfactoryfactori": [0, 14, 16, 38], "normalisation_rule_templ": [0, 10, 14, 37], "ruletempl": [0, 10, 14, 37], "transformer_factori": [0, 14], "manualscal": [0, 16], "23": 0, "alreadi": [0, 2, 3, 14, 30, 37, 38, 51, 65, 95, 105, 107, 111, 112, 122], "explain": 0, "affect": [0, 2, 37, 121], "actual": [0, 3, 5, 14, 34, 36, 71, 75, 85, 87, 92, 93, 95, 96, 103, 107, 111, 115, 121], "why": 0, "abl": [0, 2, 70, 88], "decid": [0, 2, 51], "whether": [0, 4, 5, 7, 10, 11, 13, 14, 16, 17, 22, 23, 24, 26, 28, 29, 30, 34, 36, 37, 38, 40, 42, 51, 53, 54, 55, 58, 61, 63, 64, 65, 67, 69, 70, 78, 82, 84, 85, 87, 88, 92, 93, 94, 95, 101, 105, 106, 107, 110, 111, 112, 114, 115, 121, 122], "inform": [0, 2, 3, 5, 6, 26, 33, 37, 38, 46, 51, 87, 92, 93, 95, 121], "oper": [0, 2, 7, 14, 51, 54, 98], "manual": [0, 4, 16], "fg_hour": 0, "get_normalisation_rul": [0, 14, 37, 38], "fit_appli": [0, 14], "521739": 0, "782609": 0, "304348": 0, "similarli": [0, 2, 3, 28, 34], "hot": [0, 5, 14, 17, 37, 38, 53, 61, 67], "higher": [0, 28, 51], "integ": [0, 2, 3, 11, 49, 55, 67, 95, 112, 122], "someth": [0, 121], "categori": [0, 2, 5, 14, 17, 37, 38, 53], "declar": [0, 2, 4], "dftonehotencod": [0, 14], "categorical_feature_nam": [0, 5, 14, 37, 53, 58], "fg_dai": 0, "get_categorical_feature_name_regex": [0, 37, 38], "day_of_week_0": 0, "day_of_week_1": 0, "day_of_week_2": 0, "cours": 0, "cumbersom": 0, "offer": 0, "applic": [0, 4, 7, 14, 23, 24, 26, 51, 54, 61, 67, 69, 95, 122], "combin": [0, 2, 3, 23, 24, 26, 28, 51, 56, 58, 75, 76, 85, 96, 110, 112, 121], "multifeaturegener": [0, 14, 37, 38, 121], "enabl": [0, 2, 3, 22, 29, 34, 38, 51, 54, 64, 65, 78, 87, 92, 93, 105, 107, 111, 112, 115], "creation": [0, 14, 28, 38, 54, 58, 69, 84, 85, 95], "feature_collector": [0, 121], "featurecollector": [0, 14, 38, 121], "multi_feature_gen": 0, "create_multi_feature_gener": [0, 38], "features_df": 0, "dft_one_hot_encod": 0, "create_dft_one_hot_encod": [0, 38], "dft_normalis": 0, "create_dft_normalis": [0, 38], "feature_transform": 0, "put": [0, 61, 67, 105], "togeth": [0, 13, 23, 24], "mlp_model": [0, 77], "sklearn_classif": [0, 62], "sklearnmlpvectorclassificationmodel": [0, 64], "perform": [0, 2, 3, 13, 14, 28, 29, 36, 38, 67, 69, 72, 87, 93, 107, 110, 114, 121, 122], "recal": [0, 2, 24, 29, 112], "preprocessor": [0, 29, 34, 36, 63, 67, 69, 121], "dummi": [0, 93], "fit_preprocessor": [0, 67, 121], "fit_model": [0, 2, 3, 28, 29, 67, 121], "compute_model_input": [0, 121], "run": [0, 1, 2, 34, 36, 51, 54, 89, 92, 93, 107], "would": [0, 2, 51, 54, 67, 69, 70, 85, 105, 107, 111, 115, 121], "underli": [0, 3, 29, 37, 69, 121, 122], "when": [0, 2, 10, 13, 14, 16, 28, 29, 37, 38, 40, 51, 54, 72, 76, 95, 99, 103, 107, 111, 115, 117, 121, 122], "experi": [0, 2, 3, 4, 22, 28, 29, 36, 89, 90, 92, 93], "plai": 0, "central": [0, 2, 26, 49, 121], "role": 0, "add": [0, 2, 10, 13, 23, 26, 28, 34, 42, 51, 54, 57, 69, 92, 94, 95, 96, 105, 106, 107, 111, 112, 115, 121], "concis": [0, 2, 92], "explicit": [0, 28, 111], "featuregeneratorregistri": [0, 38], "refer": [0, 4, 37, 49, 54, 82, 96, 107, 110, 112, 116, 121], "hashabl": [0, 38, 51, 69, 75, 78, 84, 94, 95, 114, 122], "especi": [0, 3, 38, 122], "larger": [0, 7, 38, 43, 45, 54, 61, 67, 112], "project": [0, 38, 42, 46], "enum": [0, 38, 59, 71, 76, 78, 85, 87, 95, 97, 98, 122], "compris": 0, "recommend": [0, 2, 38, 54, 67, 99], "featurenam": 0, "register_factori": [0, 38, 122], "obtain": [0, 2, 4, 14, 22, 26, 28, 29, 34, 38, 51, 54, 69, 87, 88, 95, 112, 121, 122], "collect_featur": [0, 38], "known": [0, 38, 56, 70, 82, 88, 121], "passeng": [0, 11], "potenti": [0, 2, 7, 40, 58, 76, 85, 95], "pclass": [0, 11], "ticket": [0, 11], "first": [0, 2, 3, 11, 13, 24, 29, 33, 34, 36, 37, 41, 43, 51, 66, 70, 85, 87, 88, 96, 98, 110, 114, 116, 121], "third": [0, 11], "sex": [0, 11], "male": [0, 11], "femal": [0, 11], "ag": [0, 11], "year": [0, 11], "frequent": [0, 2], "sibsp": [0, 11], "number": [0, 2, 3, 5, 11, 13, 14, 17, 22, 23, 34, 36, 37, 40, 45, 51, 53, 54, 55, 58, 64, 65, 69, 70, 75, 76, 78, 81, 82, 84, 85, 87, 88, 95, 96, 103, 110, 112, 117, 118, 119, 120, 122], "sibl": [0, 11], "spous": [0, 11], "parch": [0, 11], "parent": [0, 3, 11, 40, 84, 87, 111], "children": [0, 11], "fare": [0, 11], "price": 0, "paid": [0, 11], "embark": [0, 11], "port": [0, 11, 97], "c": [0, 11, 37, 82, 107, 112], "cherbourg": [0, 11], "q": [0, 11, 66], "queenstown": [0, 11], "southampton": [0, 11], "further": [0, 2, 3, 7, 14, 24, 26, 34, 37, 49, 82, 95], "cabin": [0, 11], "goal": 0, "datasetclassificationtitanicsurviv": [0, 11], "passengerid": [0, 11], "braund": 0, "mr": 0, "owen": 0, "harri": 0, "22": [0, 82], "21171": 0, "2500": 0, "nan": [0, 14, 37, 103], "cume": 0, "john": 0, "bradlei": 0, "florenc": 0, "brigg": 0, "th": [0, 69, 87], "38": [0, 2], "pc": 0, "17599": 0, "2833": 0, "c85": 0, "heikkinen": 0, "laina": 0, "26": 0, "ston": 0, "o2": [0, 51], "3101282": 0, "9250": 0, "futrel": 0, "jacqu": 0, "heath": 0, "lili": 0, "peel": 0, "35": [0, 2], "113803": 0, "53": 0, "1000": [0, 65, 87, 112], "c123": 0, "allen": 0, "william": 0, "henri": 0, "373450": 0, "0500": 0, "straightforwardli": [0, 3, 4], "deal": [0, 2, 3], "doesn": [0, 3], "realli": [0, 2, 3], "demonstr": 0, "get": [0, 2, 7, 13, 18, 23, 24, 26, 34, 37, 38, 40, 41, 49, 51, 54, 63, 70, 71, 75, 87, 95, 96, 97, 101, 107, 116, 121, 122], "rid": 0, "useless": 0, "ensur": [0, 13, 37, 63, 64, 69, 95, 107, 111, 121], "treat": [0, 24, 85, 87], "dfttitanicdropmetadatacolumn": 0, "dftcolumnfilt": [0, 14], "drop": [0, 2, 11, 14, 54, 106, 115], "col_nam": [0, 11, 14], "col_cabin": [0, 11], "col_ticket": [0, 11], "dfttitanictransformpassengerclass": 0, "dftmodifycolumn": [0, 14], "col_passenger_class": [0, 11], "column_transform": [0, 14], "n": [0, 2, 3, 14, 24, 36, 37, 51, 58, 66, 69, 75, 82, 87, 110, 115], "try": [0, 3, 29, 51], "prepar": [0, 2], "anyth": 0, "mention": 0, "featuregeneratortitanical": 0, "col_sex": [0, 11], "col_port_embark": [0, 11], "maxabsscal": [0, 16], "independent_column": [0, 14], "suppli": [0, 2, 37, 122], "both": [0, 2, 3, 13, 16, 18, 29, 69, 85, 87, 98, 103, 110], "subset": [0, 4, 7, 14, 51, 110], "multi": [0, 3, 23, 38, 51, 63, 69, 76, 85, 87, 121], "layer": [0, 3, 64, 65, 76, 78, 82, 85], "perceptron": [0, 3, 85], "mlp": [0, 3, 73, 78, 79], "xgb_model": 0, "xgbgradientboostedvectorclassificationmodel": [0, 123], "share": [0, 14, 121], "create_feature_transformer_one_hot_encod": [0, 38], "ignore_unknown": [0, 14, 17, 38], "torch_mlp_model": [0, 3], "multilayerperceptronvectorclassificationmodel": [0, 3, 78], "hid_activation_funct": [0, 78], "relu": [0, 3, 64, 65, 71, 82, 85], "hidden_dim": [0, 3, 78, 81, 82, 85], "cuda": [0, 3, 69, 70, 75, 78, 81, 84, 87, 88], "p_dropout": [0, 3, 78, 81, 82, 85], "25": [0, 16, 82], "nn_optimiser_param": [0, 3, 69, 75, 78, 81, 84, 87], "nnoptimiserparam": [0, 3, 69, 75, 78, 81, 84, 87], "early_stopping_epoch": [0, 3, 87], "col_age_year": [0, 11], "notic": [0, 3], "pure": 0, "inject": [0, 85], "notabl": 0, "addit": [0, 2, 7, 23, 28, 29, 37, 40, 42, 46, 54, 58, 64, 65, 69, 89, 93, 95, 97, 107, 111, 115, 122], "cannot": [0, 14, 23, 24, 26, 28, 37, 49, 67, 69, 81, 96, 101, 103, 111, 121], "cope": 0, "sometim": 0, "undefin": [0, 98, 106], "best": [0, 2, 3, 36, 51, 54, 87], "standard": [0, 2, 26, 45, 69, 87, 108, 112, 117], "scaler": [0, 16, 69, 70, 75], "subsequ": [0, 33, 37, 38, 69, 85, 92, 93, 98, 114, 122], "evaluator_param": [0, 2, 3, 22, 28, 72], "classificationevaluatorparam": [0, 2, 3, 22, 28, 29], "fractional_split_test_fract": [0, 3, 29], "titanic_evalu": 0, "classificationmodelevalu": [0, 2, 3, 28], "compare_model": [0, 2, 3, 28], "results_df": [0, 2, 3, 28], "accuraci": [0, 2, 3, 24, 34, 66, 112], "balancedaccuraci": [0, 2, 3, 24], "precis": [0, 2, 24, 29, 55, 82, 112, 117], "f1": [0, 24], "model_nam": [0, 2, 3, 22, 28], "821229": 0, "810054": 0, "746269": 0, "769231": 0, "757576": 0, "810056": 0, "778138": 0, "781818": 0, "661538": 0, "716667": 0, "folder": 0, "repositori": [0, 52, 101], "section": 1, "collect": [1, 2, 23, 26, 28, 38, 51, 54, 87, 110, 111, 112, 122], "execut": [1, 37, 92, 95, 96, 107, 109, 113], "format": [1, 107, 115], "colab": 1, "download": 1, "local": [1, 40, 49, 69, 81, 92, 111], "numpi": [2, 3, 6, 9, 13, 14, 16, 17, 23, 24, 25, 26, 34, 36, 40, 42, 43, 44, 45, 46, 55, 59, 61, 66, 69, 70, 87, 96, 100, 110, 112, 117, 122], "np": [2, 3, 13], "activi": 2, "about": [2, 3, 6, 46, 51, 92, 93], "ongo": [2, 121], "process": [2, 3, 4, 14, 28, 36, 37, 51, 54, 69, 70, 75, 76, 84, 85, 87, 98, 121], "result": [2, 3, 4, 10, 14, 16, 17, 22, 24, 25, 26, 28, 29, 33, 36, 37, 38, 42, 45, 51, 53, 54, 67, 69, 82, 85, 87, 93, 95, 105, 107, 110, 111, 112, 115, 121, 122], "therefor": [2, 3, 54, 76, 82, 93, 98, 121, 122], "highli": [2, 4, 84], "modul": [2, 4, 11, 13, 28, 34, 40, 43, 64, 65, 67, 69, 78, 81, 82, 84, 85, 86, 87, 103, 107, 121], "python": [2, 4, 5, 96, 97, 106, 107, 117, 120, 122, 123], "s": [2, 3, 4, 7, 10, 11, 13, 14, 23, 24, 26, 28, 29, 30, 33, 34, 36, 37, 42, 51, 52, 53, 54, 58, 63, 66, 67, 69, 70, 75, 76, 85, 87, 92, 93, 95, 98, 102, 105, 106, 107, 108, 110, 112, 115, 121, 122, 123], "To": [2, 3, 7, 37, 38, 54, 96, 115], "configurelog": 2, "configur": [2, 3, 4, 51, 58, 69, 82, 107], "info": [2, 14, 37, 55, 111, 113, 115], "addition": [2, 3, 23, 24, 25, 26, 28, 112, 115], "write": [2, 3, 28, 55, 93, 96, 105], "file": [2, 4, 28, 42, 51, 55, 65, 90, 92, 93, 95, 96, 105, 107, 111, 113, 115], "add_file_logg": [2, 107], "The": [2, 3, 7, 10, 13, 14, 23, 24, 26, 28, 29, 33, 36, 37, 38, 42, 43, 46, 51, 52, 54, 58, 61, 67, 69, 70, 76, 82, 84, 85, 87, 92, 93, 94, 95, 97, 103, 107, 110, 111, 112, 115, 117, 121], "base": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123], "class": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123], "problem": [2, 3, 13, 22, 24, 37, 55, 69, 75, 76, 82, 97, 111, 115, 117], "A": [2, 3, 4, 14, 16, 17, 18, 22, 26, 33, 37, 38, 49, 54, 58, 69, 70, 75, 82, 84, 85, 87, 88, 93, 95, 96, 107, 110, 111, 112, 121, 122], "reprsent": 2, "vector": [2, 3, 14, 29, 37, 41, 76, 84, 85, 87, 121, 122], "understood": [2, 82, 112], "arbitaririli": 2, "complex": [2, 4, 75, 76, 95, 115, 121], "tupl": [2, 7, 13, 16, 18, 22, 23, 24, 25, 26, 28, 29, 34, 37, 40, 41, 43, 49, 50, 51, 54, 58, 66, 67, 69, 70, 75, 87, 88, 95, 98, 103, 105, 111, 112, 115, 122], "expect": [2, 13, 67, 76, 110], "more": [2, 3, 14, 24, 37, 54, 63, 69, 70, 76, 82, 84, 93, 95, 112, 115, 121, 122], "than": [2, 3, 4, 14, 28, 29, 34, 37, 49, 54, 55, 61, 63, 67, 69, 70, 87, 88, 93, 95, 98, 107, 112, 114, 121, 122], "should": [2, 3, 5, 7, 10, 18, 23, 24, 28, 34, 37, 40, 43, 55, 61, 67, 69, 70, 85, 88, 90, 92, 93, 95, 96, 97, 103, 112, 115, 121], "sequenc": [2, 3, 5, 7, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 34, 37, 43, 51, 53, 54, 55, 58, 64, 65, 69, 70, 78, 81, 84, 85, 87, 96, 98, 103, 104, 105, 110, 112, 115, 121, 122], "datafram": [2, 3, 6, 10, 13, 14, 18, 19, 21, 23, 24, 26, 28, 29, 33, 34, 37, 51, 58, 59, 66, 67, 69, 70, 75, 84, 88, 96, 100, 105, 109, 110, 112, 116, 117, 121], "primit": [2, 115], "cell": [2, 14, 49, 121], "larg": [2, 4, 29, 36, 69, 95], "input": [2, 4, 5, 10, 13, 14, 17, 28, 29, 34, 36, 37, 53, 61, 63, 65, 66, 67, 69, 70, 75, 76, 78, 81, 82, 84, 85, 87, 88, 114, 115, 121, 122], "least": [2, 24, 36, 54, 55, 65, 95, 107, 110, 112, 118, 120], "meta": [2, 11, 37, 38, 69, 87, 121], "lose": [2, 4], "track": [2, 4, 22, 28, 29, 52, 89, 90, 92, 93, 110, 122], "lot": 2, "later": [2, 14, 37, 51, 54, 103], "advanc": 2, "tutori": [2, 3], "variou": [2, 30, 100, 103], "framework": [2, 4], "defin": [2, 3, 7, 13, 14, 16, 22, 23, 26, 29, 41, 58, 64, 65, 69, 81, 84, 85, 87, 98, 107, 114, 115, 121], "interfac": [2, 4, 14, 34, 69, 70, 85, 87, 103, 121], "implement": [2, 3, 4, 7, 14, 34, 36, 37, 38, 45, 63, 64, 69, 87, 103, 107, 111, 115], "justa": 2, "code": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "intermedi": [2, 14, 85], "abstractsklearnvectorclassificationmodel": [2, 5, 53, 63, 64, 123], "protocol": [2, 9, 16, 85, 95, 111], "exampl": [2, 3, 5, 7, 13, 28, 29, 33, 34, 37, 53, 67, 69, 70, 76, 88, 95, 107, 110, 112, 115], "differenti": [2, 95], "iris_data": 2, "load_iri": 2, "iris_input_df": 2, "feature_nam": [2, 37], "reset_index": 2, "iris_output_df": 2, "target_nam": 2, "idx": [2, 7, 40, 98], "iris_combined_df": 2, "141": 2, "16": [2, 97], "101": 2, "115": 2, "70": 2, "129": 2, "66": 2, "start": [2, 7, 33, 40, 51, 54, 75, 87, 98, 107, 110, 111, 115, 118], "iris_io_data": 2, "datasplitt": [2, 13, 29, 123], "test": [2, 3, 5, 11, 28, 29, 58, 72, 85, 96, 104, 111], "data_splitt": [2, 29], "shuffl": [2, 13, 22, 29, 34, 61, 70, 87, 88], "training_io_data": 2, "readi": [2, 3], "random": [2, 3, 5, 22, 29, 34, 42, 51, 53, 54, 64, 65, 123], "forest": [2, 123], "sort": [2, 14, 28, 34, 36, 51, 54, 63, 64, 98, 110, 114], "lightgbm": [2, 34, 52], "catboost": [2, 52], "tensorflow": [2, 3], "case": [2, 3, 5, 10, 14, 16, 22, 23, 24, 26, 28, 29, 33, 34, 36, 37, 38, 53, 54, 61, 63, 67, 70, 72, 76, 82, 84, 85, 87, 88, 92, 93, 95, 98, 103, 105, 107, 110, 111, 112, 114, 115, 116, 121, 122], "wrapper": [2, 7, 9, 37, 42, 46, 85, 92, 93, 96], "random_forest_model": [2, 3], "min_samples_leaf": [2, 3, 64, 65], "suppport": 2, "minimum": [2, 7, 23, 24, 25, 26, 40, 49, 51, 53, 66, 107], "end": [2, 3, 13, 28, 51, 54, 75, 76, 87, 93, 95, 98, 107, 110, 111, 118, 121], "up": [2, 13, 37, 41, 58, 97, 115, 121, 122], "leaf": [2, 53], "fitinputoutputdata": 2, "analog": [2, 24], "argument": [2, 16, 40, 51, 63, 64, 65, 66, 71, 87, 95, 103, 106, 107, 112, 122], "2025": 2, "17": 2, "34": 2, "642": 2, "vector_model": [2, 14, 37, 52, 109], "359": 2, "643": 2, "sklearn_bas": [2, 62], "314": 2, "747": 2, "388": 2, "140537426633792": 2, "reserv": 2, "predicted_outputs_df": 2, "head": [2, 3], "91": 2, "58": 2, "90": [2, 112], "renam": [2, 29, 111], "predictedclass": 2, "14": 2, "99": 2, "149": 2, "107": 2, "116": 2, "88": [2, 112], "metric": [2, 18, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 36, 51, 58, 66, 87, 89, 93, 112], "re": [2, 51, 87, 96], "interest": 2, "analys": [2, 3, 29, 33], "read": [2, 4, 28, 88, 95, 96, 105], "instanti": [2, 3, 9, 28, 37, 42, 69, 72, 95], "vectorclassificationmodelevalu": [2, 28, 29], "instruct": 2, "handl": [2, 3, 37, 42, 55, 69, 85, 95, 111, 115], "compute_prob": [2, 28, 29], "param": [2, 7, 22, 28, 29, 40, 49, 51, 54, 63, 70, 87, 93, 95, 96, 112, 113], "eval_data": [2, 3, 28, 33], "eval_model": [2, 22, 29, 30, 89], "851": 2, "853": 2, "956": 2, "particular": [2, 4, 14, 22, 29, 33, 38, 51, 115, 117, 122], "evalstat": [2, 23, 24, 25, 26, 28], "qualiti": [2, 87, 112], "mani": [2, 3, 26, 29, 33, 34, 76, 95, 115, 117], "default": [2, 3, 5, 14, 16, 22, 24, 25, 26, 28, 29, 37, 38, 42, 46, 51, 53, 66, 69, 75, 78, 81, 82, 84, 87, 96, 98, 105, 107, 111, 112, 113, 115, 117, 122], "eval_stat": [2, 23, 24, 25, 26, 28, 31, 33], "get_eval_stat": [2, 29], "classificationevalstat": [2, 22, 24, 28, 29], "140537426427184": 2, "9666666666666667": 2, "9722222222222222": 2, "geomeantrueclassprob": [2, 24], "8890980234758366": 2, "30": 2, "metrics_dict": [2, 23, 24, 25], "float64": 2, "compute_metric_valu": [2, 23, 26, 32], "ad": [2, 3, 24, 26, 28, 29, 34, 37, 38, 46, 58, 65, 69, 82, 94, 95, 96, 103, 105, 111, 115, 121], "among": [2, 7, 54], "top": [2, 51], "eval_stats_classif": [2, 27], "classificationmetrictopnaccuraci": [2, 24], "confus": 2, "binari": [2, 3, 24, 26, 29, 61, 67, 97, 98], "plot_confusion_matrix": [2, 24], "thing": 2, "step": [2, 3, 4, 36, 54, 64, 65, 69, 75, 76, 82, 116], "assist": [2, 3, 115, 120], "out": [2, 4, 29, 70, 75], "seek": 2, "carri": 2, "evaluatorparam": [2, 29], "additional_metr": [2, 23, 24, 25, 26, 29], "cross_validator_param": [2, 28, 36, 72], "crossval": [2, 31], "vectormodelcrossvalidatorparam": [2, 22, 28, 36, 72], "fold": [2, 22, 28, 36], "eval_util": [2, 3, 31], "practic": [2, 37, 115], "usual": [2, 14, 25, 28, 36, 54, 72, 110, 115], "save": [2, 18, 29, 34, 42, 51, 69, 93, 95, 105, 112], "result_writ": [2, 28], "written": [2, 3, 28, 51, 105, 107], "notebook": [2, 33], "shown": [2, 33, 82, 112], "like": [2, 4, 14, 24, 36, 37, 42, 67, 69, 107, 111, 117, 121], "perform_simple_evalu": [2, 3, 28], "show_plot": [2, 28], "358": 2, "288": 2, "0x7fd16b613e50": 2, "361": 2, "464": 2, "480": 2, "gather_result": 2, "296": 2, "top2accuraci": 2, "vectorclassificationmodelevaluationdata": [2, 22, 28, 29], "0x7fd16b40e8f0": 2, "don": [2, 45, 111], "disabl": [2, 10, 14, 61, 67, 76, 93, 95, 107, 111, 121], "eval_stats_plot_collector": [2, 28], "get_enabled_plot": [2, 28], "rel": [2, 13, 24, 26, 49, 66, 94, 116], "ab": [2, 82], "threshold": [2, 7, 24, 69], "count": [2, 14, 23, 24, 57, 63, 64, 94, 103], "activ": [2, 17, 64, 65, 71, 75, 76, 78, 82, 85, 107], "disable_plot": [2, 28], "classificationevalstatsplot": [2, 24], "collector": [2, 28, 38, 121], "whenev": [2, 3, 29, 69, 111], "produc": [2, 3, 16, 29, 37, 51, 56, 69, 76, 84, 85, 87, 121], "perform_cross_valid": [2, 28], "964": 2, "192": 2, "966": 2, "36": 2, "070": 2, "084": 2, "201": 2, "9553599022560102": 2, "085": 2, "086": 2, "087": 2, "11": 2, "206": 2, "9734228107223192": 2, "207": 2, "208": 2, "312": 2, "326": 2, "976458969438705": 2, "327": 2, "328": 2, "330": 2, "432": 2, "444": 2, "9333333333333333": 2, "9333333333333332": 2, "9411926691126593": 2, "445": 2, "446": 2, "549": 2, "561": 2, "9298964965102043": 2, "562": 2, "563": 2, "666": 2, "677": 2, "8666666666666667": 2, "8888888888888888": 2, "6379522029160006": 2, "678": 2, "680": 2, "782": 2, "794": 2, "8611111111111112": 2, "8099785263057822": 2, "795": 2, "796": 2, "898": 2, "910": 2, "9657414983648998": 2, "911": 2, "912": 2, "37": 2, "015": 2, "029": 2, "9560552426688266": 2, "030": 2, "031": 2, "133": 2, "145": 2, "9523809523809524": 2, "841736920530503": 2, "240": 2, "351": 2, "std": [2, 23, 108], "96": 2, "053333": 2, "963571": 2, "050077": 2, "89878": 2, "10223": 2, "vectorclassificationmodelcrossvalidationdata": [2, 22, 28], "0x7fd16b1b2e60": 2, "longer": [2, 111], "being": [2, 3, 7, 10, 14, 16, 23, 24, 28, 29, 36, 51, 69, 75, 76, 87, 95, 96, 105, 111, 112, 115, 121], "make": [2, 4, 14, 37, 41, 51, 54, 69, 70, 76, 84, 85, 95, 115, 121], "veri": [2, 3, 28, 29, 98], "sai": [2, 3], "been": [2, 3, 7, 14, 34, 36, 37, 38, 51, 54, 82, 94, 95, 98, 105, 107, 121, 122], "far": [2, 3, 16], "decis": [2, 3, 24], "tree": [2, 3, 4, 5, 46, 53, 123], "sklearndecisiontreevectorclassificationmodel": [2, 64], "decisiontre": 2, "use_cross_valid": [2, 28, 32], "473": 2, "400": 2, "478": 2, "582": 2, "593": 2, "594": 2, "595": 2, "596": 2, "698": 2, "710": 2, "712": 2, "714": 2, "816": 2, "828": 2, "829": 2, "830": 2, "831": 2, "932": 2, "944": 2, "945": 2, "946": 2, "048": 2, "059": 2, "060": 2, "062": 2, "164": 2, "176": 2, "177": 2, "178": 2, "281": 2, "295": 2, "298": 2, "421": 2, "433": 2, "434": 2, "435": 2, "436": 2, "550": 2, "564": 2, "565": 2, "669": 2, "684": 2, "702": 2, "786": 2, "787": 2, "788": 2, "789": 2, "decisiontreeclassifi": 2, "792": 2, "00": 2, "799": 2, "800": 2, "801": 2, "804": 2, "810": 2, "811": 2, "813": 2, "822": 2, "823": 2, "824": 2, "827": 2, "833": 2, "6141303814089187": 2, "834": 2, "835": 2, "836": 2, "839": 2, "846": 2, "9548416039104165": 2, "847": 2, "848": 2, "849": 2, "852": 2, "858": 2, "39810717055349726": 2, "859": 2, "861": 2, "864": 2, "870": 2, "871": 2, "872": 2, "876": 2, "882": 2, "9444444444444445": 2, "883": 2, "884": 2, "887": 2, "893": 2, "894": 2, "895": 2, "896": 2, "899": 2, "906": 2, "6309573444801932": 2, "923": 2, "94": 2, "046667": 2, "944683": 2, "04441": 2, "756512": 2, "238693": 2, "39": 2, "010": 2, "469": 2, "comparison": [2, 3, 28], "aggreg": [2, 14, 28, 34, 36, 87, 104], "across": [2, 3, 4, 14, 23, 28, 36], "898780": 2, "102230": 2, "044410": 2, "wa": [2, 3, 29, 30, 36, 37, 38, 41, 43, 51, 54, 67, 94, 95, 103, 105, 121, 122], "dure": [2, 3, 14, 17, 28, 36, 37, 38, 51, 54, 61, 67, 69, 75, 76, 81, 82, 87, 95, 96, 107, 121], "displai": [2, 33], "esc_random_forest": 2, "result_by_model_nam": 2, "cross_validation_data": [2, 28], "get_eval_stats_collect": [2, 22, 28, 29], "plot_distribut": [2, 23], "bin": [2, 23, 26, 37, 112], "linspac": 2, "21": 2, "stat": [2, 23, 24, 26, 28, 29, 33, 54, 112], "kde": [2, 23, 112], "list": [2, 3, 7, 11, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 40, 41, 50, 51, 54, 55, 58, 63, 64, 67, 69, 70, 75, 82, 84, 87, 95, 96, 103, 105, 107, 110, 111, 112, 114, 115, 116, 121, 122], "agg_metrics_dict": [2, 23], "agg_fn": [2, 23, 34], "max": [2, 3, 16, 28, 85], "min": [2, 16, 28, 64, 65], "get_valu": [2, 23], "often": [2, 14], "cater": [2, 3, 85], "technic": [2, 115], "multipl": [2, 3, 14, 26, 34, 37, 38, 58, 61, 63, 65, 67, 85, 87, 112, 116, 121, 122], "pipelin": [2, 4, 37], "possibl": [2, 3, 14, 24, 28, 51, 85, 87, 98, 121], "focus": 2, "semant": [2, 4, 61, 67, 84, 115, 121], "themselv": 2, "essenc": 2, "raw": [2, 11, 34, 121], "domain": [2, 3], "situat": 2, "locat": 2, "reason": [2, 3, 29, 36, 63, 64, 99], "fed": [2, 3, 34, 121], "Or": 2, "observ": [2, 51, 54, 110, 121], "sensor": 2, "real": 2, "scenario": 2, "certainli": 2, "closer": [2, 54], "isn": [2, 93], "world": 2, "whatev": [2, 107, 121], "extrac": 2, "natur": [2, 3, 69], "piec": 2, "hand": [2, 3, 4, 121], "aspect": 2, "crititc": 2, "decoupl": 2, "becom": [2, 3, 108], "part": [2, 10, 76, 115, 122], "jointli": [2, 37, 69], "deploy": 2, "unit": [2, 13, 49, 85, 87], "store": [2, 7, 10, 18, 28, 51, 55, 58, 69, 95, 96, 97], "downstream": [2, 29], "choos": [2, 51, 54], "oftentim": 2, "pricipl": 2, "albeit": 2, "descript": [2, 29, 92, 93], "float": [2, 3, 7, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 29, 32, 34, 36, 37, 40, 41, 46, 49, 50, 51, 54, 55, 58, 63, 66, 69, 70, 75, 78, 81, 84, 85, 87, 88, 93, 94, 95, 103, 106, 107, 108, 112, 113, 116, 117, 118, 122], "suitabl": [2, 4, 14, 28, 45, 51, 54, 76], "idiosynchrasi": 2, "even": [2, 3, 84, 85, 93, 115], "rang": [2, 3, 16, 37, 49, 51], "discret": [2, 54], "arbitari": 2, "power": [3, 54], "low": [3, 121], "level": [3, 4, 13, 28, 36, 55, 97, 107, 111, 113, 115, 117, 121], "pixel": 3, "audio": 3, "text": [3, 28, 90, 92, 93, 105, 115], "us": [3, 4, 5, 7, 9, 10, 11, 13, 14, 18, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 49, 51, 53, 54, 58, 61, 63, 64, 65, 66, 67, 69, 70, 72, 75, 76, 78, 82, 84, 85, 87, 88, 92, 93, 95, 96, 97, 98, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 119, 121, 122, 123], "data": [3, 4, 5, 6, 7, 10, 11, 13, 14, 16, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 42, 46, 49, 51, 52, 53, 54, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 72, 75, 76, 78, 81, 84, 87, 88, 94, 95, 96, 97, 98, 100, 105, 110, 112, 117, 121, 122], "evalu": [3, 4, 7, 22, 23, 24, 25, 26, 28, 30, 32, 33, 36, 40, 43, 51, 52, 61, 67, 69, 72, 75, 76, 78, 84, 87, 89, 92, 112], "mainli": 3, "captur": 3, "config": 3, "warn": [3, 5, 7, 10, 37, 51, 53, 54, 55, 58, 63, 69, 87, 99, 105, 107, 122], "functool": 3, "cfg": 3, "get_config": 3, "filterwarn": 3, "util": [3, 28, 41, 43, 50, 51, 52, 58, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "log": [3, 4, 5, 7, 10, 28, 37, 51, 53, 54, 55, 58, 63, 69, 87, 89, 90, 92, 93, 95, 101, 104, 105, 111, 113, 115, 122], "solv": [3, 55], "digit": [3, 55, 75, 117], "mnist": 3, "greyscal": 3, "colour": [3, 26, 112], "28x28": 3, "size": [3, 6, 9, 13, 42, 45, 51, 64, 65, 66, 69, 70, 75, 76, 85, 87, 88, 96, 110, 112], "mnist_df": 3, "read_csv": 3, "datafile_path": 3, "mnist_train": 3, "csv": [3, 11, 28, 51], "zip": 3, "frame": [3, 10, 13, 14, 23, 24, 28, 29, 33, 34, 37, 38, 51, 58, 61, 67, 69, 70, 75, 78, 81, 84, 88, 95, 96, 105, 110, 112, 117, 121], "bit": 3, "255": [3, 95, 97], "label": [3, 6, 9, 14, 23, 24, 25, 26, 28, 29, 30, 37, 42, 43, 61, 63, 64, 67, 69, 75, 78, 84, 87, 112, 121], "1x1": 3, "1x2": 3, "1x3": 3, "1x4": 3, "1x5": 3, "1x6": 3, "1x7": 3, "1x8": 3, "1x9": 3, "28x19": 3, "28x20": 3, "28x21": 3, "28x22": 3, "28x23": 3, "28x24": 3, "28x25": 3, "28x26": 3, "28x27": 3, "785": 3, "o": [3, 51, 70, 88, 102, 117], "mnistiodata": 3, "from_data_fram": [3, 13], "restor": [3, 107], "look": [3, 37, 121], "matplotlib": [3, 23, 24, 26, 28, 34, 36, 65, 87, 90, 92, 93, 112, 116], "pyplot": [3, 23, 24, 26, 28, 34, 36, 65, 90, 92, 93, 112, 116], "plt": [3, 26, 105, 112], "reshape_2d_imag": 3, "seri": [3, 10, 13, 14, 22, 23, 24, 26, 29, 54, 58, 67, 75, 76, 87, 98, 110, 112, 116, 117, 121], "reshap": 3, "28": 3, "fig": [3, 28, 90, 92, 93, 105], "ax": [3, 26, 112], "subplot": 3, "nrow": 3, "ncol": 3, "figsiz": [3, 65, 112], "imshow": [3, 26, 112], "cmap": [3, 26, 112], "randomli": [3, 29, 51, 54], "One": [3, 14], "pre": [3, 4, 70, 82, 84], "simpl": [3, 17, 28, 72, 95, 110], "acceler": [3, 78, 82], "nvidia": 3, "gpu": [3, 78, 87], "stick": 3, "cpu": 3, "batch_siz": [3, 13, 61, 64, 65, 70, 76, 85, 87, 88, 96], "54": 3, "50": [3, 13, 107], "normalisation_mod": [3, 59, 69, 70, 78, 81], "normalisationmod": [3, 59, 69, 70, 78, 81], "max_al": [3, 59], "opt": 3, "mode": [3, 51, 69, 70, 76, 78, 81, 84, 85, 105, 107, 115, 122], "transform": [3, 4, 10, 14, 16, 17, 29, 34, 36, 37, 38, 49, 54, 63, 67, 69, 70, 87, 110, 112, 121, 122], "divid": [3, 112, 116], "maximum": [3, 5, 7, 23, 24, 25, 26, 40, 41, 49, 51, 53, 66, 70, 87, 88, 95, 108, 116, 117, 122], "found": [3, 10, 18, 24, 41, 42, 51, 54, 95, 96, 97, 98], "elabor": 3, "dft": [3, 15, 37, 58, 70], "dftsklearntransform": [3, 14, 70], "algorithm": [3, 6, 7, 9, 25, 40, 43, 46, 54, 87, 102], "earli": [3, 64, 65, 87, 121], "stop": [3, 64, 65, 87, 107, 121], "involv": [3, 69], "check": [3, 24, 61, 67, 69, 95, 103, 110, 120, 121], "regular": [3, 14, 23, 28, 34, 37, 38, 69, 115], "interv": [3, 13, 54, 66, 118], "valid": [3, 22, 28, 36, 40, 46, 51, 69, 70, 72, 87, 88, 95, 105, 110, 121], "set": [3, 6, 7, 13, 14, 16, 18, 22, 23, 24, 26, 28, 29, 30, 33, 36, 37, 38, 40, 43, 45, 51, 53, 58, 61, 64, 65, 67, 69, 70, 72, 75, 76, 78, 81, 84, 87, 88, 95, 96, 97, 98, 107, 110, 111, 112, 115, 121, 122], "ultim": [3, 7, 40, 76, 87, 95, 121], "select": [3, 4, 14, 36, 70, 87, 115], "control": [3, 65], "loss": [3, 69, 75, 76, 78, 84, 87, 121], "nnlossevalu": [3, 87], "dataframesplitt": [3, 13, 69, 70], "torchdatasetprovid": [3, 69, 70, 87, 88], "vectoris": [3, 14, 52, 69, 84], "accept": [3, 14, 51, 54, 67, 69, 70], "against": [3, 120], "rather": [3, 4, 14, 28, 29, 34, 37, 55, 69, 70, 87, 88, 95, 121], "recognit": [3, 82], "sensibl": [3, 4], "convolut": [3, 75, 76], "patch": [3, 120, 123], "gener": [3, 4, 5, 6, 10, 13, 14, 18, 22, 23, 24, 26, 28, 29, 30, 34, 36, 37, 38, 40, 42, 50, 51, 53, 54, 58, 63, 64, 65, 67, 69, 70, 84, 85, 88, 93, 95, 96, 98, 106, 107, 111, 115, 121, 122], "high": [3, 4, 121], "featur": [3, 4, 5, 10, 14, 28, 34, 36, 37, 38, 42, 53, 57, 58, 63, 65, 67, 69, 75, 76, 84, 85, 121, 122], "pool": [3, 107], "fundament": [3, 121], "torchvectorclassificationmodel": [3, 69, 75, 78, 84, 87], "torchvectorregressionmodel": [3, 69, 78, 81, 84], "had": [3, 7], "vectormodel": [3, 10, 14, 19, 22, 28, 29, 34, 36, 37, 51, 67, 69, 89, 109, 121], "describ": [3, 28, 34, 54, 82], "mnistcnnmodul": 3, "image_dim": 3, "int": [3, 6, 7, 9, 13, 18, 22, 24, 25, 26, 30, 33, 34, 37, 40, 41, 42, 43, 49, 50, 51, 54, 55, 58, 63, 64, 65, 69, 70, 75, 76, 78, 81, 84, 85, 87, 88, 95, 96, 97, 98, 103, 106, 107, 108, 110, 112, 114, 116, 117, 119, 120, 122, 123], "output_dim": [3, 13, 69, 70, 78, 81, 82, 84, 85], "num_conv": 3, "kernel_s": 3, "pooling_kernel_s": 3, "mlp_hidden_dim": 3, "output_activation_fn": [3, 85], "activationfunct": [3, 71, 75, 78, 85], "k": [3, 63, 64, 65, 75, 76, 108], "p": [3, 37, 54, 69], "conv2d": 3, "maxpool2d": 3, "dropout": [3, 69, 75, 76, 78, 82, 85], "reduced_dim": 3, "rais": [3, 14, 37, 38, 67, 98, 103, 107, 110, 114, 121], "valueerror": [3, 103], "f": [3, 55, 71, 103, 108, 117, 122], "kernel": [3, 23, 76, 112], "divisor": 3, "dimens": [3, 23, 26, 37, 63, 66, 67, 69, 70, 75, 76, 78, 81, 82, 84, 85, 87, 110, 112, 122], "multilayerperceptron": [3, 79], "get_torch_funct": [3, 71], "hid_activation_fn": [3, 85], "forward": [3, 14, 69, 76, 79, 82, 85], "unsqueez": 3, "shape": [3, 13, 18, 23, 42, 43, 44, 45, 49, 54, 61, 66, 67, 69, 76, 82, 85, 87, 110], "tensoris": [3, 69, 70, 84], "equal": [3, 13, 16, 43, 63, 64, 82, 87, 96, 98, 110, 114, 116], "luckili": 3, "imagereshapinginputtensoris": 3, "rulebasedtensoris": [3, 69, 70], "_tensoris": 3, "union": [3, 5, 6, 7, 13, 14, 16, 18, 22, 23, 24, 26, 28, 29, 32, 34, 36, 37, 38, 42, 43, 44, 45, 49, 51, 53, 59, 64, 65, 69, 70, 71, 72, 75, 78, 81, 85, 87, 88, 95, 96, 100, 103, 106, 110, 111, 112, 115, 119, 121, 122], "_": [3, 37, 58, 115], "iterrow": 3, "stack": [3, 85, 107], "took": 3, "care": 3, "cnn_modul": 3, "32": [3, 61], "200": [3, 64, 65], "log_softmax": [3, 71, 75, 78], "optimis": [3, 4, 14, 22, 29, 36, 51, 54, 69, 84, 87], "adamw": [3, 87], "optimiser_lr": [3, 87], "01": [3, 49], "1024": 3, "cnn_model_from_modul": 3, "from_modul": [3, 69], "classificationoutputmod": [3, 69, 71, 84, 87], "log_prob": [3, 71], "with_input_tensoris": [3, 69], "fulli": [3, 4, 82, 112, 115], "approach": [3, 54, 99], "encapsul": [3, 69, 81], "hyperparamet": [3, 22, 29], "receiv": [3, 14, 37, 85, 95, 111, 121], "hard": 3, "though": [3, 115], "determin": [3, 7, 16, 36, 37, 40, 54, 65, 69, 70, 75, 78, 84, 87, 98, 101, 112, 116, 121, 122], "engin": [3, 105], "automat": [3, 4, 5, 28, 51, 53, 54, 89, 95, 112], "edit": 3, "chang": [3, 4, 28, 37, 49, 51, 54, 87, 107, 110, 117, 121], "design": [3, 4, 33, 82, 98, 115], "late": [3, 98], "delai": [3, 95], "necessit": [3, 58, 107], "factori": [3, 14, 26, 28, 36, 37, 38, 51, 54, 58, 69, 81, 84, 85, 87, 95, 122], "indirect": 3, "realm": [3, 55], "begin": [3, 54, 87, 92, 93, 107, 115], "cnnmodel": 3, "bool": [3, 5, 6, 7, 10, 11, 13, 14, 18, 22, 23, 24, 26, 28, 29, 32, 33, 36, 37, 38, 40, 42, 51, 53, 63, 64, 65, 67, 69, 70, 78, 81, 84, 87, 88, 93, 95, 98, 101, 103, 105, 106, 107, 110, 111, 114, 115, 118, 121, 122, 123], "for_activation_fn": [3, 71], "torch_model_factori": [3, 69, 81], "partial": [3, 96], "vectortorchmodel": [3, 69, 78, 81, 84], "_parent": 3, "create_torch_module_for_dim": [3, 69, 78, 81, 84], "input_dim": [3, 13, 69, 70, 75, 78, 81, 82, 84, 85, 88], "sqrt": 3, "insignificantli": 3, "previou": [3, 76, 96], "outer": [3, 114], "inner": [3, 98], "cnn_model": 3, "improv": [3, 64, 65, 82, 87, 103, 121], "upon": [3, 51, 63, 107, 111, 115], "comparison_data": 3, "962250": 3, "961897": 3, "978333": 3, "978435": 3, "977167": 3, "977261": 3, "946667": 3, "945917": 3, "between": [3, 40, 41, 94, 95, 110, 112, 116, 121], "due": [3, 96], "initialis": [3, 7, 40, 111], "ident": [3, 64, 65, 82, 122], "went": 3, "wrong": 3, "misclassifi": [3, 29], "get_misclassified_triples_pred_true_input": [3, 29], "predclass": 3, "trueclass": 3, "enumer": [3, 59, 71, 76, 85, 87, 95, 98, 122], "set_titl": 3, "tight_layout": 3, "inde": 3, "still": [3, 13, 29, 63, 64, 67, 95, 115, 121], "room": 3, "site": 4, "document": [4, 52], "ai": [4, 5], "toolkit": 4, "focu": 4, "rapid": 4, "experiment": 4, "integr": [4, 28], "minimis": [4, 36, 51, 54], "overhead": 4, "whilst": [4, 55], "retain": [4, 14, 37, 58, 115], "degre": [4, 54], "custom": [4, 26, 69, 115, 122], "solut": 4, "benefit": 4, "unifi": [4, 112], "model": [4, 5, 11, 14, 19, 20, 22, 23, 24, 26, 28, 29, 30, 32, 34, 36, 37, 38, 42, 51, 53, 56, 58, 61, 63, 64, 65, 66, 67, 69, 70, 72, 75, 76, 82, 84, 85, 87, 89, 92, 93, 96, 112, 121, 123], "ensembl": [4, 19, 21, 52, 121], "parametr": [4, 51], "ndash": 4, "abil": 4, "exploit": 4, "strength": [4, 65], "box": [4, 49, 95], "modularis": 4, "properti": [4, 6, 13, 22, 29, 37, 38, 45, 53, 69, 93, 96, 101, 111, 115], "explicitli": [4, 115], "capabl": 4, "error": [4, 14, 26, 29, 37, 38, 101, 111], "gain": [4, 53], "bridg": 4, "gap": 4, "product": [4, 51, 75, 76], "along": [4, 41, 85, 115], "canon": 4, "awai": 4, "boilerpl": 4, "mlflow": 4, "achiev": [4, 24, 26, 63, 64], "eschew": 4, "notion": [4, 51], "extern": 4, "variat": [4, 87], "minim": [4, 29, 96], "extens": [4, 90, 92, 93, 95, 105], "quick": 4, "overview": 4, "pleas": 4, "readm": 4, "github": 4, "search": [4, 41, 51, 98, 114], "page": [4, 52], "sourc": [5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "catboostvectorregressionmodel": 5, "num_leav": [5, 53], "verbos": [5, 107, 122], "model_arg": [5, 53, 63, 64, 65, 123], "abstractsklearnmultipleonedimvectorregressionmodel": [5, 53, 63, 65, 66, 123], "dtype": [5, 14, 37, 53, 104, 110], "prefer": [5, 14, 53, 93], "seed": [5, 22, 29, 34, 53, 54, 64, 65], "leav": [5, 37, 53, 87, 112], "progress": [5, 54], "http": [5, 11, 13, 23, 34, 37, 40, 49, 53, 64, 65, 82, 96, 123], "doc": [5, 37, 96], "en": [5, 53, 96, 123], "reference_catboostregressor": 5, "logger": [5, 7, 10, 37, 51, 53, 54, 55, 58, 63, 69, 87, 105, 107, 122], "is_sample_weight_support": [5, 53, 63, 64, 65, 123], "catboostvectorclassificationmodel": 5, "never": [5, 24, 37, 87], "behaviour": [5, 26, 82, 107, 111], "successfulli": 5, "reference_catboostclassifi": 5, "cluster": [6, 7, 9, 25, 30, 40, 42, 43, 44, 45, 52], "euclideancluster": [6, 9, 25, 30, 42], "noise_label": [6, 9, 25, 30, 42, 43], "min_cluster_s": [6, 9, 40, 42], "max_cluster_s": [6, 9, 42], "pickleloadsavemixin": [6, 95, 121], "abc": [6, 7, 10, 11, 13, 14, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 37, 40, 44, 51, 54, 55, 58, 63, 66, 67, 69, 70, 85, 87, 93, 95, 96, 98, 106, 107, 110, 115, 121, 122], "nois": [6, 9, 25, 30, 42, 43], "relabel": [6, 42], "identifi": [6, 11, 18, 42, 43, 51, 58, 92, 103, 122], "datapoint": [6, 25, 30, 46], "ndarrai": [6, 9, 13, 14, 16, 17, 23, 24, 25, 26, 36, 40, 42, 43, 44, 45, 46, 59, 61, 66, 69, 70, 87, 96, 100, 112, 122], "centroid": 6, "radiu": [6, 49], "summary_dict": [6, 46], "coars": [6, 46], "num_memb": 6, "callabl": [6, 14, 16, 28, 29, 32, 33, 36, 38, 42, 46, 51, 54, 58, 69, 71, 78, 87, 95, 96, 107, 111, 112, 113, 115, 122], "iter": [6, 7, 28, 40, 41, 42, 45, 51, 58, 64, 65, 69, 70, 88, 95, 103, 111, 114, 115, 122], "fulfil": [6, 42], "noise_clust": [6, 42], "summary_df": 6, "is_fit": [6, 14, 37, 121, 122], "cluster_identifi": 6, "get_clust": [6, 42], "cluster_id": [6, 42], "num_clust": [6, 25], "greedyagglomerativeclust": [7, 40], "merge_candidate_determination_strategi": 7, "mergecandidatedeterminationstrategi": [7, 40], "greedi": 7, "agglom": 7, "recomput": [7, 58], "cost": [7, 40, 51, 54, 55], "manag": [7, 54, 92, 93, 96, 107], "prioriti": [7, 96], "queue": [7, 96], "success": [7, 110], "lowest": [7, 36, 114], "until": [7, 36, 95, 96, 122], "admiss": [7, 40, 41, 65, 95, 112], "mutat": 7, "cartesian": [7, 49, 51], "coordin": [7, 40, 41, 42, 43, 45, 46, 47, 49, 50], "system": [7, 40, 49, 92], "distanc": [7, 18, 40, 41, 46, 58, 98, 114], "pair": [7, 10, 18, 23, 24, 28, 29, 40, 41, 49, 51, 69, 70, 88, 98, 122], "exceed": 7, "concaten": [7, 37, 42, 56, 85, 103, 122], "agglomer": 7, "merge_cost": [7, 40], "neg": [7, 40, 54, 116], "math": [7, 40, 41, 104], "inf": [7, 13, 37, 40], "inadmiss": [7, 40, 51], "apply_clust": 7, "wrappedclust": [7, 40], "intern": [7, 38, 82, 87, 95, 115], "is_merg": 7, "get_cluster_associ": 7, "wrap": [7, 10, 40, 53, 58, 69, 96, 113], "remove_merg": 7, "compute_merg": 7, "merged_cluster_indic": [7, 40], "clustermerg": [7, 40], "c1": [7, 40], "c2": [7, 40], "set_cluster": [7, 40], "strategi": [7, 40, 65, 69], "iter_candidate_indic": [7, 40], "wc": [7, 40], "candid": [7, 40], "were": [7, 13, 25, 28, 36, 37, 40, 69, 86, 110], "join": [7, 40, 103, 115], "updat": [7, 40, 51, 54, 95, 96, 103], "partner": [7, 40], "mergecandidatedeterminationstrategydefault": 7, "sklearn_clust": 8, "clustering_bas": 8, "greedy_clust": 8, "sklearnclustererprotocol": [9, 42], "arg": [9, 16, 18, 29, 44, 69, 76, 79, 82, 85, 88, 103, 106], "kwarg": [9, 16, 23, 26, 29, 30, 40, 42, 43, 44, 58, 63, 66, 69, 76, 79, 82, 85, 88, 103, 112], "hint": 9, "labels_": 9, "sklearneuclideancluster": 9, "around": [9, 42, 46, 92, 93, 112, 115], "compat": [9, 34, 42, 55, 63, 64, 86, 103, 105, 117], "api": [9, 14, 37, 38, 42, 96], "generated_column_nam": 10, "generate_column": 10, "to_feature_gener": [10, 14], "take_input_column_if_pres": [10, 37], "is_categor": [10, 37], "whose": [10, 14, 16, 17, 24, 37, 49, 51, 55, 67, 87, 94, 95, 97, 107, 112, 113, 121], "exist": [10, 37, 38, 40, 51, 86, 87, 95, 96, 107, 111, 114, 121], "indexcachedcolumngener": 10, "column_gener": [10, 14], "keyvaluecach": [10, 18, 37, 58, 95], "decor": [10, 18, 95, 99, 113], "entri": [10, 14, 28, 37, 46, 61, 67, 87, 95, 98, 107, 110, 112, 115], "columngeneratorcachedbyindex": 10, "encourag": 10, "persist_cach": [10, 18, 95], "independ": [10, 14, 34, 36, 37, 38, 63, 75, 76, 121], "persist": [10, 18, 29, 51, 69, 95, 111], "pickl": [10, 69, 86, 95, 96, 97, 104], "develop": 11, "tostringmixin": [11, 13, 14, 23, 29, 34, 37, 41, 51, 69, 85, 87, 94, 98, 101, 108, 110, 115, 120, 121, 122], "drop_metadata_column": 11, "generalis": 11, "url": 11, "githubusercont": 11, "com": [11, 49, 96], "datasciencedojo": 11, "master": 11, "titan": 11, "col_index": 11, "uniqu": [11, 13, 14, 112, 122], "col_surviv": 11, "surviv": 11, "No": [11, 14, 107], "ye": 11, "col_siblings_spous": 11, "aboard": 11, "col_parents_children": 11, "col_fare_pric": 11, "amount": [11, 112], "monei": 11, "avail": [11, 37, 87, 107, 116], "cols_metadata": 11, "baseinputoutputdata": 13, "__len__": 13, "filter_indic": 13, "inputoutputarrai": 13, "to_torch_data_load": 13, "64": [13, 61, 87, 97], "weight": [13, 18, 21, 23, 26, 46, 51, 53, 54, 58, 63, 64, 67, 69, 75, 78, 84, 87, 94, 121], "datapointweight": 13, "classmethod": [13, 24, 25, 26, 29, 33, 41, 42, 66, 69, 71, 87, 95, 98, 106, 107, 111, 122], "output_column": 13, "to_data_fram": [13, 23, 29, 33], "add_weight": 13, "weights_col_nam": 13, "filter_index": 13, "index_el": 13, "compute_input_output_correl": 13, "apply_weight": 13, "tinputoutputdata": 13, "fractional_size_of_first_set": [13, 70, 75, 88], "random_se": [13, 22, 28, 34, 51, 54], "split_with_indic": 13, "datasplitterfromdataframesplitt": 13, "data_frame_splitt": [13, 69, 70], "apply_to_input": 13, "fraction": [13, 28, 29, 70, 75, 87, 88], "datasplitterfromsklearnsplitt": 13, "sklearn_splitt": 13, "model_select": 13, "org": [13, 23, 34, 37, 40, 64, 65, 82], "stabl": [13, 34, 37, 40, 64, 65], "html": [13, 23, 34, 37, 40, 53, 64, 65, 113, 123], "datasplitterstratifiedshufflesplit": 13, "static": [13, 16, 22, 25, 26, 33, 41, 51, 54, 66, 76, 93, 106], "is_applic": [13, 23, 26], "compute_split_indic": 13, "indices_pair": 13, "dataframesplitterfract": 13, "dataframesplittercolumnequivalenceclass": 13, "keep": [13, 14, 55, 58, 110, 122], "item": [13, 34, 38, 51, 70, 82, 84, 85, 95, 103, 122], "belong": [13, 14], "rest": [13, 96], "maintain": [13, 38, 55], "group": [13, 28, 34, 76, 112], "boundari": [13, 23, 26, 37], "adjust": [13, 112], "compute_weight": 13, "datapointweightingregressiontargetintervaltotalweight": 13, "intervals_weight": 13, "individu": [13, 17, 28, 42, 56, 87, 121, 122], "sum": [13, 28, 34, 63, 64, 87, 112], "satisfi": [13, 85], "total": [13, 53, 70, 76, 88, 107], "interval_weight": 13, "foo": [13, 28, 34, 37, 110], "zero": [13, 14, 17, 24, 38, 67, 107, 122], "assert": 13, "isclos": 13, "tolist": 13, "6666666666666666": 13, "3333333333333333": 13, "upper_bound": 13, "rel_total_weight": 13, "upper": [13, 55, 66, 114], "bound": [13, 23, 24, 25, 26, 41, 49, 66, 98, 114], "lower_bound": 13, "preced": [13, 37], "b": [13, 16, 37, 70, 75, 88, 98, 107, 110, 112], "weight_fract": 13, "place": [14, 29, 38, 65, 69, 70, 84, 95, 96, 117, 121, 122], "get_nam": [14, 37, 71, 121, 122], "set_nam": [14, 23, 37, 121, 122], "normalisation_rul": [14, 37, 58], "rule": [14, 28, 29, 37, 38, 56, 58, 69, 70, 72, 96, 115, 121], "add_categorical_default_rul": [14, 37], "get_column_change_track": 14, "dataframecolumnchangetrack": [14, 110], "dftfromfeaturegener": 14, "fgen": [14, 37], "consist": [14, 82, 85], "reus": [14, 58, 69, 122], "invertibledataframetransform": [14, 121], "apply_invers": 14, "get_invers": 14, "inversedataframetransform": 14, "invers": [14, 58, 70, 121], "logic": [14, 26], "invertible_dft": 14, "data_frame_transform": 14, "predecessor": 14, "find_first_transformer_by_typ": 14, "dftrenamecolumn": 14, "columns_map": 14, "dict": [14, 23, 24, 25, 28, 29, 34, 46, 51, 63, 69, 72, 75, 78, 81, 84, 87, 89, 93, 94, 96, 97, 98, 100, 103, 107, 111, 112, 115], "old": [14, 95, 103, 111], "dftconditionalrowfilteroncolumn": 14, "boolean": [14, 24, 26, 55, 96], "dftinsetcomparisonrowfilteroncolumn": 14, "set_to_keep": 14, "settokeep": 14, "dftnotinsetcomparisonrowfilteroncolumn": 14, "set_to_drop": 14, "settodrop": 14, "dftvectorizedconditionalrowfilteroncolumn": 14, "vectorized_condit": 14, "dftrowfilt": 14, "ufunc": 14, "columntransform": 14, "dftmodifycolumnvector": 14, "utilis": 14, "assign": [14, 54, 111], "whole": 14, "inplac": [14, 38, 110], "array_valued_result": 14, "regex": [14, 28, 34, 37, 53, 110, 115], "match": [14, 28, 34, 37, 38, 53, 70, 76, 95, 96, 110, 114, 121], "replac": [14, 63, 64, 96, 105, 121], "usearrayvalu": 14, "unknown": [14, 17, 38, 98], "encount": [14, 38], "per": [14, 23, 28, 29, 37, 42, 51, 75, 76, 82, 85, 87, 96, 122], "dftkeepcolumn": 14, "dftdrowfilteronindex": 14, "default_transformer_factori": [14, 38, 122], "sklearntransformerprotocol": [14, 16], "require_all_handl": [14, 38], "context": [14, 28, 34, 37, 70, 84, 92, 93, 107, 115, 121], "idea": [14, 34], "Then": [14, 28, 36, 69], "preprocess": [14, 16, 38, 121, 122], "standardscal": [14, 16, 38], "unmatch": [14, 38], "except": [14, 17, 28, 29, 37, 38, 67, 70, 88, 103, 107, 110, 114, 115, 121], "skip": [14, 51, 75, 76, 82, 85, 105], "unsupport": [14, 37], "array_valu": 14, "otherwis": [14, 28, 95, 103, 110, 111, 115, 118, 120, 121, 122], "flag": [14, 54, 69, 96, 110, 111, 115], "trigger": [14, 69], "attempt": 14, "prevent": 14, "final": [14, 51, 85], "neither": [14, 105], "nor": [14, 105], "scalar": [14, 37, 54, 61, 67, 69, 87, 110, 116, 122], "fix": [14, 28, 45, 49, 75, 85, 87, 111], "assum": [14, 23, 24, 29, 43, 51, 54, 58, 69, 85, 96, 103, 107, 110, 122], "effect": [14, 51, 93, 107, 115], "to_rul": 14, "express": [14, 28, 34, 38, 115], "to_placeholder_rul": 14, "unless": [14, 34, 70, 95, 105, 115], "placehold": [14, 95], "set_regex": 14, "matching_column": [14, 110], "find_rul": 14, "dftfromcolumngener": 14, "dftcountentri": 14, "column_for_entry_count": 14, "column_name_for_resulting_count": 14, "version": [14, 37, 86, 95, 104, 107, 111, 115], "appear": [14, 112, 122], "dftaggregationoncolumn": 14, "column_for_aggreg": 14, "dftroundfloat": 14, "decim": [14, 55, 108, 117], "vari": [14, 24, 58, 85, 122], "dftsortcolumn": 14, "ascend": [14, 28, 34, 51], "dftfillna": [14, 37], "fill_valu": 14, "fill": [14, 18, 110], "na": 14, "dftcastcategoricalcolumn": 14, "cast": 14, "yield": [14, 36, 51], "value_transform": 15, "to_2d_arrai": 16, "arr": [16, 114], "inverse_transform": 16, "centr": [16, 40, 49, 65, 70], "subtract": 16, "after": [16, 28, 36, 37, 51, 54, 64, 65, 75, 76, 78, 87, 95, 105, 121], "remov": [16, 25, 29, 36, 63, 105, 107, 110, 111, 115, 121], "minmaxscal": 16, "with_mean": 16, "with_std": 16, "robustscal": 16, "quantile_rang": 16, "75": [16, 87, 112], "with_scal": 16, "with_cent": 16, "percentil": 16, "center": 16, "vb": 16, "va": 16, "symmetr": [16, 18, 54], "uniformli": 16, "median": [16, 26, 66], "valueonehotencod": 17, "seen": [17, 98], "throw": 17, "distancemetr": [18, 58], "named_tuple_a": 18, "pandasnamedtupl": [18, 22, 29, 58, 119], "named_tuple_b": 18, "singlecolumndistancemetr": 18, "distancematrixdfcach": 18, "pickle_path": [18, 95, 111], "save_on_upd": [18, 95], "deferred_save_delay_sec": [18, 95], "persistentkeyvaluecach": [18, 95, 96, 97], "tvalu": [18, 51, 95, 98], "matric": [18, 75, 76], "under": [18, 28, 29, 34, 92, 95, 96, 97, 122], "absenc": [18, 95, 96, 97], "retriev": [18, 30, 34, 43, 69, 87, 95, 96, 97, 107, 114], "lookup": [18, 95, 96, 97, 114], "num_unfilled_entri": 18, "get_all_cach": 18, "cacheddistancemetr": 18, "key_value_cach": 18, "cachedvalueprovidermixin": [18, 95], "fill_cach": 18, "df_indexed_by_id": [18, 58], "member": [18, 26, 51, 112, 115], "linearcombinationdistancemetr": [18, 58], "hellingerdistancemetr": 18, "check_input": 18, "euclideandistancemetr": 18, "identitydistancemetr": 18, "relativebitwiseequalitydistancemetr": 18, "check_input_valu": 18, "input_valu": 18, "ensemblevectormodel": 19, "num_process": [19, 21, 51], "compute_all_predict": 19, "aggregate_predict": [19, 21], "predictions_data_fram": [19, 21], "ensembleregressionvectormodel": [19, 21], "is_regression_model": [19, 67, 121], "ensembleclassificationvectormodel": 19, "ensemble_bas": 20, "averagingvectorregressionmodel": 21, "vectormodelcrossvalidationdata": [22, 34], "trained_model": 22, "tmodel": [22, 28], "eval_data_list": 22, "tevaldata": [22, 28, 29], "predicted_var_nam": [22, 29, 33, 34, 63, 65, 93, 121], "test_indices_list": 22, "tevalstat": [22, 23, 28, 29], "tevalstatscollect": [22, 28], "iter_input_output_ground_truth_tupl": [22, 29], "track_metr": [22, 93], "tracking_context": [22, 28], "trackingcontext": [22, 28, 90, 92, 93], "crossvalidationsplitt": 22, "cross": [22, 28, 36, 51, 72], "create_fold": 22, "num_fold": 22, "numfold": 22, "crossvalidationsplitterdefault": 22, "num_split": 22, "crossvalidationsplitternest": 22, "test_fract": [22, 28], "nest": [22, 23, 103, 115, 117], "return_trained_model": 22, "regressionevaluatorparam": [22, 28, 29, 72], "default_splitter_random_se": 22, "default_splitter_shuffl": 22, "deep": [22, 63, 82], "evalmodel": [22, 29], "randomse": [22, 29], "vectormodelcrossvalid": [22, 28], "metricsdictprovid": [22, 29, 30, 51, 89], "tcrossvaldata": [22, 28], "for_model": 22, "vectorclassificationmodelcrossvalid": [22, 28], "vectorregressionmodelcrossvalid": [22, 28], "create_metrics_dict_provid": [22, 29], "vectorregressionmodelcrossvalidationdata": [22, 28], "vectorregressionmodelevaluationdata": [22, 28, 29, 33], "regressionevalstat": [22, 26, 28, 29], "regressionevalstatscollect": [22, 26, 28], "classificationevalstatscollect": [22, 24, 28], "tmetric": [23, 24, 25], "add_metr": 23, "get_al": 23, "alia": [23, 38, 119], "metricsdict": 23, "deprec": [23, 104], "futur": [23, 85, 111], "attribut": [23, 24, 25, 26, 58, 66, 95, 107, 111, 115, 120], "compute_value_for_eval_stat": [23, 24, 25, 26], "get_paired_metr": [23, 24], "plot": [23, 24, 26, 28, 29, 33, 34, 36, 42, 43, 44, 54, 65, 87, 104], "has_finite_bound": 23, "evalstatscollect": [23, 24, 26], "eval_stats_list": [23, 24, 26], "metric_nam": [23, 28, 36, 51], "get_metric_nam": 23, "get_metr": 23, "get_metric_by_nam": 23, "has_metr": 23, "mean_metrics_dict": 23, "subtitl": [23, 24, 26, 28, 34], "cdf": [23, 28, 112], "cdf_complementari": [23, 28, 112], "proport": [23, 54, 63, 64], "figur": [23, 24, 26, 28, 34, 36, 65, 87, 90, 92, 93, 105, 112, 116], "histogram": [23, 28], "densiti": [23, 112], "estim": [23, 112], "cumul": [23, 28, 112], "complementari": [23, 28, 112], "statist": [23, 25, 29, 30, 87, 112], "percent": 23, "frequenc": [23, 24, 63, 64, 66, 94], "seaborn": 23, "histplot": [23, 112], "pydata": [23, 37], "plot_scatt": 23, "metric_name_x": 23, "metric_name_i": 23, "plot_heat_map": 23, "field": [23, 88, 119], "get_global_stat": 23, "getcombinedevalstat": 23, "get_combined_eval_stat": [23, 24, 26], "predictionevalstat": [23, 24, 26], "y_predict": [23, 24, 26, 29, 66], "y_true": [23, 24, 26, 29, 66], "dimension": [23, 45, 63, 70, 75, 76, 121, 122], "add_al": 23, "mean_stat": 23, "evalstatsplot": [23, 24, 26, 28], "create_figur": [23, 24, 26], "classificationmetr": [24, 26, 29, 32], "requires_prob": 24, "compute_valu": [24, 25, 26, 66], "y_predicted_class_prob": 24, "classificationmetricaccuraci": 24, "classificationmetricbalancedaccuraci": 24, "classificationmetricaccuracywithoutlabel": 24, "probability_threshold": 24, "zero_valu": 24, "score": [24, 26, 34, 87], "ones": [24, 67, 115], "classificationmetricaccuracymaxprobabilitybeyondthreshold": 24, "countabl": 24, "beyond": [24, 87], "classificationmetricgeometricmeanoftrueclassprob": 24, "reach": [24, 36, 96, 122], "classificationmetricrelfreqmaxprobabilitybeyondthreshold": 24, "binaryclassificationmetr": 24, "positive_class_label": 24, "binaryclassificationmetricprecis": 24, "binaryclassificationmetricrecal": 24, "binaryclassificationmetricf1scor": 24, "binaryclassificationmetricrecallforprecis": 24, "zerovalu": 24, "posit": [24, 26, 29, 41, 49, 54], "binaryclassificationmetricprecisionthreshold": 24, "denomin": [24, 94], "binaryclassificationmetricrecallthreshold": 24, "create_default_binary_classification_metr": 24, "binary_positive_label": [24, 29], "__guess": [24, 29], "default_multiclass_classification_metr": 24, "guess": [24, 29], "occurr": [24, 110], "binary_classification_positive_label_candid": 24, "regardless": [24, 93, 107, 115], "get_confusion_matrix": 24, "confusionmatrix": 24, "get_binary_classification_probability_threshold_variation_data": 24, "binaryclassificationprobabilitythresholdvariationdata": 24, "get_accuraci": 24, "get_misclassified_indic": 24, "title_add": [24, 26, 112], "plot_precision_recall_curv": 24, "binaryclassificationcount": 24, "is_positive_predict": 24, "is_positive_ground_truth": 24, "zero_denominator_metric_valu": 24, "from_probability_threshold": 24, "from_eval_stat": 24, "get_precis": 24, "get_recal": 24, "get_f1": 24, "get_rel_freq_posit": 24, "plot_precision_recal": 24, "plot_count": 24, "classificationevalstatsplotconfusionmatrix": 24, "classificationevalstatsplotprecisionrecal": 24, "classificationevalstatsplotprobabilitythresholdprecisionrecal": 24, "classificationevalstatsplotprobabilitythresholdcount": 24, "clusterlabelsevalstat": 25, "default_metr": 25, "numclust": 25, "av_siz": 25, "averageclusters": 25, "median_s": 25, "medianclusters": 25, "stddev_siz": 25, "clustersizestd": 25, "min_siz": 25, "minclusters": 25, "max_siz": [25, 66], "maxclusters": 25, "noise_s": 25, "noiseclusters": 25, "get_distribution_summari": 25, "clusteringunsupervisedmetr": 25, "clusteringunsupervisedevalstat": [25, 30], "removednoiseunsupervisedmetr": 25, "worstvalu": 25, "calinskiharabaszscor": 25, "daviesbouldinscor": 25, "silhouettescor": 25, "from_model": 25, "clustering_model": 25, "clusteringsupervisedmetr": 25, "clusteringsupervisedevalstat": [25, 30], "removedcommonnoisesupervisedmetr": 25, "true_label": [25, 30], "vmeasurescor": 25, "adjustedrandscor": 25, "fowlkesmallowsscor": 25, "adjustedmutualinfoscor": 25, "labels_with_removed_common_nois": 25, "regressionmetr": [26, 29, 32, 66], "compute_error": 26, "compute_abs_error": 26, "regressionmetricma": 26, "mae": 26, "regressionmetricms": [26, 51], "mse": 26, "regressionmetricrms": 26, "rmse": 26, "regressionmetricrrs": 26, "rrse": 26, "regressionmetricr2": 26, "r2": [26, 34], "regressionmetricpcc": 26, "pearson": 26, "correl": 26, "coeffici": 26, "aka": 26, "r": [26, 28, 34, 54, 110, 112], "pcc": 26, "regressionmetricstddeva": 26, "deviat": [26, 69, 108, 112], "absolut": [26, 41, 69, 94, 116], "stddeva": 26, "regressionmetricmediana": 26, "mediana": 26, "regressionmetricfrombinaryclassificationmetr": 26, "classification_metr": 26, "class_gener": 26, "classgener": 26, "compute_class": 26, "predicted_valu": 26, "regressor": 26, "get_metric_qualifi": 26, "short": [26, 76, 85], "classgeneratorpositivebeyond": 26, "min_value_for_posit": 26, "heatmapcolormapfactori": 26, "create_color_map": 26, "min_sample_weight": 26, "total_weight": [26, 46], "num_quantization_level": 26, "heatmapcolormapfactorywhitetor": 26, "continu": [26, 37], "default_regression_metr": 26, "heatmap_colormap_factori": 26, "heatmap_diagonal_color": 26, "green": [26, 112], "heatmap_error_boundary_valu": 26, "heatmap_error_boundary_color": 26, "scatter_plot_point_color": 26, "compute_ms": 26, "squar": [26, 41, 65], "compute_rrs": 26, "root": [26, 105, 107], "compute_pcc": 26, "compute_r2": 26, "compute_ma": 26, "compute_rms": 26, "compute_std_dev_a": 26, "create_eval_stats_collect": 26, "plot_error_distribut": 26, "histogramplot": [26, 112], "titl": [26, 112], "plot_scatter_ground_truth_predict": 26, "scatter": [26, 28], "plot_heatmap_ground_truth_predict": 26, "60": [26, 28, 112], "error_boundari": 26, "throughout": 26, "heatmap": 26, "diagon": [26, 112], "current": [26, 28, 51, 96, 101, 107, 116, 117, 121], "newli": [26, 87, 95], "regressionevalstatsplot": [26, 28], "regressionevalstatsploterrordistribut": 26, "regressionevalstatsplotheatmapgroundtruthpredict": 26, "regressionevalstatsplotscattergroundtruthpredict": 26, "eval_stats_regress": 27, "eval_stats_bas": 27, "eval_stats_clust": 27, "workflow": 28, "create_vector_model_evalu": 28, "is_regress": 28, "test_data": [28, 29], "vectorregressionmodelevalu": [28, 29], "create_vector_model_cross_valid": 28, "create_evaluation_util": 28, "regressionmodelevalu": [28, 72], "eval_model_via_evalu": 28, "plot_target_distribut": 28, "normalize_plot": 28, "evaluationresultcollector": 28, "resultwrit": [28, 105], "is_plot_creation_en": 28, "add_figur": 28, "add_data_frame_csv_fil": 28, "child": [28, 53], "added_filename_prefix": 28, "evalstatsplotcollector": 28, "tevalstatsplot": 28, "add_plot": 28, "create_plot": 28, "result_collector": 28, "regressionevalstatsplotcollector": 28, "classificationevalstatsplotcollector": 28, "modelevalu": 28, "tevalu": 28, "tcrossvalid": 28, "accord": [28, 58, 72, 87], "howev": [28, 29, 72, 111], "taken": [28, 37, 72, 88, 107, 111], "create_evalu": 28, "off": 28, "create_cross_valid": 28, "log_result": 28, "additional_evaluation_on_training_data": 28, "write_eval_stat": 28, "tracked_experi": [28, 29, 93], "trackedexperi": [28, 29, 89, 90, 92, 93], "cross_valid": 28, "show": [28, 33, 112, 116], "writer": [28, 105], "filenam": [28, 90, 92, 93, 95, 105, 111], "write_individual_result": 28, "sort_column": 28, "sort_ascend": 28, "sort_column_move_to_left": 28, "also_include_unsorted_result": 28, "also_include_cross_val_global_stat": 28, "visitor": 28, "modelcomparisonvisitor": 28, "write_visitor_result": 28, "write_csv": 28, "modelcomparisondata": 28, "usecrossvalid": 28, "summari": 28, "fact": [28, 54, 122], "sortcolumn": 28, "move": [28, 54, 70], "left": [28, 52], "unsort": 28, "tabl": [28, 51, 52, 95, 96], "know": [28, 121], "compare_models_cross_valid": 28, "subtitle_prefix": 28, "multidatamodelevalu": [28, 32], "io_data_dict": 28, "key_nam": 28, "meta_data_dict": 28, "test_io_data_dict": 28, "inputoutputdatadict": 28, "superset": 28, "model_factori": [28, 32, 36, 51], "write_per_dataset_result": 28, "column_name_for_model_rank": 28, "rank_max": 28, "add_combined_eval_stat": 28, "create_metric_distribution_plot": 28, "create_combined_eval_stats_plot": 28, "distribution_plots_cdf": 28, "distribution_plots_cdf_complementari": 28, "regressionmultidatamodelcomparisondata": 28, "classificationmultidatamodelcomparisondata": 28, "correctli": [28, 69, 75], "subdirectori": 28, "rank": 28, "els": 28, "overal": [28, 87, 103], "results_by_model_nam": 28, "vectormodelevalu": [28, 29], "iter_evaluation_data": 28, "get_best_model_nam": 28, "get_best_model": 28, "vectormodelbas": [28, 29, 32, 92, 93, 121], "visit": 28, "collect_result": 28, "modelcomparisonvisitoraggregatedfeatureimport": 28, "feature_agg_regex": 28, "write_figur": [28, 105], "write_data_frame_csv": 28, "exactli": [28, 34, 51], "w": [28, 34, 85, 107, 115], "_d": [28, 34], "caus": [28, 34, 69, 115, 117], "foo_1": [28, 34, 37], "foo_2": [28, 34], "bar_1": [28, 34], "bar_2": [28, 34], "bar": [28, 34, 37, 110, 112], "plot_feature_import": [28, 34], "get_feature_import": [28, 34], "featureimport": [28, 34], "multidatamodelcomparisondata": 28, "all_results_df": 28, "mean_results_df": 28, "agg_results_df": 28, "eval_stats_by_model_nam": 28, "dataset_nam": 28, "model_name_to_string_repr": 28, "get_model_nam": 28, "get_model_descript": 28, "get_eval_stats_list": 28, "iter_model_result": 28, "create_distribution_plot": 28, "heat": [28, 112], "trackingmixin": [29, 51, 93], "compute_metr": [29, 51], "previous": [29, 38, 51, 56, 87, 94, 95, 121, 122], "metricsdictproviderfromfunct": 29, "compute_metrics_fn": 29, "vectormodelevaluationdata": 29, "stats_dict": 29, "eval": 29, "input_data": 29, "remove_model_and_data": 29, "get_data_fram": [29, 34, 51, 116], "modify_input_df": [29, 33], "output_col_name_overrid": [29, 33], "y_error": 29, "y_abs_error": 29, "queri": [29, 33, 110], "resultset": [29, 33], "overrid": [29, 69, 70, 115, 121], "create_result_set": 29, "regression_result_set_factori": [29, 33], "result_set": [29, 31], "regressionresultset": [29, 33], "queryabl": 29, "interact": [29, 33], "fractional_split_random_se": 29, "fractional_split_shuffl": 29, "fractionalsplittestfract": 29, "get_data_splitt": 29, "set_data_splitt": 29, "set_tracked_experi": [29, 93], "computemetr": 29, "on_training_data": 29, "held": 29, "output_data_frame_transform": 29, "from_dict_or_inst": [29, 87], "vectorregressionmodelevaluatorparam": 29, "testdata": 29, "compute_test_data_output": 29, "groundtruth": 29, "get_misclassified_inputs_data_fram": 29, "tripl": 29, "detect": 29, "vectorclassificationmodelevaluatorparam": 29, "rulebasedvectorclassificationmodelevalu": 29, "coincid": [29, 61, 67, 121], "lead": [29, 70, 88, 105], "rulebasedvectorregressionmodelevalu": 29, "clusteringmodelevalu": 30, "tclusteringevalstat": 30, "clusteringmodelunsupervisedevalu": 30, "holder": 30, "wish": 30, "calcul": [30, 94], "clusteringmodelsupervisedevalu": 30, "metric_comput": [31, 36], "evaluator_clust": 31, "metriccomputationresult": 32, "metric_valu": [32, 36, 51], "metriccomput": [32, 36], "metriccomputationmultidata": 32, "ev_util": 32, "use_combined_eval_stat": 32, "ipython": 33, "_show_df": 33, "overridden": [33, 69, 75, 78, 84, 115], "environ": [33, 107], "sql": [33, 110], "syntax": [33, 110], "duckdb": [33, 110], "instal": [33, 105, 110], "claus": [33, 110], "exclud": [33, 34, 110, 115], "keyword": [33, 51, 66, 87, 110], "content": [33, 52, 90, 92, 93, 102, 105, 112], "col_name_predict": 33, "col_name_ground_truth": 33, "from_regression_eval_data": 33, "col_name_error": 33, "col_name_abs_error": 33, "feature_importance_dict": 34, "get_feature_importance_dict": [34, 63], "get_sorted_tupl": 34, "revers": [34, 54, 69], "descend": 34, "come": [34, 95], "featureimportanceprovid": [34, 36, 63], "aggregatedfeatureimport": 34, "feature_agg_reg_ex": 34, "getfeatureimport": 34, "get_aggregated_feature_importance_dict": 34, "get_aggregated_feature_import": 34, "compute_permutation_feature_importance_dict": 34, "num_repeat": 34, "exclude_input_preprocessor": 34, "num_job": 34, "aggregatedpermutationfeatureimport": 34, "aggregated_feature_import": 34, "exclude_model_input_preprocessor": 34, "model_evalu": 34, "permut": 34, "help": [34, 103], "discard": [34, 36, 37, 95], "job": 34, "parallel": [34, 51, 54, 75, 76], "parallelis": 34, "joblib": [34, 95, 111], "parallel_backend": 34, "processor": 34, "add_cross_validation_data": 34, "cross_val_data": 34, "rfe": 35, "feature_select": [36, 52], "rfestep": 36, "rferesult": 36, "get_sorted_step": 36, "elimin": 36, "worst": 36, "get_selected_featur": 36, "get_num_features_arrai": 36, "get_metric_values_arrai": 36, "plot_metric_valu": 36, "vs": 36, "recursivefeatureeliminationcv": 36, "min_featur": 36, "recurs": [36, 111, 115], "repeat": [36, 58], "minfeatur": 36, "less": [36, 96, 98, 114], "markedli": 36, "rfecv": 36, "averag": [36, 85, 87, 112, 116], "those": [36, 61, 67], "smallest": [36, 63, 64, 98, 114], "remove_input_preprocessor": [36, 121], "minims": 36, "maximis": [36, 51], "outcom": 36, "similar": [36, 45, 82], "recursivefeatureelimin": 36, "duplicatecolumnnamesexcept": 37, "presenc": 37, "consum": 37, "featuregeneratorfactori": [37, 122], "regist": [37, 38, 107, 122], "include_generated_categorical_rul": [37, 38], "is_categorical_featur": 37, "get_generated_column_nam": 37, "recent": [37, 54], "to_dft": 37, "fit_gener": 37, "columns_to_flatten": 37, "columnmatch": [37, 110], "keep_other_column": 37, "chainedfeaturegener": 37, "last": [37, 76, 82, 98, 110, 121], "featuregeneratorfromnamedtupl": [37, 58], "except_column": 37, "verify_column_nam": 37, "normalisationrul": 37, "said": 37, "vec1": 37, "vec2": 37, "dim1": 37, "dim2": 37, "vec1_": 37, "i1": 37, "vec2_": 37, "i2": 37, "column_gen": 37, "columngen": [37, 52], "target_column": 37, "target_column_bin": 37, "intervalindex": 37, "target_column_in_features_df": 37, "t_1": 37, "t_n": 37, "empir": [37, 54, 57], "phase": [37, 121], "request": [37, 96], "_distribution_": 37, "t_i": 37, "_distribut": 37, "Being": 37, "cut": 37, "targetcolumn": 37, "target_feature_gener": 37, "input_feature_gener": 37, "use_target_feature_generator_for_train": 37, "targetfeaturegener": 37, "bypass": [37, 82], "thereof": 37, "featuregeneratornamark": 37, "value_a": 37, "value_na": 37, "conjunct": [37, 107, 121], "flattened_feature_gener": 37, "foo_0": 37, "use_singleton": 38, "registri": 38, "singleton": [38, 107], "available_featur": 38, "referenc": [38, 49, 122], "get_feature_gener": [38, 121], "getnam": 38, "usesingleton": 38, "feature_generators_or_nam": 38, "commonli": 38, "add_featur": 38, "get_multi_feature_gener": 38, "create_feature_transformer_normalis": 38, "feature_generator_registri": 39, "geoanalyt": [40, 41, 42, 43, 44, 45, 46, 49, 50, 52], "geocoordcluster": 40, "fit_geo_coord": 40, "geo_coord": [40, 48], "geocoord": [40, 41], "clusters_indic": 40, "outlier": 40, "greedyagglomerativegeocoordcluster": 40, "max_min_distance_for_merge_m": 40, "max_distance_m": 40, "lc": [40, 41], "localcoordinatesystem": [40, 49], "metr": [40, 41, 49], "smaller": [40, 45, 54, 98, 112, 114], "dim": [40, 43, 55], "localpoint": 40, "xy": 40, "search_radius_m": 40, "sklearngeocoordcluster": 40, "euclidian": 40, "clusters_local_point": 40, "dbscangeocoordcluster": 40, "ep": 40, "min_sampl": 40, "neighbourhood": 40, "space": 40, "dbscan": 40, "geograph": [41, 49, 50], "longitude_per_m": 41, "latitud": [41, 49], "latitude_per_m": 41, "approximate_squared_dist": 41, "p1": [41, 51, 54], "p2": 41, "longitud": [41, 49], "approxim": [41, 70, 88], "m\u00b2": 41, "closest_point_on_seg": 41, "search_po": 41, "segpoint1": 41, "segpoint2": 41, "segment": [41, 112], "connect": [41, 82, 96, 97], "closest": [41, 98, 114], "searchpo": 41, "orient": 41, "angl": 41, "lat": [41, 49, 50], "lon": [41, 49, 50], "rad": 41, "abs_angle_differ": 41, "a1": 41, "a2": 41, "pi": 41, "closest_point_on_polylin": 41, "polylin": 41, "search_orientation_angl": 41, "max_angle_differ": 41, "find": [41, 46, 98, 114], "maxanglediffer": 41, "searchorientationangl": 41, "opt_point": 41, "opt_dist": 41, "opt_segment_start_idx": 41, "wgs84": 41, "latlon": 41, "distance_to": 41, "gps_posit": 41, "squared_distance_to": 41, "local_coord": [41, 48], "mean_coord": 41, "gpstracepoint": 41, "georect": [41, 50], "min_lat": 41, "min_lon": 41, "max_lat": 41, "max_lon": 41, "from_circl": 41, "centre_lat": 41, "centre_lon": 41, "radius_m": [41, 49], "rectangl": 41, "circular": 41, "area": [41, 43, 49, 112], "geopanda": [42, 43, 44, 45, 46, 48], "coordinateeuclideancluster": 42, "geodataframewrapp": [42, 43, 44, 46], "geospati": [42, 46], "clusteringmodel": 42, "loadsaveinterfac": [42, 95], "to_geodf": [42, 43, 44, 46], "cr": [42, 43, 46], "epsg": [42, 43, 46], "3857": [42, 43, 46], "export": 42, "geodatafram": [42, 43, 44, 45, 46], "multipoint": [42, 43, 44, 45], "By": [42, 46, 69, 112, 115, 122], "pseudo": [42, 46], "mercat": [42, 46], "as_multipoint": 42, "readabl": [42, 107], "coordinateclust": 42, "shapefil": [42, 43], "geometri": [42, 43, 44, 47, 49], "include_nois": [42, 43], "color": [42, 112], "sklearncoordinateclust": 42, "visual": 43, "polygonannotatedcoordin": 43, "ground_truth_polygon": 43, "polygon": [43, 45, 49], "region": 43, "spread": 43, "cover": [43, 49], "get_coordinates_label": 43, "validate_coordin": 44, "extract_coordinates_arrai": 44, "alpha_shap": 45, "alpha": [45, 65, 112], "edg": [45, 46], "concav": 45, "influenc": 45, "gooey": 45, "border": 45, "fall": 45, "inward": 45, "much": 45, "delaunay_graph": 46, "edge_weight": 46, "scipi": 46, "spatial": 46, "euclidean": 46, "delaunai": 46, "triangul": 46, "networkx": 46, "networx": 46, "constant": [46, 54, 65, 117], "coordinate_pair_kei": 46, "spanningtre": 46, "tree_find": 46, "minimum_spanning_tre": 46, "subgraph": 46, "num_edg": 46, "mean_edge_weight": 46, "coordinatespanningtre": 46, "enhanc": 46, "multi_line_str": 46, "multilinestr": 46, "coordinate_clustering_ground_truth": 47, "coordinate_clust": 47, "graph": 47, "map_til": 48, "geo_clust": 48, "geo": 49, "vice": [49, 55], "versa": [49, 55], "utm": 49, "get_local_coord": 49, "get_lat_lon": 49, "local_x": 49, "local_i": 49, "localhexagonalgrid": 49, "hexagon": 49, "grid": [49, 51], "hex": [49, 102], "toward": 49, "east": 49, "north": 49, "odd": [49, 115], "shift": [49, 82], "half": [49, 54], "right": 49, "www": 49, "redblobgam": 49, "get_hexagon": 49, "x_column": 49, "y_row": 49, "get_min_hexagon_column": 49, "get_max_hexagon_column": 49, "get_min_hexagon_row": 49, "get_max_hexagon_row": 49, "get_hexagon_coord_span_for_bounding_box": 49, "min_x": 49, "min_i": 49, "max_x": 49, "max_i": 49, "mincol": 49, "min_row": 49, "maxcol": 49, "max_row": 49, "span": 49, "get_hexagon_coords_for_point": 49, "fix_polygon": 49, "poli": 49, "multipolygon": 49, "maxareadiff": 49, "invalid": [49, 95, 111], "stackoverflow": 49, "35110632": 49, "intersect": [49, 118], "constraint": 49, "maptil": 50, "tx": 50, "ty": 50, "rect": 50, "zoom": 50, "13": [50, 82], "iter_tile_coordinates_in_rect": 50, "get_tiles_in_rect": 50, "get_til": 50, "get_tile_coordin": 50, "iter_param_combin": 51, "hyper_param_valu": 51, "iter_subset": 51, "parametercombinationskipdecid": 51, "told": 51, "basi": 51, "tell": 51, "is_skip": 51, "iff": [51, 118], "parametercombinationequivalenceclassvaluecach": 51, "hyper": 51, "parametersmetricscollect": 51, "csv_path": 51, "sort_column_nam": 51, "increment": [51, 94], "sortcolumnnam": 51, "overwrit": [51, 117], "add_valu": 51, "csvpath": 51, "gridsearch": 51, "parameter_opt": 51, "csv_results_path": 51, "incremental_skip_exist": 51, "parameter_combination_skip_decid": 51, "model_save_directori": 51, "directori": [51, 95, 105], "redund": 51, "serial": 51, "prepend": [51, 93, 102], "gridsearch_": 51, "metrics_evalu": 51, "csvresultspath": 51, "lower": [51, 66, 114], "param_nam": 51, "default_metric_nam": 51, "default_higher_is_bett": 51, "bestparam": 51, "get_best_param": 51, "higher_is_bett": 51, "d": [51, 54, 69, 70, 95, 100, 103, 107, 115], "v": [51, 112], "sahyperopt": 51, "ops_and_weight": [51, 54], "state": [51, 54, 76, 85, 87, 111], "parameterchangeoper": 51, "initial_paramet": 51, "metric_to_optimis": 51, "minimise_metr": 51, "collect_data_fram": 51, "parameter_combination_equivalence_class_value_cach": 51, "p0": [51, 54], "initialparamet": 51, "simul": [51, 54], "anneal": [51, 54], "regularli": 51, "collectdatafram": 51, "duplic": [51, 110, 114], "inferior": 51, "delta": [51, 54], "sastat": [51, 54], "compute_cost_valu": [51, 54], "sacostvaluenumer": [51, 54], "scratch": [51, 54], "get_state_represent": [51, 54], "compact": [51, 54, 107], "archiv": [51, 54], "hitherto": [51, 54], "applystaterepresent": [51, 54], "apply_state_represent": [51, 54], "getstaterepresent": [51, 54], "necessarili": [51, 54, 121], "sole": [51, 54], "optims": [51, 54], "thereaft": [51, 54], "saoper": [51, 54], "apply_state_chang": [51, 54], "cost_delta": [51, 54], "sacostvalu": [51, 54], "choose_param": [51, 54], "greedili": [51, 54], "costvalu": [51, 54], "chosen": [51, 54], "max_step": [51, 54], "durat": [51, 54, 69], "collect_stat": [51, 54], "get_simulated_ann": 51, "simulatedann": [51, 54], "tkei": [51, 95, 98], "optionsgener": 51, "iter_opt": 51, "optionsproduct": 51, "o1": 51, "optionsgeneratorbas": 51, "back": [51, 96], "optionsallof": 51, "optionsoneof": 51, "optionsminmaxof": 51, "n_min": 51, "n_max": 51, "optionsoneornoneof": 51, "optionsnof": 51, "optionssubset": 51, "empti": [51, 67, 95, 96, 98, 103, 105, 110, 111, 114, 121], "powerset": 51, "autogener": 52, "link": 52, "submodul": 52, "subpackag": 52, "naive_bay": 52, "sklearn_quantil": 52, "feature_import": 52, "tensor_model": 52, "hyperopt": 52, "nearest_neighbor": 52, "minizinc": 52, "local_search": 52, "multi_model": 52, "distance_metr": [52, 58], "pytorch_lightn": [52, 61], "lightgbmvectorregressionmodel": 53, "max_depth": 53, "min_child_sampl": 53, "importance_typ": 53, "featureimportanceprovidersklearnregressionmultipleonedim": [53, 63, 65, 123], "depth": 53, "learner": 53, "boost": [53, 123], "readthedoc": [53, 123], "io": [53, 104, 123], "latest": [53, 95, 123], "pythonapi": 53, "lgbmregressor": 53, "lightgbmvectorclassificationmodel": 53, "use_balanced_class_weight": [53, 63, 64, 123], "featureimportanceprovidersklearnclassif": [53, 63, 64, 123], "lgbmclassifi": 53, "highlight": 53, "satemperatureschedul": 54, "temperatur": 54, "goe": 54, "degree_of_complet": 54, "satemperatureschedulefix": 54, "schedul": 54, "satemperaturescheduleexponenti": 54, "t0": 54, "t1": [54, 103], "exponent_factor": 54, "exponenti": 54, "factor": [54, 82, 85, 116], "multipli": [54, 65], "expon": 54, "faster": [54, 122], "reverse_sigmoid": [54, 108], "v0": 54, "v1": [54, 121], "steep": 54, "mid_degre": 54, "satemperatureschedulereversesigmoid": 54, "sigmoid": [54, 71, 78, 108], "curv": 54, "logist": [54, 64, 65], "roughli": 54, "slope": 54, "inflect": 54, "suffici": [54, 87], "pronounc": 54, "linear": [54, 58, 65, 85, 112], "decai": 54, "satemperatureschedulereversesigmoidsymmetr": 54, "cost_delta_for_symmetri": 54, "variant": [54, 87, 95], "satemperatureschedulepow": 54, "saprobabilityfunct": 54, "params_dict": 54, "saprobabilityfunctionlinear": 54, "linearli": [54, 98], "saprobabilityfunctionreversesigmoid": 54, "saprobabilityfunctionconst": 54, "saprobabilityschedul": 54, "reference_cost_delta": 54, "probability_funct": 54, "referencecostdelta": 54, "probabilityfunct": 54, "immut": 54, "tsastat": 54, "apply_cost_chang": 54, "sachain": 54, "state_factori": 54, "log_stat": 54, "apply_best_st": 54, "plot_seri": [54, 116], "series_nam": 54, "getseri": 54, "get_seri": [54, 116], "collectstat": 54, "costdelta": 54, "bestcostvalu": 54, "schedule_factori": 54, "maxstep": 54, "choic": 54, "get_chain": 54, "paralleltemp": 54, "num_chain": 54, "log_cost_progress": 54, "temper": 54, "robust": 54, "numchain": 54, "drawn": 54, "equidist": 54, "plotcostprogress": 54, "plot_cost_progress": 54, "costscal": 55, "cost_valu": 55, "significant_digit": [55, 117], "signific": [55, 117], "scaled_int": 55, "original_valu": 55, "scaled_float": 55, "scaled_valu": 55, "unscal": 55, "minizincproblem": 55, "create_mini_zinc_fil": 55, "os": 55, "open": [55, 115], "get_mini_zinc_cod": 55, "minizincsolv": 55, "osicbc": 55, "solver_time_second": 55, "fzn_output_path": 55, "solver": [55, 64, 65], "flatzinc": 55, "solve_path": 55, "mzn_path": 55, "log_info": 55, "debug": [55, 115], "solve_problem": 55, "keep_temp_fil": 55, "temporari": [55, 107], "mzv": 55, "get_last_solver_time_sec": 55, "extract_1d_array_from_output": 55, "string_identifi": 55, "extract_multi_dim_array_from_output": 55, "array_to_mini_zinc": 55, "element_cast": 55, "multivectorregressionmodel": 56, "predicted_variable_nam": [56, 121], "init": [56, 121], "categoricalnaivebayesvectorclassificationmodel": 57, "pseudo_count": 57, "naiv": 57, "bay": 57, "overfit": 57, "neighbor": 58, "neighborprovid": 58, "iter_potential_neighbor": 58, "allneighborsprovid": 58, "timerangeneighborsprovid": 58, "timestamps_column": 58, "past_time_range_dai": 58, "120": 58, "future_time_range_dai": 58, "abstractknnfind": 58, "find_neighbor": 58, "named_tupl": 58, "n_neighbor": 58, "cachingknearestneighboursfind": 58, "distancemetriccach": 58, "neighbor_provid": 58, "nearest": 58, "finder": 58, "speed": [58, 122], "composit": 58, "consecut": 58, "knn": 58, "get_cached_metr": 58, "cachedseriesdistancemetr": 58, "get_distance_seri": 58, "potential_neighbor_valu": 58, "knearestneighboursfind": 58, "knearestneighboursclassificationmodel": 58, "num_neighbor": 58, "neighbor_provider_factori": 58, "distance_based_weight": 58, "distance_epsilon": 58, "001": [58, 65, 87], "distance_metric_cach": 58, "democrat": 58, "vote": 58, "knearestneighboursregressionmodel": 58, "featuregeneratorneighbor": 58, "neighbor_attribut": 58, "max_by_column": 59, "standardis": 59, "vectordatascal": [59, 70], "data_fram": 59, "get_normalised_arrai": 59, "get_denormalised_arrai": 59, "pl_model": 60, "plwrappedmodel": 61, "lightningmodul": 61, "trainer": 61, "validation_fract": 61, "pltensortoscalarclassificationmodel": 61, "check_input_shap": [61, 67], "check_input_column": [61, 67, 121], "tensortoscalarclassificationmodel": [61, 67], "cnn": [61, 67, 76], "pltensortoscalarregressionmodel": 61, "tensortoscalarregressionmodel": [61, 67], "pltensortotensorclassificationmodel": 61, "tensortotensorclassificationmodel": [61, 67], "segreg": [61, 67], "predictionshap": [61, 67], "numlabel": [61, 67], "check_output_shap": [61, 67], "pltensortotensorregressionmodel": 61, "tensortotensorregressionmodel": [61, 67], "sklearn_regress": 62, "create_sklearn_model": 63, "model_constructor": [63, 64, 65], "output_transform": [63, 121], "str_sklearn_model": 63, "break": [63, 115], "indent": [63, 115], "actualfitparam": 63, "abstractsklearnvectorregressionmodel": 63, "built": 63, "with_sklearn_input_transform": 63, "sklearn_input_transform": 63, "with_sklearn_output_transform": 63, "sklearn_output_transform": 63, "get_sklearn_model": 63, "abstractsklearnmultidimvectorregressionmodel": [63, 65], "use_label_encod": [63, 64], "reciproc": [63, 64], "largest": [63, 64, 96, 98, 114], "get_param": [63, 98], "set_param": [63, 98], "featureimportanceprovidersklearnregressionmultidim": [63, 65], "hidden_layer_s": [64, 65], "adam": [64, 65, 87], "max_it": [64, 65], "early_stop": [64, 65], "n_iter_no_chang": [64, 65], "hidden": [64, 65, 75, 76, 78, 82, 85], "tanh": [64, 65, 71], "lbfg": [64, 65, 87], "sgd": [64, 65, 87], "reproduc": [64, 65], "gradient": [64, 65, 87, 123], "l": [64, 65, 82, 87, 115, 122], "bfg": [64, 65, 87], "epoch": [64, 65, 87], "mlpclassifi": 64, "neural_network": [64, 65], "sklearnmultinomialnbvectorclassificationmodel": 64, "sklearnsvcvectorclassificationmodel": 64, "sklearnlogisticregressionvectorclassificationmodel": 64, "sklearnkneighborsvectorclassificationmodel": 64, "sklearnrandomforestvectorregressionmodel": 65, "sklearnlinearregressionvectorregressionmodel": 65, "fit_intercept": 65, "intercept": 65, "term": [65, 76, 85, 93], "linear_model": 65, "linearregress": 65, "sklearnlinearridgeregressionvectorregressionmodel": 65, "tol": 65, "l2": 65, "regularis": [65, 82], "ridg": 65, "sklearnlinearlassoregressionvectorregressionmodel": 65, "0001": 65, "l1": 65, "lasso": 65, "sklearnmultilayerperceptronvectorregressionmodel": 65, "mlpregressor": 65, "sklearnsvrvectorregressionmodel": 65, "sklearnlinearsvrvectorregressionmodel": 65, "sklearngradientboostingvectorregressionmodel": 65, "sklearnkneighborsvectorregressionmodel": 65, "sklearnextratreesvectorregressionmodel": 65, "sklearndummyvectorregressionmodel": 65, "quantil": [65, 66], "sklearndecisiontreevectorregressionmodel": 65, "plot_graphviz_pdf": 65, "dot_path": 65, "dot": 65, "alongsid": 65, "render": [65, 111, 112, 117], "pdf": [65, 108], "suffix": [65, 75, 105], "randomforestquantileregressorvectorregressionmodel": 66, "confid": 66, "randomforestquantileregressor": 66, "predict_confidence_interv": 66, "var_nam": 66, "quantileregressionmetr": 66, "compute_confidence_interv": 66, "quantileregressionmetricaccuracyinconfidenceinterv": 66, "accuracyinci": 66, "quantileregressionmetricconfidenceintervalmeans": 66, "meansizeci": 66, "quantileregressionmetricconfidenceintervalmedians": 66, "mediansizeci": 66, "quantileregressionmetricrelfreqmaxsizeconfidenceinterv": 66, "everyth": [67, 107], "denot": 67, "inputtensorshap": 67, "outputtensorshap": 67, "n_row": [67, 110], "n_inputcolumn": 67, "n_outputcolumn": 67, "strip": [67, 105, 110], "invalidshapeerror": 67, "tensormodel": 67, "get_model_input_shap": 67, "get_model_output_shap": 67, "get_num_predicted_class": 67, "prediction_shap": 67, "convert_class_probabilities_to_predict": [67, 121], "predictclassprob": [67, 121], "predict_class_prob": [67, 121], "tensorshap": [67, 110], "torch_modul": 68, "torch_enum": 68, "torch_opt": 68, "torch_bas": 68, "torch_data": 68, "torch_eval_util": 68, "torchtext": 68, "torch_model": [68, 75, 76, 78, 79, 81, 82, 84, 85], "mcdropoutcapablennmodul": [69, 76, 79], "nn": [69, 71, 78, 81, 84, 85, 87], "mc": 69, "_dropout": 69, "infermcdropout": 69, "__call__": 69, "infer_mc_dropout": 69, "num_sampl": 69, "draw": [69, 112], "sd": 69, "torchmodel": [69, 81, 84, 87], "soundli": 69, "demand": 69, "createtorchmodul": 69, "set_torch_modul": 69, "set_normalisation_check_threshold": 69, "get_module_byt": 69, "byte": [69, 105], "set_module_byt": 69, "model_byt": 69, "get_torch_modul": 69, "create_torch_modul": [69, 84, 87], "torchdataset": [69, 70, 87, 88], "as_numpi": 69, "create_batch": 69, "mc_dropout_sampl": 69, "mc_dropout_prob": 69, "scale_output": 69, "scale_input": 69, "createbatch": 69, "too": [69, 103], "apply_sc": 69, "scaled_output": [69, 87], "torchmodelfittingstrategi": 69, "torchmodelfittingstrategydefault": 69, "best_epoch": [69, 87], "total_epoch": [69, 87], "nn_optimis": 69, "nnoptimis": [69, 75, 78, 81, 87], "traininginfo": [69, 87], "torchmodelfrommodulefactori": 69, "module_factori": 69, "torchmodelfrommodul": 69, "torchmodelfactoryfrommodul": 69, "torchautoregressiveresulthandl": 69, "build": [69, 115], "autoregress": 69, "clear_result": 69, "save_result": 69, "input_df": [69, 70], "picklabl": [69, 81, 95, 102], "ttorchvectorregressionmodel": 69, "coerc": 69, "trivial": 69, "with_output_tensoris": 69, "dependend": 69, "with_output_tensor_to_array_convert": 69, "output_tensor_to_array_convert": 69, "outputtensortoarrayconvert": 69, "unwant": [69, 115], "pad": [69, 122], "with_torch_data_set_provider_factori": 69, "torch_data_set_provider_factori": 69, "torchdatasetproviderfactori": 69, "torchdatasetproviderfactoryregressiondefault": 69, "with_data_frame_splitt": 69, "with_normalisation_check_threshold": 69, "exce": [69, 87], "with_autoregressive_result_handl": 69, "result_handl": 69, "inference_batch_s": 69, "handler": [69, 107], "restrict": [69, 96], "output_mod": [69, 84, 85, 87], "class_weight": [69, 75, 78, 84, 87], "ttorchvectorclassificationmodel": 69, "torchdatasetproviderfactoryclassificationdefault": 69, "create_data_set_provid": 69, "training_context": 69, "trainingcontext": [69, 121], "input_tensoris": [69, 70], "output_tensoris": [69, 70], "tensorise_dynam": [69, 70], "fly": 69, "precomput": 69, "memori": [69, 85, 92, 95, 96, 107], "model_output": [69, 87], "model_input": 69, "to_tensor": 70, "tensorscal": [70, 75], "denormalis": 70, "tensorscalercentreandscal": 70, "tensorscalerfromvectordatascal": 70, "vector_data_scal": 70, "tensorscalerident": 70, "tensorscalerfromdftsklearntransform": 70, "predefin": 70, "tensoriserdataframefloatvaluesmatrix": 70, "tensoriserclasslabelindic": 70, "datautil": [70, 75, 87], "split_into_tensor": [70, 75], "get_output_tensor_scal": [70, 75], "get_input_tensor_scal": [70, 75], "model_output_dim": [70, 75, 88], "vectordatautil": 70, "differing_output_normalisation_mod": 70, "differingoutputnormalisationmod": 70, "split_into_data_set": 70, "classificationvectordatautil": 70, "num_class": [70, 75], "iter_batch": [70, 88], "input_onli": [70, 88], "inputonli": [70, 88], "input_tensor_scal": 70, "output_tensor_scal": 70, "provide_split": [70, 88], "encompass": [70, 88], "remaind": [70, 87, 88], "get_model_output_dim": 70, "get_input_dim": 70, "rnn": [70, 75, 76], "tensortupl": 70, "manipul": 70, "simultan": [70, 103], "torchdatasetfromtensor": 70, "slice": [70, 75, 76, 85, 95, 98, 114], "devic": [70, 84], "torchdatasetfromdataframespretensoris": 70, "output_df": 70, "torchdatasetfromdataframesdynamicallytensoris": 70, "torchdatasetfromdatafram": 70, "torchdatasetproviderfromdatautil": 70, "data_util": 70, "torchdatasetproviderfromvectordatautil": 70, "tensortransform": [70, 87], "softmax": 71, "from_nam": [71, 87], "torch_function_from_ani": 71, "unnormalised_log_prob": 71, "fn": [71, 95, 105], "torchvectorregressionmodelevaluationutil": 72, "residualffn": [73, 81, 82], "seq": [73, 84, 85, 114, 122], "lstnet": [73, 75, 76], "lstnet_model": 74, "lstnet_modul": 74, "lstnetworkvectorclassificationmodel": 75, "num_input_time_slic": [75, 76, 85], "input_dim_per_time_slic": [75, 76], "num_convolut": [75, 76, 85], "num_cnn_time_slic": [75, 76, 85], "hid_rnn": [75, 76, 85], "hid_skip": [75, 76, 85], "hw_window": [75, 76], "hw_combin": [75, 76], "plu": [75, 76], "output_activ": [75, 76], "lstnetwork": [75, 76, 85], "architectur": [75, 82], "special": [75, 85, 122], "interpret": [75, 110, 115], "pertain": 75, "inputdimpertimeslic": [75, 76], "ck": [75, 76], "hidc": [75, 76], "highwai": [75, 76], "bilinear": [75, 76], "major": [75, 76, 112, 120, 123], "x_data": 75, "y_data": 75, "get_input_output_pair": 75, "long": [76, 85, 90, 92, 93, 95], "propos": 76, "lai": 76, "et": [76, 82], "al": [76, 82], "numinputtimeslic": 76, "numcnntimeslic": 76, "numconvolut": 76, "gru": [76, 85], "hidrnn": 76, "hidskip": 76, "dens": 76, "hwwindow": 76, "made": [76, 84, 85, 115, 121], "batchsiz": [76, 87], "numoutputtimeslic": 76, "outputdimpertimeslic": 76, "numclass": 76, "crossentropyloss": [76, 87], "num_output_time_slic": 76, "output_dim_per_time_slic": 76, "suit": 76, "latent": [76, 84, 85], "prior": [76, 87, 111, 121], "docstr": [76, 107], "compute_encoder_dim": 76, "get_encoder_dim": 76, "mlp_modul": 77, "multilayerperceptrontorchmodel": 78, "output_activation_funct": 78, "multilayerperceptronvectorregressionmodel": 78, "neuron": 78, "nnoptimiserdictparam": 78, "residualffn_modul": 80, "residualffn_model": 80, "residualfeedforwardnetworktorchmodel": 81, "bottleneck_dimension_factor": [81, 82], "use_batch_normalis": [81, 82], "residualfeedforwardnetworkvectorregressionmodel": 81, "residualfeedforwardnetwork": 82, "feed": 82, "residu": 82, "block": [82, 96, 107], "inspir": 82, "resnet": 82, "noth": [82, 94, 103], "reduc": [82, 117], "bottleneck": 82, "compromis": 82, "deactiv": 82, "covari": 82, "behind": 82, "wikipedia": 82, "articl": 82, "3d": 82, "chen": 82, "dongwei": 82, "nonlinear": 82, "entropi": 82, "februari": 82, "2020": 82, "193": 82, "doi": 82, "3390": 82, "e22020193": 82, "kiprijanovska": 82, "houseec": 82, "ahead": 82, "household": 82, "electr": 82, "energi": 82, "consumpt": 82, "forecast": 82, "januari": 82, "2672": 82, "en13102672": 82, "he": 82, "kaim": 82, "xiangyu": 82, "zhang": 82, "shaoq": 82, "ren": 82, "jian": 82, "sun": 82, "imag": [82, 110], "arxiv": 82, "1512": 82, "03385": 82, "cs": 82, "decemb": 82, "2015": 82, "1603": 82, "05027": 82, "juli": 82, "2016": 82, "ioff": 82, "sergei": 82, "christian": 82, "szegedi": 82, "1502": 82, "03167": 82, "march": 82, "seq_model": 83, "seq_modul": 83, "encoderdecodervectorregressionmodel": 84, "history_sequence_column_nam": 84, "history_sequence_vectoris": 84, "sequencevectoris": [84, 122], "history_sequence_variable_length": 84, "target_sequence_column_nam": 84, "target_sequence_vectoris": 84, "latent_dim": [84, 85], "encoder_factori": 84, "encoderfactori": [84, 85], "decoder_factori": 84, "decoderfactori": [84, 85], "decod": [84, 85, 122], "histori": [84, 85, 110, 122], "history_sequence_vector": 84, "inputtensoris": 84, "encoderdecodermodel": 84, "encoderdecodervectorclassificationmodel": 84, "encoderdecodermodul": [84, 85], "encoderprotocol": 85, "seq_length": 85, "history_featur": 85, "decoderprotocol": 85, "target_featur": 85, "target_length": 85, "target_seq_length": 85, "target_feature_dim": 85, "predictorprotocol": 85, "create_encod": 85, "create_decod": 85, "predictorfactori": 85, "predictor": 85, "create_predictor": 85, "linearpredictorfactori": 85, "mlppredictorfactori": 85, "rnnencodermodul": 85, "rnn_type": 85, "recurr": 85, "num_lay": 85, "rnntype": 85, "gate": 85, "lstm": 85, "dim_per_item": 85, "rnnencoderfactori": 85, "lstnetworkencod": 85, "lstnetworkencoderfactori": 85, "get_latent_dim": 85, "singletargetdecodermodul": 85, "predictor_factori": 85, "targetsequencedecodermodul": 85, "predictionmod": 85, "single_lat": 85, "outputmod": 85, "single_output": 85, "multi_lat": 85, "latentpassonmod": 85, "concat_input": 85, "no_lat": 85, "init_hidden": 85, "mostli": 85, "ablat": 85, "single_output_mean": 85, "multi_output": 85, "max_seq_length": 85, "targetsequencedecoderfactori": 85, "prediction_mod": 85, "latent_pass_on_mod": 85, "p_recurrent_dropout": 85, "singletargetdecoderfactori": 85, "dedic": 85, "variable_history_length": 85, "window_featur": 85, "window_length": 85, "dim_per_window_item": 85, "window": [85, 95, 112], "max_target_seq_length": 85, "backward": [86, 103], "asgd": 87, "adagrad": 87, "adadelta": 87, "adamax": 87, "rmsprop": 87, "rprop": 87, "from_name_or_inst": 87, "name_or_inst": 87, "start_epoch": 87, "reset": [87, 107], "getepochtrainloss": 87, "getvalidationmetr": 87, "compute_train_batch_loss": 87, "ground_truth": 87, "meth": 87, "get_epoch_train_loss": 87, "computetrainbatchloss": 87, "process_validation_batch": 87, "velid": 87, "get_validation_metr": 87, "start_evalu": 87, "get_validation_metric_nam": 87, "nnlossevaluatorfixeddim": 87, "criterion": 87, "validation_loss_evalu": 87, "validationlossevalu": 87, "output_dim_weight": 87, "get_training_criterion": 87, "mseloss": 87, "get_output_dim_weight": 87, "create_validation_loss_evalu": 87, "endvalidationcollect": 87, "start_validation_collect": 87, "ground_truth_shap": 87, "process_validation_result_batch": 87, "end_validation_collect": 87, "ordereddict": 87, "nnlossevaluatorregress": 87, "loss_fn": 87, "lossfunct": 87, "l2loss": 87, "validation_tensor_transform": 87, "apply_output_dim_weights_in_valid": 87, "validation_metric_nam": 87, "validationtensortransform": 87, "lossfn": 87, "l1loss": 87, "smoothl1loss": 87, "apply_output_dim_weight": 87, "nnlossevaluatorclassif": 87, "crossentropi": 87, "nll": 87, "negativeloglikelihood": 87, "create_criterion": 87, "get_validation_metric_kei": 87, "default_for_output_mod": 87, "get_class_weights_tensor": 87, "loss_evalu": 87, "train_fract": 87, "use_shrinkag": 87, "shrinkage_clip": 87, "optimiser_arg": 87, "rate": 87, "abort": 87, "shrinkag": 87, "norm": 87, "shrinkageclip": 87, "down": 87, "useshrinkag": 87, "removed_param": 87, "renamed_param": 87, "earlystoppingepoch": 87, "lossevalu": 87, "optimiserclip": 87, "optimiser_clip": 87, "optimiserlr": 87, "scaledoutput": 87, "trainfract": 87, "from_dict": 87, "from_either_dict_or_inst": 87, "nn_optimiser_dict_param": 87, "training_loss_sequ": 87, "validation_metric_sequ": 87, "get_training_loss_seri": 87, "get_validation_metric_seri": 87, "plot_al": 87, "torchtextdatasetfromdatafram": 88, "torchdatasetfromtorchtextdataset": 88, "inputfield": 88, "outputfield": 88, "torchdatasetproviderfromtorchtextdataset": 88, "trackedazuremlevalu": 89, "experiment_nam": [89, 92], "workspac": 89, "azureml": 89, "core": 89, "artifact": 89, "sdk": 89, "additional_logging_values_dict": [89, 90, 92, 93], "start_logging_kwarg": 89, "trackedazuremlexperi": 89, "azur": [89, 96], "clearmltrackingcontext": 90, "clearml": 90, "track_figur": [90, 92, 93], "track_text": [90, 92, 93], "clearmlexperi": 90, "project_nam": 90, "task_nam": 90, "clearml_track": 91, "mlflow_track": 91, "azure_track": 91, "tracking_bas": 91, "mlflowtrackingcontext": 92, "mlflowexperi": 92, "run_id": 92, "track_tag": 92, "tag_nam": 92, "tag_valu": 92, "tracking_uri": 92, "context_prefix": [92, 93], "add_log_to_all_context": 92, "uri": 92, "server": [92, 97], "begin_context": [92, 93], "begin_context_for_model": [92, 93], "end_context": [92, 93], "from_optional_experi": 93, "is_en": [93, 107], "dummytrackingcontext": 93, "tcontext": 93, "track_valu": 93, "values_dict": 93, "add_values_dict": 93, "unset_tracked_experi": 93, "begin_optional_tracking_context_for_model": 93, "henc": [93, 121], "paraqm": 93, "forc": 93, "relativefrequencycount": 94, "event": [94, 107, 116], "is_relevant_ev": 94, "nomin": 94, "relative_frequency_count": 94, "counter": 94, "get_relative_frequ": 94, "distributioncount": 94, "mutual": 94, "exclus": [94, 115], "occur": [94, 107], "get_distribut": 94, "weightedmean": 94, "get_weighted_mean": 94, "boxedvalu": 95, "inmemorykeyvaluecach": 95, "mycach": 95, "persistentlist": 95, "iter_item": 95, "delayedupdatehook": 95, "time_period_sec": 95, "periodically_executed_fn": 95, "happen": 95, "period": [95, 96], "eventu": 95, "timeperiodsec": 95, "busi": 95, "wait": 95, "loop": 95, "interfer": [95, 107], "correct": 95, "handle_upd": 95, "notifi": 95, "periodicupdatehook": 95, "check_interval_sec": 95, "no_update_time_period_sec": 95, "no_update_fn": 95, "periodic_fn": 95, "atom": 95, "noupdatefn": 95, "checkintervalsec": 95, "noupdatetimeperiodsec": 95, "sure": 95, "picklepersistentkeyvaluecach": 95, "defer": [95, 96], "manner": [95, 96], "deferredsavedelaysec": 95, "arriv": 95, "meantim": 95, "slicedpicklepersistentlist": 95, "pickle_base_nam": 95, "num_entries_per_slic": 95, "100000": 95, "picklebasenam": 95, "_slicex": 95, "clear": 95, "cache_exist": 95, "sqliteconnectionmanag": 95, "open_connect": 95, "sqlitepersistentkeyvaluecach": 95, "table_nam": [95, 96, 97], "deferred_commit_delay_sec": [95, 96], "key_typ": 95, "keytyp": 95, "max_key_length": [95, 97], "max_entries_for_commit": 95, "500": 95, "sqlite": 95, "databas": [95, 97], "pend": [95, 96], "transact": [95, 96], "commit": [95, 96, 101], "parametris": 95, "varchar": [95, 97], "finalis": 95, "sqlitepersistentlist": 95, "cache_factori": 95, "box_valu": 95, "tdata": 95, "recreat": 95, "unpickl": [95, 111], "persistcach": 95, "function_nam": [95, 115], "validity_check_fn": 95, "backend": [95, 96, 111, 116], "pickle_cach": 95, "__name__": 95, "cache_base_path": 95, "filename_prefix": [95, 105], "hash": [95, 104], "serialis": [95, 96, 111], "dumppickl": 95, "picklecach": 95, "cloudpickl": [95, 111], "lrucach": 95, "capac": 95, "thashablekei": 95, "storag": 96, "microsoft": 96, "storageservic": 96, "understand": 96, "servic": 96, "deserialis": 96, "numpyarrayjsonserialis": 96, "json": [96, 106, 117], "propertyload": 96, "customis": 96, "loader": 96, "entiti": [96, 112], "load_property_valu": 96, "write_property_valu": 96, "load_property_value_to_data_frame_column": 96, "serialisedpropertyload": 96, "property_nam": 96, "de": 96, "align": 96, "azuretableblobbackend": 96, "blob": [96, 97], "get_value_from_refer": 96, "value_identifi": 96, "get_value_refer": 96, "partition_kei": 96, "row_kei": 96, "value_nam": 96, "blob_name_prefix": 96, "set_value_for_refer": 96, "blobperkeyazuretableblobbackend": 96, "block_blob_servic": 96, "blockblobservic": 96, "container_nam": 96, "tablenam": 96, "partitionkei": 96, "rowkei": 96, "valuenam": 96, "fileextens": 96, "file_extens": 96, "textdumpazuretableblobbackend": 96, "txt": 96, "jsonazuretableblobbackend": 96, "pickleazuretableblobbackend": 96, "blobbackedpropertyload": 96, "blob_backend": 96, "blob_prefix": 96, "property_boolean_blob_status_nam": 96, "max_work": 96, "maxim": [96, 97], "worker": 96, "azure_allowed_size_per_property_byt": 96, "64000": 96, "azure_allowed_string_length_per_properti": 96, "32000": 96, "blobbackedserialisedpropertyload": 96, "azurelazybatchcommitt": 96, "table_servic": 96, "tableservic": 96, "property_load": 96, "insert": 96, "lazi": 96, "partit": 96, "lazybatchcommitt": 96, "azure_allowed_table_name_pattern": 96, "compil": 96, "za": 96, "z": 96, "z0": 96, "62": 96, "azure_allowed_table_batch_s": 96, "partitioncommandspriorityqueu": 96, "partitioncommand": 96, "command": 96, "context_manag": 96, "tablebatch": 96, "add_command": 96, "pop": 96, "min_length": 96, "pop_al": 96, "is_empti": 96, "insert_or_replace_ent": 96, "insert_ent": 96, "get_ent": 96, "commit_blocking_until_empti": 96, "max_batch_s": 96, "wise": 96, "commit_non_blocking_current_queue_st": 96, "partitioncommandsqueu": 96, "commit_blocking_largest_partition_from_queu": 96, "minlength": 96, "load_table_to_data_fram": 96, "row_filter_queri": 96, "num_record": 96, "iter_data_frame_chunk": 96, "chunk_siz": 96, "chunk": 96, "iter_record": 96, "insert_data_frame_to_t": 96, "partition_key_gener": 96, "act": 96, "beforehand": 96, "numrecord": 96, "mere": 96, "azuretablepersistentkeyvaluecach": 96, "min_size_for_periodic_commit": 96, "in_memori": [96, 97], "gb": 96, "cosmosdb": 96, "resourc": 96, "thread": 96, "cache_valu": 96, "cache_value_identifi": 96, "mysqlpersistentkeyvaluecach": 97, "host": 97, "db": 97, "pw": 97, "value_typ": 97, "valuetyp": 97, "connect_param": 97, "3306": 97, "mysql": 97, "pymysql": 97, "ssl": 97, "lack": 97, "doubl": 97, "kb": 97, "mediumblob": 97, "mb": 97, "trival": 98, "from_bool": 98, "is_tru": 98, "is_fals": 98, "mayb": 98, "deferredparam": 98, "__undefined__deferredparam": 98, "keyerror": 98, "get_dict": 98, "sortedvalu": 98, "sorted_valu": 98, "bisect": 98, "floor_index": [98, 114], "rightmost": [98, 114], "ceil_index": [98, 114], "leftmost": [98, 114], "greater": [98, 114], "closest_index": [98, 114], "floor_valu": [98, 114], "ceil_valu": [98, 114], "closest_valu": [98, 114], "value_slic": 98, "lowest_kei": 98, "highest_kei": 98, "sortedkeyvaluestructur": 98, "floor_key_and_valu": 98, "ceil_key_and_valu": 98, "closest_key_and_valu": 98, "interpolated_valu": 98, "interpol": [98, 110, 112], "arithmet": 98, "floor": [98, 114], "ceil": 98, "lower_bound_kei": [98, 114], "upper_bound_kei": [98, 114], "tsortedkeyvaluestructur": 98, "sortedkeysandvalu": 98, "from_seri": 98, "value_slice_inn": [98, 114], "value_slice_out": [98, 114], "fallback": [98, 107, 114], "sortedkeyvaluepair": 98, "sorted_key_value_pair": 98, "from_unsorted_key_value_pair": 98, "unsorted_key_value_pair": 98, "value_for_index": 98, "key_for_index": 98, "messag": [99, 107, 111, 115, 122], "mark": [99, 103], "issu": 99, "to_float_arrai": 100, "dict_to_ordered_tupl": 100, "gitstatu": 101, "has_unstaged_chang": 101, "has_staged_uncommitted_chang": 101, "has_untracked_fil": 101, "is_clean": 101, "git_statu": 101, "log_error": 101, "statu": 101, "pickle_hash": 102, "sha1": 102, "with_class_nam": 102, "determinist": 102, "hashlib": 102, "str_hash": 102, "count_non": 103, "count_not_non": 103, "any_non": 103, "all_non": 103, "check_not_nan_dict": 103, "contains_ani": 103, "mark_us": 103, "flatten_argu": 103, "t2": 103, "safe": [103, 111], "awar": 103, "kwarg_if_not_non": 103, "arg_nam": 103, "arg_valu": 103, "weren": 103, "flatten_dict": 103, "sep": 103, "profil": 104, "cache_mysql": 104, "git": 104, "multiprocess": 104, "jscode": 104, "cache_azur": 104, "tensorboard": 104, "datastruct": 104, "helper": [104, 111], "result_dir": 105, "close_figur": 105, "close": [105, 114, 115], "child_with_added_prefix": 105, "child_for_subdirectori": 105, "dir_nam": 105, "filename_suffix": 105, "extension_to_add": 105, "valid_other_extens": 105, "extenion": 105, "valid_extens": 105, "extensiontoadd": 105, "write_text_fil": 105, "write_text_file_lin": 105, "write_data_frame_text_fil": 105, "write_data_frame_csv_fil": 105, "header": 105, "write_data_frame_excel_fil": 105, "sheet_nam": 105, "sheet1": 105, "excel": 105, "spreadsheet": 105, "openpyxl": 105, "basenam": 105, "xlsx": 105, "png": 105, "jpg": 105, "write_pickl": 105, "obj": [105, 111, 115, 117], "trail": [105, 106, 107], "newlin": [105, 107], "read_text_file_lin": 105, "skip_empti": 105, "whitespac": 105, "charact": [105, 115], "is_s3_path": 105, "s3object": 105, "outputfil": 105, "s3_object": 105, "get_file_cont": 105, "open_fil": 105, "create_path": 105, "path_elem": 105, "is_dir": 105, "make_dir": 105, "create_file_path": 105, "create_dir_path": 105, "filename_compat": 105, "javascript": 106, "get_js_cod": 106, "jscodeliter": 106, "js_code": 106, "jsvalu": 106, "from_python": 106, "from_valu": [106, 122], "is_undefin": 106, "string_valu": 106, "int_valu": 106, "float_valu": 106, "bool_valu": 106, "null": 106, "jsvalueliter": 106, "js_valu": 106, "js_arg_list": 106, "drop_trailing_undefin": 106, "jsobject": 106, "add_str": 106, "add_code_liter": 106, "add_float": 106, "add_json": 106, "jsclassinst": 106, "class_nam": 106, "jslist": 106, "remove_log_handl": 107, "is_log_handler_act": 107, "set_configure_callback": 107, "callback": 107, "func": [107, 113], "run_main": 107, "run_cli": 107, "levelnam": 107, "5s": 107, "asctim": 107, "funcnam": 107, "lineno": 107, "stream": 107, "_io": [107, 115], "textiowrapp": [107, 115], "stdout": [107, 115], "utf": [107, 115], "overli": 107, "stram": 107, "whcih": 107, "main_fn": 107, "cli": 107, "jsonargpars": 107, "pars": 107, "dataclass": 107, "docstring_pars": 107, "datetime_tag": 107, "tag": [107, 116], "register_atexit": 107, "filehandl": 107, "memorystreamhandl": 107, "stringio": 107, "streamhandl": 107, "stderr": 107, "get_log": 107, "add_memory_logg": 107, "buffer": 107, "stopwatch": 107, "watch": 107, "elaps": 107, "immedi": 107, "restart": 107, "paus": 107, "resum": 107, "get_elapsed_time_sec": 107, "get_elapsed_timedelta": 107, "timedelta": [107, 118], "get_elapsed_time_str": 107, "stopwatchmanag": 107, "secret": 107, "get_inst": 107, "is_run": 107, "logtim": 107, "client": 107, "loggercontext": 107, "thandler": 107, "switch": 107, "fileloggercontext": 107, "memoryloggercontext": 107, "loggingdisabledcontext": 107, "highest_level": 107, "temporarili": 107, "highest": 107, "fallbackhandl": 107, "notset": 107, "emit": 107, "record": 107, "intend": 107, "notimplementederror": 107, "suspendedloggerscontext": 107, "isol": 107, "slate": 107, "exit": 107, "setup": 107, "preserv": 107, "loglevelschangedcontext": 107, "log_level": 107, "loggers_in_hierarchi": 107, "logger_nam": 107, "hierarchi": [107, 115], "ancestor": 107, "format_log_messag": 107, "msg": 107, "formatt": 107, "stacklevel": 107, "normaldistribut": 108, "unit_max": 108, "min_valu": [108, 112], "max_valu": [108, 112], "x0": 108, "reduce_float_precision_decim": 108, "vectormodelwithseparatefeaturegener": 109, "intermediatefittingstep": 109, "predictfinalis": 109, "fit_start": 109, "predict_start": 109, "fit_end": 109, "initial_df": 110, "columnchangetrack": 110, "track_chang": 110, "get_removed_column": 110, "get_added_column": 110, "changed_df": 110, "column_change_str": 110, "assert_change_was_track": 110, "columnmatchercollect": 110, "matcher": 110, "require_all_matchers_appli": 110, "not_matching_column": 110, "columnnam": 110, "columnregex": 110, "extract_arrai": 110, "channel": [110, 112], "n_column": 110, "rgb": 110, "n_imag": 110, "height": [110, 112], "remove_duplicate_index_entri": 110, "query_data_fram": 110, "seriesinterpol": [110, 112], "interpolate_all_with_combined_index": 110, "series_list": 110, "seriesinterpolationlinearindex": 110, "ffill": 110, "bfill": 110, "seriesinterpolationrepeatpreced": 110, "average_seri": 110, "load_pickl": 111, "liter": [111, 115], "use_bz2": 111, "s3": 111, "bzip2": 111, "decompress": 111, "bz2": 111, "dump_pickl": 111, "compress": 111, "picklefailuredebugg": 111, "debug_failur": 111, "tri": 111, "fail": [111, 121], "log_failure_if_en": 111, "context_info": 111, "action": 111, "persistableobject": 111, "__getstate__": 111, "crucial": 111, "__setstate__": 111, "refactor": 111, "setstat": 111, "renamed_properti": 111, "new_optional_properti": 111, "new_default_properti": 111, "removed_properti": 111, "unfortun": 111, "__class__": 111, "getstat": 111, "transient_properti": 111, "excluded_properti": 111, "override_properti": 111, "excluded_default_properti": 111, "transient": 111, "darken": 112, "black": 112, "unchang": 112, "lighten": 112, "white": 112, "opac": 112, "transpar": 112, "opaqu": 112, "to_hex": 112, "keep_alpha": 112, "linearcolormap": 112, "norm_min": 112, "norm_max": 112, "cmap_point": 112, "cmap_points_normalis": 112, "usag": 112, "scalarmapp": 112, "clip": 112, "get_color": 112, "plot_matrix": 112, "xtick_label": 112, "ytick_label": 112, "xlabel": 112, "ylabel": 112, "j": [112, 114], "tick": 112, "caption": 112, "tplot": 112, "xlim": 112, "ylim": 112, "xtick": 112, "minor": [112, 120, 123], "xtick_major": 112, "xtick_minor": 112, "ytick_major": 112, "scatterplot": 112, "c_base": 112, "c_opac": 112, "x_label": 112, "y_label": 112, "add_diagon": 112, "n_max_transpar": 112, "n_min_transpar": 112, "max_opac": 112, "min_opac": 112, "heatmapplot": 112, "common_rang": 112, "diagonal_color": 112, "rng": 112, "quantiti": 112, "default_cmap_factori": 112, "cdf_secondary_axi": 112, "binwidth": 112, "sn": 112, "secondari": 112, "averageserieslineplot": 112, "series_collect": 112, "collection_nam": 112, "hue_ord": 112, "palett": 112, "unif": 112, "shade": 112, "legend": 112, "hue": 112, "metriccomparisonbarplot": 112, "metric_label": 112, "value_label": 112, "entity_label": 112, "horizont": 112, "85": 112, "78": 112, "80": 112, "83": 112, "77": 112, "f1_score": 112, "81": 112, "76": 112, "sampling_interval_second": 113, "print_to_consol": 113, "log_to_fil": 113, "file_nam": 113, "annot": [113, 119], "pyinstrument": 113, "consol": 113, "concat_sequ": 114, "get_first_dupl": 114, "key_valu": 114, "keyvalu": 114, "fallback_first": 114, "lowerboundkei": 114, "upperboundkei": 114, "fallback_bound": 114, "fallbackbound": 114, "all_equ": 114, "stringconvert": 115, "to_str": 115, "dict_str": 115, "bracket": 115, "enclos": 115, "list_str": 115, "quot": 115, "apply_converter_to_non_complex_object": 115, "infinit": 115, "object_repr": 115, "member_names_or_dict": 115, "or_regex_group": 115, "allowed_nam": 115, "name1": 115, "namen": 115, "__str__": 115, "__repr__": 115, "qualifi": 115, "underscor": 115, "_tostring_exclude_priv": 115, "_tostring_exclude_except": 115, "_tostring_exclud": 115, "introduc": 115, "inclus": 115, "_tostring_includ": 115, "aren": 115, "_tostring_additional_entri": 115, "_tostring_object_info": 115, "superclass": 115, "void": 115, "_tostring_includes_forc": 115, "_tostring_class_nam": 115, "soon": 115, "proxi": 115, "marker": 115, "sub": 115, "aforement": 115, "stand": 115, "exempt": 115, "prettili": 115, "pretty_string_repr": 115, "initial_indentation_level": 115, "indentation_str": 115, "reformat": 115, "tagbuild": 115, "initial_compon": 115, "glue": 115, "with_compon": 115, "with_condit": 115, "cond": 115, "condition": 115, "with_altern": 115, "true_compon": 115, "false_compon": 115, "textbuild": 115, "initial_text": 115, "with_lin": 115, "with_lines_from_text": 115, "with_line_condit": 115, "with_text": 115, "with_break": 115, "tensorboarddata": 116, "event_process": 116, "event_accumul": 116, "eventaccumul": 116, "smoothing_factor": 116, "smooth": 116, "past": 116, "get_tag": 116, "tensorboardseriescomparison": 116, "tb_refer": 116, "tb_current": 116, "index_start": 116, "index_end": 116, "mean_relative_differ": 116, "105": 116, "snapshot_float_decimals_default": 117, "snapshot": 117, "snapshot_compat": 117, "snapshot_significant_digits_default": 117, "float_decim": 117, "platform": 117, "reduce_float_precis": 117, "convert_float": 117, "json_mapp": 117, "ts_next_month": 118, "time_of_dai": 118, "24": 118, "timeinterv": 118, "contains_tim": 118, "overlaps_with": 118, "time_delta": 118, "mid_timestamp": 118, "format_dur": 118, "namedtupl": 119, "__version__": 120, "is_at_least": 120, "is_at_most": 120, "is_equ": 120, "get_predicted_variable_nam": 121, "tvectormodelbas": 121, "original_input": 121, "original_output": 121, "uniform": 121, "tostring_include_preprocessor": 121, "tvectormodel": 121, "with_input_transform": 121, "input_transform": 121, "perhap": 121, "withfeaturecollector": 121, "withfeaturegener": 121, "compute_model_output": 121, "is_being_fit": 121, "get_model_input_variable_nam": 121, "get_input_transform": 121, "get_feature_transform": 121, "get_raw_input_transform": 121, "get_input_transformer_chain": 121, "get_raw_input_transformer_chain": 121, "get_feature_transformer_chain": 121, "set_feature_gener": 121, "with_output_transform": 121, "tvectorregressionmodel": 121, "Not": 121, "contrari": 121, "invert": 121, "invok": 121, "fittabl": 121, "heurist": 121, "craft": 121, "meant": 121, "targettransform": 121, "give": 121, "with_target_transform": 121, "target_transform": 121, "untransform": 121, "get_target_transform": 121, "get_output_transformer_chain": 121, "get_model_output_variable_nam": 121, "alon": 121, "getpredictedvariablenam": 121, "get_predicted_var_nam": 121, "specified_var_nam": 121, "predictedlabel": 121, "1d": 122, "apply_multi": 122, "use_cach": 122, "significantli": 122, "repeatedli": 122, "resulttyp": 122, "numpy_arrai": 122, "emptyvectoris": 122, "itemidentifierprovid": 122, "get_identifi": 122, "fitting_mod": 122, "fittingmod": 122, "unique_id_provid": 122, "refit_vectoris": 122, "consider": 122, "overlap": 122, "unique_id_retriev": 122, "partli": 122, "vl": 122, "apply_multi_with_pad": 122, "shorter": 122, "unpad": 122, "get_vector_dim": 122, "vectoriserregistri": 122, "get_available_vectoris": 122, "additional_nam": 122, "get_vectoris": 122, "is_xgboost_version_at_least": 123, "xgbgradientboostedvectorregressionmodel": 123, "early_stopping_round": 123, "early_stopping_data_splitt": 123, "python_api": 123, "xgbregressor": 123, "xgbrandomforestvectorregressionmodel": 123, "xgbrfregressor": 123, "xgbclassifi": 123, "xgbrandomforestvectorclassificationmodel": 123, "xgbrfclassifi": 123}, "objects": {"sensai": [[5, 0, 0, "-", "catboost"], [10, 0, 0, "-", "columngen"], [18, 0, 0, "-", "distance_metric"], [34, 0, 0, "-", "feature_importance"], [51, 0, 0, "-", "hyperopt"], [53, 0, 0, "-", "lightgbm"], [54, 0, 0, "-", "local_search"], [55, 0, 0, "-", "minizinc"], [56, 0, 0, "-", "multi_model"], [57, 0, 0, "-", "naive_bayes"], [58, 0, 0, "-", "nearest_neighbors"], [59, 0, 0, "-", "normalisation"], [66, 0, 0, "-", "sklearn_quantile"], [67, 0, 0, "-", "tensor_model"], [121, 0, 0, "-", "vector_model"], [122, 0, 0, "-", "vectoriser"], [123, 0, 0, "-", "xgboost"]], "sensai.catboost": [[5, 1, 1, "", "CatBoostVectorClassificationModel"], [5, 1, 1, "", "CatBoostVectorRegressionModel"]], "sensai.catboost.CatBoostVectorClassificationModel": [[5, 2, 1, "", "is_sample_weight_supported"], [5, 3, 1, "", "log"]], "sensai.catboost.CatBoostVectorRegressionModel": [[5, 2, 1, "", "is_sample_weight_supported"], [5, 3, 1, "", "log"]], "sensai.clustering": [[6, 0, 0, "-", "clustering_base"], [7, 0, 0, "-", "greedy_clustering"], [9, 0, 0, "-", "sklearn_clustering"]], "sensai.clustering.clustering_base": [[6, 1, 1, "", "EuclideanClusterer"]], "sensai.clustering.clustering_base.EuclideanClusterer": [[6, 1, 1, "", "Cluster"], [6, 4, 1, "", "cluster_identifiers"], [6, 2, 1, "", "clusters"], [6, 4, 1, "", "datapoints"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "get_cluster"], [6, 4, 1, "", "is_fitted"], [6, 4, 1, "", "labels"], [6, 2, 1, "", "noise_cluster"], [6, 4, 1, "", "num_clusters"], [6, 2, 1, "", "summary_df"]], "sensai.clustering.clustering_base.EuclideanClusterer.Cluster": [[6, 2, 1, "", "centroid"], [6, 2, 1, "", "radius"], [6, 2, 1, "", "summary_dict"]], "sensai.clustering.greedy_clustering": [[7, 1, 1, "", "GreedyAgglomerativeClustering"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering": [[7, 1, 1, "", "Cluster"], [7, 1, 1, "", "ClusterMerge"], [7, 1, 1, "", "MergeCandidateDeterminationStrategy"], [7, 1, 1, "", "MergeCandidateDeterminationStrategyDefault"], [7, 1, 1, "", "WrappedCluster"], [7, 2, 1, "", "apply_clustering"], [7, 3, 1, "", "log"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.Cluster": [[7, 2, 1, "", "merge"], [7, 2, 1, "", "merge_cost"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.ClusterMerge": [[7, 2, 1, "", "apply"], [7, 3, 1, "", "log"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.MergeCandidateDeterminationStrategy": [[7, 2, 1, "", "iter_candidate_indices"], [7, 2, 1, "", "set_clusterer"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.MergeCandidateDeterminationStrategyDefault": [[7, 2, 1, "", "iter_candidate_indices"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.WrappedCluster": [[7, 2, 1, "", "compute_merges"], [7, 2, 1, "", "get_cluster_association"], [7, 2, 1, "", "is_merged"], [7, 2, 1, "", "remove_merges"]], "sensai.clustering.sklearn_clustering": [[9, 1, 1, "", "SkLearnClustererProtocol"], [9, 1, 1, "", "SkLearnEuclideanClusterer"]], "sensai.clustering.sklearn_clustering.SkLearnClustererProtocol": [[9, 2, 1, "", "fit"], [9, 3, 1, "", "labels_"]], "sensai.columngen": [[10, 1, 1, "", "ColumnGenerator"], [10, 1, 1, "", "ColumnGeneratorCachedByIndex"], [10, 1, 1, "", "IndexCachedColumnGenerator"]], "sensai.columngen.ColumnGenerator": [[10, 2, 1, "", "generate_column"], [10, 2, 1, "", "to_feature_generator"]], "sensai.columngen.ColumnGeneratorCachedByIndex": [[10, 3, 1, "", "log"]], "sensai.columngen.IndexCachedColumnGenerator": [[10, 3, 1, "", "log"]], "sensai.data": [[11, 0, 0, "-", "dataset"], [13, 0, 0, "-", "io_data"]], "sensai.data.dataset": [[11, 1, 1, "", "DataSet"], [11, 1, 1, "", "DataSetClassificationIris"], [11, 1, 1, "", "DataSetClassificationTitanicSurvival"]], "sensai.data.dataset.DataSet": [[11, 2, 1, "", "load_io_data"]], "sensai.data.dataset.DataSetClassificationIris": [[11, 2, 1, "", "load_io_data"]], "sensai.data.dataset.DataSetClassificationTitanicSurvival": [[11, 3, 1, "", "COLS_METADATA"], [11, 3, 1, "", "COL_AGE_YEARS"], [11, 3, 1, "", "COL_CABIN"], [11, 3, 1, "", "COL_FARE_PRICE"], [11, 3, 1, "", "COL_INDEX"], [11, 3, 1, "", "COL_NAME"], [11, 3, 1, "", "COL_PARENTS_CHILDREN"], [11, 3, 1, "", "COL_PASSENGER_CLASS"], [11, 3, 1, "", "COL_PORT_EMBARKED"], [11, 3, 1, "", "COL_SEX"], [11, 3, 1, "", "COL_SIBLINGS_SPOUSES"], [11, 3, 1, "", "COL_SURVIVAL"], [11, 3, 1, "", "COL_TICKET"], [11, 3, 1, "", "URL"], [11, 2, 1, "", "load_io_data"]], "sensai.data.io_data": [[13, 1, 1, "", "BaseInputOutputData"], [13, 1, 1, "", "DataFrameSplitter"], [13, 1, 1, "", "DataFrameSplitterColumnEquivalenceClass"], [13, 1, 1, "", "DataFrameSplitterFractional"], [13, 1, 1, "", "DataPointWeighting"], [13, 1, 1, "", "DataPointWeightingRegressionTargetIntervalTotalWeight"], [13, 1, 1, "", "DataSplitter"], [13, 1, 1, "", "DataSplitterFractional"], [13, 1, 1, "", "DataSplitterFromDataFrameSplitter"], [13, 1, 1, "", "DataSplitterFromSkLearnSplitter"], [13, 1, 1, "", "DataSplitterStratifiedShuffleSplit"], [13, 1, 1, "", "InputOutputArrays"], [13, 1, 1, "", "InputOutputData"]], "sensai.data.io_data.BaseInputOutputData": [[13, 2, 1, "", "filter_indices"]], "sensai.data.io_data.DataFrameSplitter": [[13, 2, 1, "", "compute_split_indices"], [13, 2, 1, "", "split"], [13, 2, 1, "", "split_with_indices"]], "sensai.data.io_data.DataFrameSplitterColumnEquivalenceClass": [[13, 2, 1, "", "compute_split_indices"]], "sensai.data.io_data.DataFrameSplitterFractional": [[13, 2, 1, "", "compute_split_indices"]], "sensai.data.io_data.DataPointWeighting": [[13, 2, 1, "", "compute_weights"]], "sensai.data.io_data.DataPointWeightingRegressionTargetIntervalTotalWeight": [[13, 1, 1, "", "Interval"], [13, 2, 1, "", "compute_weights"]], "sensai.data.io_data.DataPointWeightingRegressionTargetIntervalTotalWeight.Interval": [[13, 2, 1, "", "contains"]], "sensai.data.io_data.DataSplitter": [[13, 2, 1, "", "split"]], "sensai.data.io_data.DataSplitterFractional": [[13, 2, 1, "", "split"], [13, 2, 1, "", "split_with_indices"]], "sensai.data.io_data.DataSplitterFromDataFrameSplitter": [[13, 2, 1, "", "split"]], "sensai.data.io_data.DataSplitterFromSkLearnSplitter": [[13, 2, 1, "", "split"]], "sensai.data.io_data.DataSplitterStratifiedShuffleSplit": [[13, 2, 1, "", "is_applicable"]], "sensai.data.io_data.InputOutputArrays": [[13, 2, 1, "", "filter_indices"], [13, 2, 1, "", "to_torch_data_loader"]], "sensai.data.io_data.InputOutputData": [[13, 2, 1, "", "apply_weighting"], [13, 2, 1, "", "compute_input_output_correlation"], [13, 2, 1, "", "filter_index"], [13, 2, 1, "", "filter_indices"], [13, 2, 1, "", "from_data_frame"], [13, 4, 1, "", "input_dim"], [13, 4, 1, "", "output_dim"], [13, 2, 1, "", "to_data_frame"], [13, 2, 1, "", "to_df"]], "sensai.data_transformation": [[14, 0, 0, "-", "dft"], [16, 0, 0, "-", "sklearn_transformer"], [17, 0, 0, "-", "value_transformation"]], "sensai.data_transformation.dft": [[14, 1, 1, "", "DFTAggregationOnColumn"], [14, 1, 1, "", "DFTCastCategoricalColumns"], [14, 1, 1, "", "DFTColumnFilter"], [14, 1, 1, "", "DFTConditionalRowFilterOnColumn"], [14, 1, 1, "", "DFTCountEntries"], [14, 1, 1, "", "DFTDRowFilterOnIndex"], [14, 1, 1, "", "DFTDropNA"], [14, 1, 1, "", "DFTFillNA"], [14, 1, 1, "", "DFTFromColumnGenerators"], [14, 1, 1, "", "DFTFromFeatureGenerator"], [14, 1, 1, "", "DFTInSetComparisonRowFilterOnColumn"], [14, 1, 1, "", "DFTKeepColumns"], [14, 1, 1, "", "DFTModifyColumn"], [14, 1, 1, "", "DFTModifyColumnVectorized"], [14, 1, 1, "", "DFTNormalisation"], [14, 1, 1, "", "DFTNotInSetComparisonRowFilterOnColumn"], [14, 1, 1, "", "DFTOneHotEncoder"], [14, 1, 1, "", "DFTRenameColumns"], [14, 1, 1, "", "DFTRoundFloats"], [14, 1, 1, "", "DFTRowFilter"], [14, 1, 1, "", "DFTSkLearnTransformer"], [14, 1, 1, "", "DFTSortColumns"], [14, 1, 1, "", "DFTVectorizedConditionalRowFilterOnColumn"], [14, 1, 1, "", "DataFrameTransformer"], [14, 1, 1, "", "DataFrameTransformerChain"], [14, 1, 1, "", "InverseDataFrameTransformer"], [14, 1, 1, "", "InvertibleDataFrameTransformer"], [14, 1, 1, "", "RuleBasedDataFrameTransformer"]], "sensai.data_transformation.dft.DFTColumnFilter": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTCountEntries": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTFromColumnGenerators": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTFromFeatureGenerator": [[14, 2, 1, "", "is_fitted"]], "sensai.data_transformation.dft.DFTInSetComparisonRowFilterOnColumn": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTNormalisation": [[14, 1, 1, "", "Rule"], [14, 1, 1, "", "RuleTemplate"], [14, 2, 1, "", "find_rule"], [14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTNormalisation.Rule": [[14, 2, 1, "", "matches"], [14, 2, 1, "", "matching_columns"], [14, 2, 1, "", "set_regex"]], "sensai.data_transformation.dft.DFTNormalisation.RuleTemplate": [[14, 2, 1, "", "to_placeholder_rule"], [14, 2, 1, "", "to_rule"]], "sensai.data_transformation.dft.DFTNotInSetComparisonRowFilterOnColumn": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTOneHotEncoder": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTRoundFloats": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTSkLearnTransformer": [[14, 2, 1, "", "apply_inverse"], [14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTVectorizedConditionalRowFilterOnColumn": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DataFrameTransformer": [[14, 2, 1, "", "apply"], [14, 2, 1, "", "chain"], [14, 2, 1, "", "fit"], [14, 2, 1, "", "fit_apply"], [14, 2, 1, "", "get_column_change_tracker"], [14, 2, 1, "", "get_name"], [14, 2, 1, "", "info"], [14, 2, 1, "", "is_fitted"], [14, 2, 1, "", "set_name"], [14, 2, 1, "", "to_feature_generator"], [14, 2, 1, "", "with_name"]], "sensai.data_transformation.dft.DataFrameTransformerChain": [[14, 2, 1, "", "append"], [14, 2, 1, "", "find_first_transformer_by_type"], [14, 2, 1, "", "get_names"], [14, 2, 1, "", "info"], [14, 2, 1, "", "is_fitted"]], "sensai.data_transformation.dft.InvertibleDataFrameTransformer": [[14, 2, 1, "", "apply_inverse"], [14, 2, 1, "", "get_inverse"]], "sensai.data_transformation.dft.RuleBasedDataFrameTransformer": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "is_fitted"]], "sensai.data_transformation.sklearn_transformer": [[16, 1, 1, "", "ManualScaler"], [16, 1, 1, "", "SkLearnTransformerFactoryFactory"], [16, 1, 1, "", "SkLearnTransformerProtocol"], [16, 5, 1, "", "to_2d_array"]], "sensai.data_transformation.sklearn_transformer.ManualScaler": [[16, 2, 1, "", "fit"], [16, 2, 1, "", "inverse_transform"], [16, 2, 1, "", "transform"]], "sensai.data_transformation.sklearn_transformer.SkLearnTransformerFactoryFactory": [[16, 2, 1, "", "ManualScaler"], [16, 2, 1, "", "MaxAbsScaler"], [16, 2, 1, "", "MinMaxScaler"], [16, 2, 1, "", "RobustScaler"], [16, 2, 1, "", "StandardScaler"]], "sensai.data_transformation.sklearn_transformer.SkLearnTransformerProtocol": [[16, 2, 1, "", "fit"], [16, 2, 1, "", "inverse_transform"], [16, 2, 1, "", "transform"]], "sensai.data_transformation.value_transformation": [[17, 1, 1, "", "ValueOneHotEncoder"]], "sensai.data_transformation.value_transformation.ValueOneHotEncoder": [[17, 2, 1, "", "fit"], [17, 2, 1, "", "transform"]], "sensai.distance_metric": [[18, 1, 1, "", "CachedDistanceMetric"], [18, 1, 1, "", "DistanceMatrixDFCache"], [18, 1, 1, "", "DistanceMetric"], [18, 1, 1, "", "EuclideanDistanceMetric"], [18, 1, 1, "", "HellingerDistanceMetric"], [18, 1, 1, "", "IdentityDistanceMetric"], [18, 1, 1, "", "LinearCombinationDistanceMetric"], [18, 1, 1, "", "RelativeBitwiseEqualityDistanceMetric"], [18, 1, 1, "", "SingleColumnDistanceMetric"]], "sensai.distance_metric.CachedDistanceMetric": [[18, 2, 1, "", "distance"], [18, 2, 1, "", "fill_cache"]], "sensai.distance_metric.DistanceMatrixDFCache": [[18, 2, 1, "", "get"], [18, 2, 1, "", "get_all_cached"], [18, 2, 1, "", "num_unfilled_entries"], [18, 2, 1, "", "save"], [18, 2, 1, "", "set"], [18, 2, 1, "", "shape"]], "sensai.distance_metric.DistanceMetric": [[18, 2, 1, "", "distance"]], "sensai.distance_metric.IdentityDistanceMetric": [[18, 2, 1, "", "distance"]], "sensai.distance_metric.LinearCombinationDistanceMetric": [[18, 2, 1, "", "distance"]], "sensai.distance_metric.RelativeBitwiseEqualityDistanceMetric": [[18, 2, 1, "", "check_input_value"]], "sensai.distance_metric.SingleColumnDistanceMetric": [[18, 2, 1, "", "distance"]], "sensai.ensemble": [[19, 0, 0, "-", "ensemble_base"], [21, 0, 0, "-", "models"]], "sensai.ensemble.ensemble_base": [[19, 1, 1, "", "EnsembleClassificationVectorModel"], [19, 1, 1, "", "EnsembleRegressionVectorModel"], [19, 1, 1, "", "EnsembleVectorModel"]], "sensai.ensemble.ensemble_base.EnsembleClassificationVectorModel": [[19, 2, 1, "", "is_regression_model"]], "sensai.ensemble.ensemble_base.EnsembleRegressionVectorModel": [[19, 2, 1, "", "is_regression_model"]], "sensai.ensemble.ensemble_base.EnsembleVectorModel": [[19, 2, 1, "", "aggregate_predictions"], [19, 2, 1, "", "compute_all_predictions"]], "sensai.ensemble.models": [[21, 1, 1, "", "AveragingVectorRegressionModel"]], "sensai.ensemble.models.AveragingVectorRegressionModel": [[21, 2, 1, "", "aggregate_predictions"]], "sensai.evaluation": [[22, 0, 0, "-", "crossval"], [28, 0, 0, "-", "eval_util"], [29, 0, 0, "-", "evaluator"], [30, 0, 0, "-", "evaluator_clustering"], [32, 0, 0, "-", "metric_computation"], [33, 0, 0, "-", "result_set"]], "sensai.evaluation.crossval": [[22, 1, 1, "", "CrossValidationSplitter"], [22, 1, 1, "", "CrossValidationSplitterDefault"], [22, 1, 1, "", "CrossValidationSplitterNested"], [22, 1, 1, "", "VectorClassificationModelCrossValidationData"], [22, 1, 1, "", "VectorClassificationModelCrossValidator"], [22, 1, 1, "", "VectorModelCrossValidationData"], [22, 1, 1, "", "VectorModelCrossValidator"], [22, 1, 1, "", "VectorModelCrossValidatorParams"], [22, 1, 1, "", "VectorRegressionModelCrossValidationData"], [22, 1, 1, "", "VectorRegressionModelCrossValidator"]], "sensai.evaluation.crossval.CrossValidationSplitter": [[22, 2, 1, "", "create_folds"]], "sensai.evaluation.crossval.CrossValidationSplitterDefault": [[22, 2, 1, "", "create_folds"]], "sensai.evaluation.crossval.CrossValidationSplitterNested": [[22, 2, 1, "", "create_folds"]], "sensai.evaluation.crossval.VectorModelCrossValidationData": [[22, 2, 1, "", "get_eval_stats_collection"], [22, 2, 1, "", "iter_input_output_ground_truth_tuples"], [22, 4, 1, "", "model_name"], [22, 2, 1, "", "track_metrics"]], "sensai.evaluation.crossval.VectorModelCrossValidator": [[22, 2, 1, "", "create_metrics_dict_provider"], [22, 2, 1, "", "eval_model"], [22, 2, 1, "", "for_model"]], "sensai.evaluation.eval_stats": [[23, 0, 0, "-", "eval_stats_base"], [24, 0, 0, "-", "eval_stats_classification"], [25, 0, 0, "-", "eval_stats_clustering"], [26, 0, 0, "-", "eval_stats_regression"]], "sensai.evaluation.eval_stats.eval_stats_base": [[23, 1, 1, "", "EvalStats"], [23, 1, 1, "", "EvalStatsCollection"], [23, 1, 1, "", "EvalStatsPlot"], [23, 1, 1, "", "Metric"], [23, 1, 1, "", "PredictionEvalStats"], [23, 5, 1, "", "mean_stats"]], "sensai.evaluation.eval_stats.eval_stats_base.EvalStats": [[23, 2, 1, "", "add_metric"], [23, 2, 1, "", "compute_metric_value"], [23, 2, 1, "", "get_all"], [23, 2, 1, "", "metrics_dict"], [23, 2, 1, "", "set_name"]], "sensai.evaluation.eval_stats.eval_stats_base.EvalStatsCollection": [[23, 2, 1, "", "agg_metrics_dict"], [23, 2, 1, "", "get_combined_eval_stats"], [23, 2, 1, "", "get_global_stats"], [23, 2, 1, "", "get_metric_by_name"], [23, 2, 1, "", "get_metric_names"], [23, 2, 1, "", "get_metrics"], [23, 2, 1, "", "get_values"], [23, 2, 1, "", "has_metric"], [23, 2, 1, "", "mean_metrics_dict"], [23, 2, 1, "", "plot_distribution"], [23, 2, 1, "", "plot_heat_map"], [23, 2, 1, "", "plot_scatter"], [23, 2, 1, "", "to_data_frame"]], "sensai.evaluation.eval_stats.eval_stats_base.EvalStatsPlot": [[23, 2, 1, "", "create_figure"], [23, 2, 1, "", "is_applicable"]], "sensai.evaluation.eval_stats.eval_stats_base.Metric": [[23, 2, 1, "", "compute_value_for_eval_stats"], [23, 2, 1, "", "get_paired_metrics"], [23, 2, 1, "", "has_finite_bounds"], [23, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_base.PredictionEvalStats": [[23, 2, 1, "", "add"], [23, 2, 1, "", "add_all"]], "sensai.evaluation.eval_stats.eval_stats_classification": [[24, 1, 1, "", "BinaryClassificationCounts"], [24, 1, 1, "", "BinaryClassificationMetric"], [24, 1, 1, "", "BinaryClassificationMetricF1Score"], [24, 1, 1, "", "BinaryClassificationMetricPrecision"], [24, 1, 1, "", "BinaryClassificationMetricPrecisionThreshold"], [24, 1, 1, "", "BinaryClassificationMetricRecall"], [24, 1, 1, "", "BinaryClassificationMetricRecallForPrecision"], [24, 1, 1, "", "BinaryClassificationMetricRecallThreshold"], [24, 1, 1, "", "BinaryClassificationProbabilityThresholdVariationData"], [24, 1, 1, "", "ClassificationEvalStats"], [24, 1, 1, "", "ClassificationEvalStatsCollection"], [24, 1, 1, "", "ClassificationEvalStatsPlot"], [24, 1, 1, "", "ClassificationEvalStatsPlotConfusionMatrix"], [24, 1, 1, "", "ClassificationEvalStatsPlotPrecisionRecall"], [24, 1, 1, "", "ClassificationEvalStatsPlotProbabilityThresholdCounts"], [24, 1, 1, "", "ClassificationEvalStatsPlotProbabilityThresholdPrecisionRecall"], [24, 1, 1, "", "ClassificationMetric"], [24, 1, 1, "", "ClassificationMetricAccuracy"], [24, 1, 1, "", "ClassificationMetricAccuracyMaxProbabilityBeyondThreshold"], [24, 1, 1, "", "ClassificationMetricAccuracyWithoutLabels"], [24, 1, 1, "", "ClassificationMetricBalancedAccuracy"], [24, 1, 1, "", "ClassificationMetricGeometricMeanOfTrueClassProbability"], [24, 1, 1, "", "ClassificationMetricRelFreqMaxProbabilityBeyondThreshold"], [24, 1, 1, "", "ClassificationMetricTopNAccuracy"], [24, 1, 1, "", "ConfusionMatrix"], [24, 5, 1, "", "create_default_binary_classification_metrics"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationCounts": [[24, 2, 1, "", "from_eval_stats"], [24, 2, 1, "", "from_probability_threshold"], [24, 2, 1, "", "get_f1"], [24, 2, 1, "", "get_precision"], [24, 2, 1, "", "get_recall"], [24, 2, 1, "", "get_rel_freq_positive"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricF1Score": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricPrecision": [[24, 2, 1, "", "get_paired_metrics"], [24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricPrecisionThreshold": [[24, 2, 1, "", "get_paired_metrics"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricRecall": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricRecallForPrecision": [[24, 2, 1, "", "compute_value_for_eval_stats"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricRecallThreshold": [[24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationProbabilityThresholdVariationData": [[24, 2, 1, "", "plot_counts"], [24, 2, 1, "", "plot_precision_recall"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStats": [[24, 2, 1, "", "get_accuracy"], [24, 2, 1, "", "get_binary_classification_probability_threshold_variation_data"], [24, 2, 1, "", "get_confusion_matrix"], [24, 2, 1, "", "get_misclassified_indices"], [24, 2, 1, "", "metrics_dict"], [24, 2, 1, "", "plot_confusion_matrix"], [24, 2, 1, "", "plot_precision_recall_curve"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsCollection": [[24, 2, 1, "", "get_combined_eval_stats"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsPlotConfusionMatrix": [[24, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsPlotPrecisionRecall": [[24, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsPlotProbabilityThresholdCounts": [[24, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsPlotProbabilityThresholdPrecisionRecall": [[24, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetric": [[24, 2, 1, "", "compute_value"], [24, 2, 1, "", "compute_value_for_eval_stats"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricAccuracy": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricAccuracyMaxProbabilityBeyondThreshold": [[24, 2, 1, "", "get_paired_metrics"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricAccuracyWithoutLabels": [[24, 2, 1, "", "get_paired_metrics"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricBalancedAccuracy": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricGeometricMeanOfTrueClassProbability": [[24, 3, 1, "", "name"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricRelFreqMaxProbabilityBeyondThreshold": [[24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricTopNAccuracy": [[24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ConfusionMatrix": [[24, 2, 1, "", "plot"]], "sensai.evaluation.eval_stats.eval_stats_clustering": [[25, 1, 1, "", "AdjustedMutualInfoScore"], [25, 1, 1, "", "AdjustedRandScore"], [25, 1, 1, "", "CalinskiHarabaszScore"], [25, 1, 1, "", "ClusterLabelsEvalStats"], [25, 1, 1, "", "ClusteringSupervisedEvalStats"], [25, 1, 1, "", "ClusteringSupervisedMetric"], [25, 1, 1, "", "ClusteringUnsupervisedEvalStats"], [25, 1, 1, "", "ClusteringUnsupervisedMetric"], [25, 1, 1, "", "DaviesBouldinScore"], [25, 1, 1, "", "FowlkesMallowsScore"], [25, 1, 1, "", "RemovedCommonNoiseSupervisedMetric"], [25, 1, 1, "", "RemovedNoiseUnsupervisedMetric"], [25, 1, 1, "", "SilhouetteScore"], [25, 1, 1, "", "VMeasureScore"]], "sensai.evaluation.eval_stats.eval_stats_clustering.AdjustedMutualInfoScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_clustering.AdjustedRandScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.CalinskiHarabaszScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_clustering.ClusterLabelsEvalStats": [[25, 3, 1, "", "AV_SIZE"], [25, 3, 1, "", "MAX_SIZE"], [25, 3, 1, "", "MEDIAN_SIZE"], [25, 3, 1, "", "MIN_SIZE"], [25, 3, 1, "", "NOISE_SIZE"], [25, 3, 1, "", "NUM_CLUSTERS"], [25, 3, 1, "", "STDDEV_SIZE"], [25, 2, 1, "", "get_distribution_summary"], [25, 2, 1, "", "metrics_dict"]], "sensai.evaluation.eval_stats.eval_stats_clustering.ClusteringSupervisedEvalStats": [[25, 2, 1, "", "from_model"], [25, 2, 1, "", "labels_with_removed_common_noise"]], "sensai.evaluation.eval_stats.eval_stats_clustering.ClusteringUnsupervisedEvalStats": [[25, 2, 1, "", "from_model"]], "sensai.evaluation.eval_stats.eval_stats_clustering.DaviesBouldinScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.FowlkesMallowsScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_clustering.RemovedCommonNoiseSupervisedMetric": [[25, 2, 1, "", "compute_value"], [25, 2, 1, "", "compute_value_for_eval_stats"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.RemovedNoiseUnsupervisedMetric": [[25, 2, 1, "", "compute_value"], [25, 2, 1, "", "compute_value_for_eval_stats"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.SilhouetteScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.VMeasureScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression": [[26, 1, 1, "", "HeatMapColorMapFactory"], [26, 1, 1, "", "HeatMapColorMapFactoryWhiteToRed"], [26, 1, 1, "", "RegressionEvalStats"], [26, 1, 1, "", "RegressionEvalStatsCollection"], [26, 1, 1, "", "RegressionEvalStatsPlot"], [26, 1, 1, "", "RegressionEvalStatsPlotErrorDistribution"], [26, 1, 1, "", "RegressionEvalStatsPlotHeatmapGroundTruthPredictions"], [26, 1, 1, "", "RegressionEvalStatsPlotScatterGroundTruthPredictions"], [26, 1, 1, "", "RegressionMetric"], [26, 1, 1, "", "RegressionMetricFromBinaryClassificationMetric"], [26, 1, 1, "", "RegressionMetricMAE"], [26, 1, 1, "", "RegressionMetricMSE"], [26, 1, 1, "", "RegressionMetricMedianAE"], [26, 1, 1, "", "RegressionMetricPCC"], [26, 1, 1, "", "RegressionMetricR2"], [26, 1, 1, "", "RegressionMetricRMSE"], [26, 1, 1, "", "RegressionMetricRRSE"], [26, 1, 1, "", "RegressionMetricStdDevAE"]], "sensai.evaluation.eval_stats.eval_stats_regression.HeatMapColorMapFactory": [[26, 2, 1, "", "create_color_map"]], "sensai.evaluation.eval_stats.eval_stats_regression.HeatMapColorMapFactoryWhiteToRed": [[26, 2, 1, "", "create_color_map"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStats": [[26, 3, 1, "", "HEATMAP_COLORMAP_FACTORY"], [26, 3, 1, "", "HEATMAP_DIAGONAL_COLOR"], [26, 3, 1, "", "HEATMAP_ERROR_BOUNDARY_COLOR"], [26, 3, 1, "", "HEATMAP_ERROR_BOUNDARY_VALUE"], [26, 3, 1, "", "SCATTER_PLOT_POINT_COLOR"], [26, 2, 1, "", "compute_mae"], [26, 2, 1, "", "compute_metric_value"], [26, 2, 1, "", "compute_mse"], [26, 2, 1, "", "compute_pcc"], [26, 2, 1, "", "compute_r2"], [26, 2, 1, "", "compute_rmse"], [26, 2, 1, "", "compute_rrse"], [26, 2, 1, "", "compute_std_dev_ae"], [26, 2, 1, "", "create_eval_stats_collection"], [26, 2, 1, "", "plot_error_distribution"], [26, 2, 1, "", "plot_heatmap_ground_truth_predictions"], [26, 2, 1, "", "plot_scatter_ground_truth_predictions"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStatsCollection": [[26, 2, 1, "", "get_combined_eval_stats"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStatsPlotErrorDistribution": [[26, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStatsPlotHeatmapGroundTruthPredictions": [[26, 2, 1, "", "create_figure"], [26, 2, 1, "", "is_applicable"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStatsPlotScatterGroundTruthPredictions": [[26, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetric": [[26, 2, 1, "", "compute_abs_errors"], [26, 2, 1, "", "compute_errors"], [26, 2, 1, "", "compute_value"], [26, 2, 1, "", "compute_value_for_eval_stats"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricFromBinaryClassificationMetric": [[26, 1, 1, "", "ClassGenerator"], [26, 1, 1, "", "ClassGeneratorPositiveBeyond"], [26, 2, 1, "", "compute_value"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricFromBinaryClassificationMetric.ClassGenerator": [[26, 2, 1, "", "compute_class"], [26, 2, 1, "", "get_metric_qualifier"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricFromBinaryClassificationMetric.ClassGeneratorPositiveBeyond": [[26, 2, 1, "", "compute_class"], [26, 2, 1, "", "get_metric_qualifier"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricMAE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricMSE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricMedianAE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricPCC": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricR2": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricRMSE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricRRSE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricStdDevAE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_util": [[28, 1, 1, "", "ClassificationEvalStatsPlotCollector"], [28, 1, 1, "", "ClassificationModelEvaluation"], [28, 1, 1, "", "ClassificationMultiDataModelComparisonData"], [28, 1, 1, "", "EvalStatsPlotCollector"], [28, 1, 1, "", "EvaluationResultCollector"], [28, 1, 1, "", "ModelComparisonData"], [28, 1, 1, "", "ModelComparisonVisitor"], [28, 1, 1, "", "ModelComparisonVisitorAggregatedFeatureImportance"], [28, 1, 1, "", "ModelEvaluation"], [28, 1, 1, "", "MultiDataModelComparisonData"], [28, 1, 1, "", "MultiDataModelEvaluation"], [28, 1, 1, "", "RegressionEvalStatsPlotCollector"], [28, 1, 1, "", "RegressionModelEvaluation"], [28, 1, 1, "", "RegressionMultiDataModelComparisonData"], [28, 5, 1, "", "create_evaluation_util"], [28, 5, 1, "", "create_vector_model_cross_validator"], [28, 5, 1, "", "create_vector_model_evaluator"], [28, 5, 1, "", "eval_model_via_evaluator"]], "sensai.evaluation.eval_util.ClassificationMultiDataModelComparisonData": [[28, 2, 1, "", "get_eval_stats_collection"]], "sensai.evaluation.eval_util.EvalStatsPlotCollector": [[28, 2, 1, "", "add_plot"], [28, 2, 1, "", "create_plots"], [28, 2, 1, "", "disable_plots"], [28, 2, 1, "", "get_enabled_plots"]], "sensai.evaluation.eval_util.EvaluationResultCollector": [[28, 2, 1, "", "add_data_frame_csv_file"], [28, 2, 1, "", "add_figure"], [28, 2, 1, "", "child"], [28, 2, 1, "", "is_plot_creation_enabled"]], "sensai.evaluation.eval_util.ModelComparisonData": [[28, 1, 1, "", "Result"], [28, 2, 1, "", "get_best_model"], [28, 2, 1, "", "get_best_model_name"]], "sensai.evaluation.eval_util.ModelComparisonData.Result": [[28, 3, 1, "", "cross_validation_data"], [28, 3, 1, "", "eval_data"], [28, 2, 1, "", "iter_evaluation_data"]], "sensai.evaluation.eval_util.ModelComparisonVisitor": [[28, 2, 1, "", "collect_results"], [28, 2, 1, "", "visit"]], "sensai.evaluation.eval_util.ModelComparisonVisitorAggregatedFeatureImportance": [[28, 2, 1, "", "collect_results"], [28, 2, 1, "", "get_feature_importance"], [28, 2, 1, "", "plot_feature_importance"], [28, 2, 1, "", "visit"]], "sensai.evaluation.eval_util.ModelEvaluation": [[28, 2, 1, "", "compare_models"], [28, 2, 1, "", "compare_models_cross_validation"], [28, 2, 1, "", "create_cross_validator"], [28, 2, 1, "", "create_evaluator"], [28, 2, 1, "", "create_plots"], [28, 2, 1, "", "perform_cross_validation"], [28, 2, 1, "", "perform_simple_evaluation"]], "sensai.evaluation.eval_util.MultiDataModelComparisonData": [[28, 2, 1, "", "create_distribution_plots"], [28, 2, 1, "", "get_eval_stats_collection"], [28, 2, 1, "", "get_eval_stats_list"], [28, 2, 1, "", "get_model_description"], [28, 2, 1, "", "get_model_names"], [28, 2, 1, "", "iter_model_results"]], "sensai.evaluation.eval_util.MultiDataModelEvaluation": [[28, 2, 1, "", "compare_models"]], "sensai.evaluation.eval_util.RegressionMultiDataModelComparisonData": [[28, 2, 1, "", "get_eval_stats_collection"]], "sensai.evaluation.evaluator": [[29, 1, 1, "", "ClassificationEvaluatorParams"], [29, 1, 1, "", "EvaluatorParams"], [29, 1, 1, "", "MetricsDictProvider"], [29, 1, 1, "", "MetricsDictProviderFromFunction"], [29, 1, 1, "", "RegressionEvaluatorParams"], [29, 1, 1, "", "RuleBasedVectorClassificationModelEvaluator"], [29, 1, 1, "", "RuleBasedVectorRegressionModelEvaluator"], [29, 1, 1, "", "VectorClassificationModelEvaluationData"], [29, 1, 1, "", "VectorClassificationModelEvaluator"], [29, 1, 1, "", "VectorClassificationModelEvaluatorParams"], [29, 1, 1, "", "VectorModelEvaluationData"], [29, 1, 1, "", "VectorModelEvaluator"], [29, 1, 1, "", "VectorRegressionModelEvaluationData"], [29, 1, 1, "", "VectorRegressionModelEvaluator"], [29, 1, 1, "", "VectorRegressionModelEvaluatorParams"]], "sensai.evaluation.evaluator.ClassificationEvaluatorParams": [[29, 2, 1, "", "from_dict_or_instance"]], "sensai.evaluation.evaluator.EvaluatorParams": [[29, 2, 1, "", "get_data_splitter"], [29, 2, 1, "", "set_data_splitter"]], "sensai.evaluation.evaluator.MetricsDictProvider": [[29, 2, 1, "", "compute_metrics"]], "sensai.evaluation.evaluator.RegressionEvaluatorParams": [[29, 2, 1, "", "from_dict_or_instance"]], "sensai.evaluation.evaluator.RuleBasedVectorClassificationModelEvaluator": [[29, 2, 1, "", "eval_model"]], "sensai.evaluation.evaluator.RuleBasedVectorRegressionModelEvaluator": [[29, 2, 1, "", "eval_model"]], "sensai.evaluation.evaluator.VectorClassificationModelEvaluationData": [[29, 2, 1, "", "get_misclassified_inputs_data_frame"], [29, 2, 1, "", "get_misclassified_triples_pred_true_input"], [29, 2, 1, "", "to_data_frame"]], "sensai.evaluation.evaluator.VectorClassificationModelEvaluator": [[29, 2, 1, "", "compute_test_data_outputs"]], "sensai.evaluation.evaluator.VectorModelEvaluationData": [[29, 2, 1, "", "get_data_frame"], [29, 2, 1, "", "get_eval_stats"], [29, 4, 1, "", "input_data"], [29, 2, 1, "", "iter_input_output_ground_truth_tuples"], [29, 2, 1, "", "remove_model_and_data"]], "sensai.evaluation.evaluator.VectorModelEvaluator": [[29, 2, 1, "", "create_metrics_dict_provider"], [29, 2, 1, "", "eval_model"], [29, 2, 1, "", "fit_model"], [29, 2, 1, "", "set_tracked_experiment"]], "sensai.evaluation.evaluator.VectorRegressionModelEvaluationData": [[29, 2, 1, "", "create_result_set"], [29, 2, 1, "", "get_eval_stats_collection"], [29, 2, 1, "", "to_data_frame"]], "sensai.evaluation.evaluator.VectorRegressionModelEvaluator": [[29, 2, 1, "", "compute_test_data_outputs"]], "sensai.evaluation.evaluator_clustering": [[30, 1, 1, "", "ClusteringModelEvaluator"], [30, 1, 1, "", "ClusteringModelSupervisedEvaluator"], [30, 1, 1, "", "ClusteringModelUnsupervisedEvaluator"]], "sensai.evaluation.evaluator_clustering.ClusteringModelEvaluator": [[30, 2, 1, "", "eval_model"]], "sensai.evaluation.evaluator_clustering.ClusteringModelSupervisedEvaluator": [[30, 2, 1, "", "eval_model"]], "sensai.evaluation.evaluator_clustering.ClusteringModelUnsupervisedEvaluator": [[30, 2, 1, "", "eval_model"]], "sensai.evaluation.metric_computation": [[32, 1, 1, "", "MetricComputation"], [32, 1, 1, "", "MetricComputationMultiData"], [32, 1, 1, "", "MetricComputationResult"]], "sensai.evaluation.metric_computation.MetricComputation": [[32, 2, 1, "", "compute_metric_value"]], "sensai.evaluation.metric_computation.MetricComputationMultiData": [[32, 2, 1, "", "compute_metric_value"]], "sensai.evaluation.metric_computation.MetricComputationResult": [[32, 3, 1, "", "metric_value"], [32, 3, 1, "", "models"]], "sensai.evaluation.result_set": [[33, 1, 1, "", "RegressionResultSet"], [33, 1, 1, "", "ResultSet"]], "sensai.evaluation.result_set.RegressionResultSet": [[33, 2, 1, "", "col_name_abs_error"], [33, 2, 1, "", "col_name_error"], [33, 2, 1, "", "eval_stats"], [33, 2, 1, "", "from_regression_eval_data"]], "sensai.evaluation.result_set.ResultSet": [[33, 2, 1, "", "col_name_ground_truth"], [33, 2, 1, "", "col_name_predicted"], [33, 2, 1, "", "query"], [33, 2, 1, "", "show"]], "sensai.feature_importance": [[34, 1, 1, "", "AggregatedFeatureImportance"], [34, 1, 1, "", "AggregatedPermutationFeatureImportance"], [34, 1, 1, "", "FeatureImportance"], [34, 1, 1, "", "FeatureImportanceProvider"], [34, 5, 1, "", "compute_permutation_feature_importance_dict"], [34, 5, 1, "", "plot_feature_importance"]], "sensai.feature_importance.AggregatedFeatureImportance": [[34, 2, 1, "", "add"], [34, 2, 1, "", "get_aggregated_feature_importance"], [34, 2, 1, "", "get_aggregated_feature_importance_dict"]], "sensai.feature_importance.AggregatedPermutationFeatureImportance": [[34, 2, 1, "", "add"], [34, 2, 1, "", "add_cross_validation_data"], [34, 2, 1, "", "get_feature_importance"]], "sensai.feature_importance.FeatureImportance": [[34, 2, 1, "", "get_data_frame"], [34, 2, 1, "", "get_feature_importance_dict"], [34, 2, 1, "", "get_sorted_tuples"], [34, 2, 1, "", "plot"]], "sensai.feature_importance.FeatureImportanceProvider": [[34, 2, 1, "", "get_feature_importance"], [34, 2, 1, "", "get_feature_importance_dict"], [34, 2, 1, "", "get_feature_importances"]], "sensai.feature_selection": [[36, 0, 0, "-", "rfe"]], "sensai.feature_selection.rfe": [[36, 1, 1, "", "RFEResult"], [36, 1, 1, "", "RFEStep"], [36, 1, 1, "", "RecursiveFeatureElimination"], [36, 1, 1, "", "RecursiveFeatureEliminationCV"]], "sensai.feature_selection.rfe.RFEResult": [[36, 2, 1, "", "get_metric_values_array"], [36, 2, 1, "", "get_num_features_array"], [36, 2, 1, "", "get_selected_features"], [36, 2, 1, "", "get_sorted_steps"], [36, 2, 1, "", "plot_metric_values"]], "sensai.feature_selection.rfe.RFEStep": [[36, 3, 1, "", "features"], [36, 3, 1, "", "metric_value"]], "sensai.feature_selection.rfe.RecursiveFeatureElimination": [[36, 2, 1, "", "run"]], "sensai.feature_selection.rfe.RecursiveFeatureEliminationCV": [[36, 2, 1, "", "run"]], "sensai.featuregen": [[37, 0, 0, "-", "feature_generator"], [38, 0, 0, "-", "feature_generator_registry"]], "sensai.featuregen.feature_generator": [[37, 1, 1, "", "ChainedFeatureGenerator"], [37, 6, 1, "", "DuplicateColumnNamesException"], [37, 1, 1, "", "FeatureGenerator"], [37, 1, 1, "", "FeatureGeneratorFlattenColumns"], [37, 1, 1, "", "FeatureGeneratorFromColumnGenerator"], [37, 1, 1, "", "FeatureGeneratorFromDFT"], [37, 1, 1, "", "FeatureGeneratorFromNamedTuples"], [37, 1, 1, "", "FeatureGeneratorFromVectorModel"], [37, 1, 1, "", "FeatureGeneratorMapColumn"], [37, 1, 1, "", "FeatureGeneratorMapColumnDict"], [37, 1, 1, "", "FeatureGeneratorNAMarker"], [37, 1, 1, "", "FeatureGeneratorTakeColumns"], [37, 1, 1, "", "FeatureGeneratorTargetDistribution"], [37, 1, 1, "", "MultiFeatureGenerator"], [37, 1, 1, "", "RuleBasedFeatureGenerator"], [37, 5, 1, "", "flattened_feature_generator"]], "sensai.featuregen.feature_generator.ChainedFeatureGenerator": [[37, 2, 1, "", "fit_generate"], [37, 2, 1, "", "info"], [37, 2, 1, "", "is_fitted"]], "sensai.featuregen.feature_generator.FeatureGenerator": [[37, 2, 1, "", "chain"], [37, 2, 1, "", "concat"], [37, 2, 1, "", "fit"], [37, 2, 1, "", "fit_generate"], [37, 2, 1, "", "flattened"], [37, 2, 1, "", "generate"], [37, 2, 1, "", "get_categorical_feature_name_regex"], [37, 2, 1, "", "get_generated_column_names"], [37, 2, 1, "", "get_name"], [37, 2, 1, "", "get_names"], [37, 2, 1, "", "get_normalisation_rules"], [37, 2, 1, "", "info"], [37, 2, 1, "", "is_categorical_feature"], [37, 2, 1, "", "is_fitted"], [37, 2, 1, "", "set_name"], [37, 2, 1, "", "to_dft"]], "sensai.featuregen.feature_generator.FeatureGeneratorFlattenColumns": [[37, 2, 1, "", "info"]], "sensai.featuregen.feature_generator.FeatureGeneratorFromColumnGenerator": [[37, 2, 1, "", "info"], [37, 3, 1, "", "log"]], "sensai.featuregen.feature_generator.FeatureGeneratorFromVectorModel": [[37, 2, 1, "", "info"]], "sensai.featuregen.feature_generator.FeatureGeneratorTakeColumns": [[37, 2, 1, "", "info"]], "sensai.featuregen.feature_generator.FeatureGeneratorTargetDistribution": [[37, 2, 1, "", "info"]], "sensai.featuregen.feature_generator.MultiFeatureGenerator": [[37, 2, 1, "", "fit_generate"], [37, 2, 1, "", "get_names"], [37, 2, 1, "", "info"], [37, 2, 1, "", "is_fitted"]], "sensai.featuregen.feature_generator.RuleBasedFeatureGenerator": [[37, 2, 1, "", "fit"], [37, 2, 1, "", "is_fitted"]], "sensai.featuregen.feature_generator_registry": [[38, 1, 1, "", "FeatureCollector"], [38, 1, 1, "", "FeatureGeneratorRegistry"]], "sensai.featuregen.feature_generator_registry.FeatureCollector": [[38, 2, 1, "", "add_features"], [38, 2, 1, "", "create_dft_normalisation"], [38, 2, 1, "", "create_dft_one_hot_encoder"], [38, 2, 1, "", "create_feature_transformer_normalisation"], [38, 2, 1, "", "create_feature_transformer_one_hot_encoder"], [38, 2, 1, "", "create_multi_feature_generator"], [38, 2, 1, "", "get_categorical_feature_name_regex"], [38, 2, 1, "", "get_multi_feature_generator"], [38, 2, 1, "", "get_normalisation_rules"]], "sensai.featuregen.feature_generator_registry.FeatureGeneratorRegistry": [[38, 4, 1, "", "available_features"], [38, 2, 1, "", "collect_features"], [38, 2, 1, "", "get_feature_generator"], [38, 2, 1, "", "get_feature_generators"], [38, 2, 1, "", "register_factory"]], "sensai.geoanalytics": [[40, 0, 0, "-", "geo_clustering"], [41, 0, 0, "-", "geo_coords"], [49, 0, 0, "-", "local_coords"], [50, 0, 0, "-", "map_tiles"]], "sensai.geoanalytics.geo_clustering": [[40, 1, 1, "", "DBSCANGeoCoordClusterer"], [40, 1, 1, "", "GeoCoordClusterer"], [40, 1, 1, "", "GreedyAgglomerativeGeoCoordClusterer"], [40, 1, 1, "", "SkLearnGeoCoordClusterer"]], "sensai.geoanalytics.geo_clustering.GeoCoordClusterer": [[40, 2, 1, "", "clusters_indices"], [40, 2, 1, "", "fit_geo_coords"]], "sensai.geoanalytics.geo_clustering.GreedyAgglomerativeGeoCoordClusterer": [[40, 1, 1, "", "Cluster"], [40, 1, 1, "", "LocalPoint"], [40, 1, 1, "", "Matrix"], [40, 1, 1, "", "MergeCandidateDeterminationStrategy"], [40, 2, 1, "", "clusters_indices"], [40, 2, 1, "", "fit_geo_coords"]], "sensai.geoanalytics.geo_clustering.GreedyAgglomerativeGeoCoordClusterer.Cluster": [[40, 2, 1, "", "merge"], [40, 2, 1, "", "merge_cost"]], "sensai.geoanalytics.geo_clustering.GreedyAgglomerativeGeoCoordClusterer.Matrix": [[40, 2, 1, "", "get"], [40, 2, 1, "", "set"]], "sensai.geoanalytics.geo_clustering.GreedyAgglomerativeGeoCoordClusterer.MergeCandidateDeterminationStrategy": [[40, 2, 1, "", "iter_candidate_indices"], [40, 2, 1, "", "set_clusterer"]], "sensai.geoanalytics.geo_clustering.SkLearnGeoCoordClusterer": [[40, 2, 1, "", "clusters_indices"], [40, 2, 1, "", "clusters_local_points"], [40, 2, 1, "", "fit_geo_coords"]], "sensai.geoanalytics.geo_coords": [[41, 1, 1, "", "GeoCoord"], [41, 1, 1, "", "GeoRect"], [41, 1, 1, "", "GpsTracePoint"], [41, 5, 1, "", "abs_angle_difference"], [41, 5, 1, "", "approximate_squared_distance"], [41, 5, 1, "", "closest_point_on_polyline"], [41, 5, 1, "", "closest_point_on_segment"], [41, 5, 1, "", "latitude_per_m"], [41, 5, 1, "", "longitude_per_m"], [41, 5, 1, "", "orientation"]], "sensai.geoanalytics.geo_coords.GeoCoord": [[41, 2, 1, "", "distance_to"], [41, 2, 1, "", "latlon"], [41, 2, 1, "", "local_coords"], [41, 2, 1, "", "mean_coord"], [41, 2, 1, "", "squared_distance_to"]], "sensai.geoanalytics.geo_coords.GeoRect": [[41, 2, 1, "", "from_circle"]], "sensai.geoanalytics.geopandas": [[42, 0, 0, "-", "coordinate_clustering"], [43, 0, 0, "-", "coordinate_clustering_ground_truth"], [44, 0, 0, "-", "coordinates"], [45, 0, 0, "-", "geometry"], [46, 0, 0, "-", "graph"]], "sensai.geoanalytics.geopandas.coordinate_clustering": [[42, 1, 1, "", "CoordinateEuclideanClusterer"], [42, 1, 1, "", "SkLearnCoordinateClustering"]], "sensai.geoanalytics.geopandas.coordinate_clustering.CoordinateEuclideanClusterer": [[42, 1, 1, "", "Cluster"], [42, 2, 1, "", "clusters"], [42, 2, 1, "", "fit"], [42, 2, 1, "", "get_cluster"], [42, 2, 1, "", "noise_cluster"], [42, 2, 1, "", "plot"], [42, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.coordinate_clustering.CoordinateEuclideanClusterer.Cluster": [[42, 2, 1, "", "as_multipoint"], [42, 2, 1, "", "load"], [42, 2, 1, "", "save"], [42, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.coordinate_clustering_ground_truth": [[43, 1, 1, "", "PolygonAnnotatedCoordinates"]], "sensai.geoanalytics.geopandas.coordinate_clustering_ground_truth.PolygonAnnotatedCoordinates": [[43, 2, 1, "", "get_coordinates_labels"], [43, 2, 1, "", "plot"], [43, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.coordinates": [[44, 1, 1, "", "GeoDataFrameWrapper"], [44, 5, 1, "", "extract_coordinates_array"], [44, 5, 1, "", "validate_coordinates"]], "sensai.geoanalytics.geopandas.coordinates.GeoDataFrameWrapper": [[44, 2, 1, "", "plot"], [44, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.geometry": [[45, 5, 1, "", "alpha_shape"]], "sensai.geoanalytics.geopandas.graph": [[46, 1, 1, "", "CoordinateSpanningTree"], [46, 1, 1, "", "SpanningTree"], [46, 5, 1, "", "delaunay_graph"]], "sensai.geoanalytics.geopandas.graph.CoordinateSpanningTree": [[46, 2, 1, "", "multi_line_string"], [46, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.graph.SpanningTree": [[46, 2, 1, "", "mean_edge_weight"], [46, 2, 1, "", "num_edges"], [46, 2, 1, "", "summary_dict"], [46, 2, 1, "", "total_weight"]], "sensai.geoanalytics.local_coords": [[49, 1, 1, "", "LocalCoordinateSystem"], [49, 1, 1, "", "LocalHexagonalGrid"], [49, 5, 1, "", "fix_polygon"]], "sensai.geoanalytics.local_coords.LocalCoordinateSystem": [[49, 2, 1, "", "get_lat_lon"], [49, 2, 1, "", "get_local_coords"]], "sensai.geoanalytics.local_coords.LocalHexagonalGrid": [[49, 2, 1, "", "get_hexagon"], [49, 2, 1, "", "get_hexagon_coord_span_for_bounding_box"], [49, 2, 1, "", "get_hexagon_coords_for_point"], [49, 2, 1, "", "get_max_hexagon_column"], [49, 2, 1, "", "get_max_hexagon_row"], [49, 2, 1, "", "get_min_hexagon_column"], [49, 2, 1, "", "get_min_hexagon_row"]], "sensai.geoanalytics.map_tiles": [[50, 1, 1, "", "MapTile"], [50, 1, 1, "", "MapTiles"]], "sensai.geoanalytics.map_tiles.MapTiles": [[50, 2, 1, "", "get_tile"], [50, 2, 1, "", "get_tile_coordinates"], [50, 2, 1, "", "get_tiles_in_rect"], [50, 2, 1, "", "iter_tile_coordinates_in_rect"]], "sensai.hyperopt": [[51, 1, 1, "", "GridSearch"], [51, 1, 1, "", "Option"], [51, 1, 1, "", "OptionsAllOf"], [51, 1, 1, "", "OptionsGenerator"], [51, 1, 1, "", "OptionsGeneratorBase"], [51, 1, 1, "", "OptionsMinMaxOf"], [51, 1, 1, "", "OptionsNOf"], [51, 1, 1, "", "OptionsOneOf"], [51, 1, 1, "", "OptionsOneOrNoneOf"], [51, 1, 1, "", "OptionsProduct"], [51, 1, 1, "", "OptionsSubsets"], [51, 1, 1, "", "ParameterCombinationEquivalenceClassValueCache"], [51, 1, 1, "", "ParameterCombinationSkipDecider"], [51, 1, 1, "", "ParametersMetricsCollection"], [51, 1, 1, "", "SAHyperOpt"], [51, 5, 1, "", "iter_param_combinations"], [51, 5, 1, "", "iter_subsets"]], "sensai.hyperopt.GridSearch": [[51, 1, 1, "", "Result"], [51, 3, 1, "", "log"], [51, 2, 1, "", "run"]], "sensai.hyperopt.GridSearch.Result": [[51, 1, 1, "", "BestParams"], [51, 2, 1, "", "get_best_params"]], "sensai.hyperopt.GridSearch.Result.BestParams": [[51, 3, 1, "", "metric_name"], [51, 3, 1, "", "metric_value"], [51, 3, 1, "", "params"]], "sensai.hyperopt.OptionsAllOf": [[51, 2, 1, "", "iter_options"]], "sensai.hyperopt.OptionsGenerator": [[51, 2, 1, "", "iter_options"], [51, 2, 1, "", "times"]], "sensai.hyperopt.OptionsMinMaxOf": [[51, 2, 1, "", "iter_options"]], "sensai.hyperopt.OptionsOneOf": [[51, 2, 1, "", "iter_options"]], "sensai.hyperopt.OptionsProduct": [[51, 2, 1, "", "iter_options"]], "sensai.hyperopt.OptionsSubsets": [[51, 2, 1, "", "iter_options"]], "sensai.hyperopt.ParameterCombinationEquivalenceClassValueCache": [[51, 2, 1, "", "get"], [51, 2, 1, "", "set"]], "sensai.hyperopt.ParameterCombinationSkipDecider": [[51, 2, 1, "", "is_skipped"], [51, 2, 1, "", "tell"]], "sensai.hyperopt.ParametersMetricsCollection": [[51, 2, 1, "", "add_values"], [51, 2, 1, "", "contains"], [51, 2, 1, "", "get_data_frame"]], "sensai.hyperopt.SAHyperOpt": [[51, 1, 1, "", "ParameterChangeOperator"], [51, 1, 1, "", "State"], [51, 2, 1, "", "get_simulated_annealing"], [51, 3, 1, "", "log"], [51, 2, 1, "", "run"]], "sensai.hyperopt.SAHyperOpt.ParameterChangeOperator": [[51, 2, 1, "", "apply_state_change"], [51, 2, 1, "", "choose_params"], [51, 2, 1, "", "cost_delta"]], "sensai.hyperopt.SAHyperOpt.State": [[51, 2, 1, "", "apply_state_representation"], [51, 2, 1, "", "compute_cost_value"], [51, 2, 1, "", "get_state_representation"]], "sensai.lightgbm": [[53, 1, 1, "", "LightGBMVectorClassificationModel"], [53, 1, 1, "", "LightGBMVectorRegressionModel"]], "sensai.lightgbm.LightGBMVectorClassificationModel": [[53, 2, 1, "", "is_sample_weight_supported"], [53, 3, 1, "", "log"]], "sensai.lightgbm.LightGBMVectorRegressionModel": [[53, 2, 1, "", "is_sample_weight_supported"], [53, 3, 1, "", "log"]], "sensai.local_search": [[54, 1, 1, "", "ParallelTempering"], [54, 1, 1, "", "SAChain"], [54, 1, 1, "", "SACostValue"], [54, 1, 1, "", "SACostValueNumeric"], [54, 1, 1, "", "SAOperator"], [54, 1, 1, "", "SAProbabilityFunction"], [54, 1, 1, "", "SAProbabilityFunctionConstant"], [54, 1, 1, "", "SAProbabilityFunctionLinear"], [54, 1, 1, "", "SAProbabilityFunctionReverseSigmoid"], [54, 1, 1, "", "SAProbabilitySchedule"], [54, 1, 1, "", "SAState"], [54, 1, 1, "", "SATemperatureSchedule"], [54, 1, 1, "", "SATemperatureScheduleExponential"], [54, 1, 1, "", "SATemperatureScheduleFixed"], [54, 1, 1, "", "SATemperatureSchedulePower"], [54, 1, 1, "", "SATemperatureScheduleReverseSigmoid"], [54, 1, 1, "", "SATemperatureScheduleReverseSigmoidSymmetric"], [54, 1, 1, "", "SimulatedAnnealing"], [54, 5, 1, "", "reverse_sigmoid"]], "sensai.local_search.ParallelTempering": [[54, 3, 1, "", "log"], [54, 2, 1, "", "optimise"], [54, 2, 1, "", "plot_cost_progression"]], "sensai.local_search.SAChain": [[54, 2, 1, "", "apply_best_state"], [54, 2, 1, "", "get_series"], [54, 3, 1, "", "log"], [54, 2, 1, "", "log_stats"], [54, 2, 1, "", "plot_series"], [54, 2, 1, "", "step"]], "sensai.local_search.SACostValue": [[54, 2, 1, "", "add"], [54, 2, 1, "", "value"]], "sensai.local_search.SACostValueNumeric": [[54, 2, 1, "", "add"], [54, 2, 1, "", "value"]], "sensai.local_search.SAOperator": [[54, 2, 1, "", "apply"], [54, 2, 1, "", "apply_cost_change"], [54, 2, 1, "", "apply_state_change"], [54, 2, 1, "", "choose_params"], [54, 2, 1, "", "cost_delta"]], "sensai.local_search.SAProbabilitySchedule": [[54, 2, 1, "", "probability"], [54, 2, 1, "", "temperature"]], "sensai.local_search.SAState": [[54, 2, 1, "", "apply_state_representation"], [54, 2, 1, "", "compute_cost_value"], [54, 2, 1, "", "get_state_representation"]], "sensai.local_search.SATemperatureSchedule": [[54, 2, 1, "", "probability"], [54, 2, 1, "", "temperature"]], "sensai.local_search.SATemperatureScheduleExponential": [[54, 2, 1, "", "temperature"]], "sensai.local_search.SATemperatureScheduleFixed": [[54, 2, 1, "", "temperature"]], "sensai.local_search.SATemperatureSchedulePower": [[54, 2, 1, "", "temperature"]], "sensai.local_search.SATemperatureScheduleReverseSigmoid": [[54, 2, 1, "", "temperature"]], "sensai.local_search.SimulatedAnnealing": [[54, 2, 1, "", "get_chain"], [54, 3, 1, "", "log"], [54, 2, 1, "", "optimise"]], "sensai.minizinc": [[55, 1, 1, "", "CostScaler"], [55, 1, 1, "", "MiniZincProblem"], [55, 1, 1, "", "MiniZincSolver"], [55, 5, 1, "", "array_to_mini_zinc"], [55, 5, 1, "", "extract_1d_array_from_output"], [55, 5, 1, "", "extract_multi_dim_array_from_output"]], "sensai.minizinc.CostScaler": [[55, 2, 1, "", "original_value"], [55, 2, 1, "", "scaled_float"], [55, 2, 1, "", "scaled_int"]], "sensai.minizinc.MiniZincProblem": [[55, 2, 1, "", "create_mini_zinc_file"], [55, 2, 1, "", "get_mini_zinc_code"]], "sensai.minizinc.MiniZincSolver": [[55, 2, 1, "", "get_last_solver_time_secs"], [55, 3, 1, "", "log"], [55, 2, 1, "", "solve_path"], [55, 2, 1, "", "solve_problem"]], "sensai.multi_model": [[56, 1, 1, "", "MultiVectorRegressionModel"]], "sensai.naive_bayes": [[57, 1, 1, "", "CategoricalNaiveBayesVectorClassificationModel"]], "sensai.nearest_neighbors": [[58, 1, 1, "", "AbstractKnnFinder"], [58, 1, 1, "", "AllNeighborsProvider"], [58, 1, 1, "", "CachingKNearestNeighboursFinder"], [58, 1, 1, "", "FeatureGeneratorNeighbors"], [58, 1, 1, "", "KNearestNeighboursClassificationModel"], [58, 1, 1, "", "KNearestNeighboursFinder"], [58, 1, 1, "", "KNearestNeighboursRegressionModel"], [58, 1, 1, "", "Neighbor"], [58, 1, 1, "", "NeighborProvider"], [58, 1, 1, "", "TimerangeNeighborsProvider"]], "sensai.nearest_neighbors.AbstractKnnFinder": [[58, 2, 1, "", "find_neighbors"]], "sensai.nearest_neighbors.AllNeighborsProvider": [[58, 2, 1, "", "iter_potential_neighbors"]], "sensai.nearest_neighbors.CachingKNearestNeighboursFinder": [[58, 1, 1, "", "CachedSeriesDistanceMetric"], [58, 1, 1, "", "DistanceMetricCache"], [58, 2, 1, "", "find_neighbors"], [58, 3, 1, "", "log"]], "sensai.nearest_neighbors.CachingKNearestNeighboursFinder.CachedSeriesDistanceMetric": [[58, 2, 1, "", "get_distance_series"]], "sensai.nearest_neighbors.CachingKNearestNeighboursFinder.DistanceMetricCache": [[58, 2, 1, "", "get_cached_metric"], [58, 3, 1, "", "log"]], "sensai.nearest_neighbors.KNearestNeighboursClassificationModel": [[58, 2, 1, "", "find_neighbors"]], "sensai.nearest_neighbors.KNearestNeighboursFinder": [[58, 2, 1, "", "find_neighbors"]], "sensai.nearest_neighbors.NeighborProvider": [[58, 2, 1, "", "iter_potential_neighbors"]], "sensai.nearest_neighbors.TimerangeNeighborsProvider": [[58, 2, 1, "", "iter_potential_neighbors"]], "sensai.normalisation": [[59, 1, 1, "", "NormalisationMode"], [59, 1, 1, "", "VectorDataScaler"]], "sensai.normalisation.NormalisationMode": [[59, 3, 1, "", "MAX_ALL"], [59, 3, 1, "", "MAX_BY_COLUMN"], [59, 3, 1, "", "NONE"], [59, 3, 1, "", "STANDARDISED"]], "sensai.normalisation.VectorDataScaler": [[59, 2, 1, "", "get_denormalised_array"], [59, 2, 1, "", "get_normalised_array"]], "sensai.pytorch_lightning": [[61, 0, 0, "-", "pl_models"]], "sensai.pytorch_lightning.pl_models": [[61, 1, 1, "", "PLTensorToScalarClassificationModel"], [61, 1, 1, "", "PLTensorToScalarRegressionModel"], [61, 1, 1, "", "PLTensorToTensorClassificationModel"], [61, 1, 1, "", "PLTensorToTensorRegressionModel"], [61, 1, 1, "", "PLWrappedModel"]], "sensai.pytorch_lightning.pl_models.PLWrappedModel": [[61, 2, 1, "", "fit"], [61, 2, 1, "", "predict"]], "sensai.sklearn": [[63, 0, 0, "-", "sklearn_base"], [64, 0, 0, "-", "sklearn_classification"], [65, 0, 0, "-", "sklearn_regression"]], "sensai.sklearn.sklearn_base": [[63, 1, 1, "", "AbstractSkLearnMultiDimVectorRegressionModel"], [63, 1, 1, "", "AbstractSkLearnMultipleOneDimVectorRegressionModel"], [63, 1, 1, "", "AbstractSkLearnVectorClassificationModel"], [63, 1, 1, "", "AbstractSkLearnVectorRegressionModel"], [63, 1, 1, "", "ActualFitParams"], [63, 1, 1, "", "FeatureImportanceProviderSkLearnClassification"], [63, 1, 1, "", "FeatureImportanceProviderSkLearnRegressionMultiDim"], [63, 1, 1, "", "FeatureImportanceProviderSkLearnRegressionMultipleOneDim"], [63, 5, 1, "", "create_sklearn_model"], [63, 5, 1, "", "str_sklearn_model"]], "sensai.sklearn.sklearn_base.AbstractSkLearnMultipleOneDimVectorRegressionModel": [[63, 2, 1, "", "get_sklearn_model"]], "sensai.sklearn.sklearn_base.AbstractSkLearnVectorClassificationModel": [[63, 2, 1, "", "get_params"], [63, 2, 1, "", "is_sample_weight_supported"], [63, 2, 1, "", "set_params"], [63, 2, 1, "", "with_sklearn_input_transformer"]], "sensai.sklearn.sklearn_base.AbstractSkLearnVectorRegressionModel": [[63, 2, 1, "", "is_sample_weight_supported"], [63, 3, 1, "", "log"], [63, 2, 1, "", "with_sklearn_input_transformer"], [63, 2, 1, "", "with_sklearn_output_transformer"]], "sensai.sklearn.sklearn_base.FeatureImportanceProviderSkLearnClassification": [[63, 2, 1, "", "get_feature_importance_dict"]], "sensai.sklearn.sklearn_base.FeatureImportanceProviderSkLearnRegressionMultiDim": [[63, 2, 1, "", "get_feature_importance_dict"]], "sensai.sklearn.sklearn_base.FeatureImportanceProviderSkLearnRegressionMultipleOneDim": [[63, 2, 1, "", "get_feature_importance_dict"]], "sensai.sklearn.sklearn_classification": [[64, 1, 1, "", "SkLearnDecisionTreeVectorClassificationModel"], [64, 1, 1, "", "SkLearnKNeighborsVectorClassificationModel"], [64, 1, 1, "", "SkLearnLogisticRegressionVectorClassificationModel"], [64, 1, 1, "", "SkLearnMLPVectorClassificationModel"], [64, 1, 1, "", "SkLearnMultinomialNBVectorClassificationModel"], [64, 1, 1, "", "SkLearnRandomForestVectorClassificationModel"], [64, 1, 1, "", "SkLearnSVCVectorClassificationModel"]], "sensai.sklearn.sklearn_classification.SkLearnDecisionTreeVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnKNeighborsVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnLogisticRegressionVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnMLPVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnMultinomialNBVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnRandomForestVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnSVCVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression": [[65, 1, 1, "", "SkLearnDecisionTreeVectorRegressionModel"], [65, 1, 1, "", "SkLearnDummyVectorRegressionModel"], [65, 1, 1, "", "SkLearnExtraTreesVectorRegressionModel"], [65, 1, 1, "", "SkLearnGradientBoostingVectorRegressionModel"], [65, 1, 1, "", "SkLearnKNeighborsVectorRegressionModel"], [65, 1, 1, "", "SkLearnLinearLassoRegressionVectorRegressionModel"], [65, 1, 1, "", "SkLearnLinearRegressionVectorRegressionModel"], [65, 1, 1, "", "SkLearnLinearRidgeRegressionVectorRegressionModel"], [65, 1, 1, "", "SkLearnLinearSVRVectorRegressionModel"], [65, 1, 1, "", "SkLearnMultiLayerPerceptronVectorRegressionModel"], [65, 1, 1, "", "SkLearnRandomForestVectorRegressionModel"], [65, 1, 1, "", "SkLearnSVRVectorRegressionModel"]], "sensai.sklearn.sklearn_regression.SkLearnDecisionTreeVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"], [65, 2, 1, "", "plot"], [65, 2, 1, "", "plot_graphviz_pdf"]], "sensai.sklearn.sklearn_regression.SkLearnDummyVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnExtraTreesVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnGradientBoostingVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnKNeighborsVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnLinearLassoRegressionVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnLinearRegressionVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnLinearRidgeRegressionVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnLinearSVRVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnMultiLayerPerceptronVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnRandomForestVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnSVRVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn_quantile": [[66, 1, 1, "", "QuantileRegressionMetric"], [66, 1, 1, "", "QuantileRegressionMetricAccuracyInConfidenceInterval"], [66, 1, 1, "", "QuantileRegressionMetricConfidenceIntervalMeanSize"], [66, 1, 1, "", "QuantileRegressionMetricConfidenceIntervalMedianSize"], [66, 1, 1, "", "QuantileRegressionMetricRelFreqMaxSizeConfidenceInterval"], [66, 1, 1, "", "RandomForestQuantileRegressorVectorRegressionModel"]], "sensai.sklearn_quantile.QuantileRegressionMetric": [[66, 2, 1, "", "compute_confidence_intervals"]], "sensai.sklearn_quantile.QuantileRegressionMetricAccuracyInConfidenceInterval": [[66, 2, 1, "", "compute_value"], [66, 3, 1, "", "name"]], "sensai.sklearn_quantile.QuantileRegressionMetricConfidenceIntervalMeanSize": [[66, 2, 1, "", "compute_value"], [66, 3, 1, "", "name"]], "sensai.sklearn_quantile.QuantileRegressionMetricConfidenceIntervalMedianSize": [[66, 2, 1, "", "compute_value"], [66, 3, 1, "", "name"]], "sensai.sklearn_quantile.QuantileRegressionMetricRelFreqMaxSizeConfidenceInterval": [[66, 2, 1, "", "compute_value"]], "sensai.sklearn_quantile.RandomForestQuantileRegressorVectorRegressionModel": [[66, 2, 1, "", "predict_confidence_intervals"]], "sensai.tensor_model": [[67, 6, 1, "", "InvalidShapeError"], [67, 1, 1, "", "TensorModel"], [67, 1, 1, "", "TensorToScalarClassificationModel"], [67, 1, 1, "", "TensorToScalarRegressionModel"], [67, 1, 1, "", "TensorToTensorClassificationModel"], [67, 1, 1, "", "TensorToTensorRegressionModel"]], "sensai.tensor_model.TensorModel": [[67, 2, 1, "", "get_model_input_shape"], [67, 2, 1, "", "get_model_output_shape"]], "sensai.tensor_model.TensorToScalarClassificationModel": [[67, 2, 1, "", "predict"]], "sensai.tensor_model.TensorToScalarRegressionModel": [[67, 2, 1, "", "predict"]], "sensai.tensor_model.TensorToTensorClassificationModel": [[67, 2, 1, "", "convert_class_probabilities_to_predictions"], [67, 2, 1, "", "fit"], [67, 2, 1, "", "get_model_output_shape"], [67, 2, 1, "", "get_num_predicted_classes"], [67, 2, 1, "", "is_regression_model"], [67, 2, 1, "", "predict"], [67, 2, 1, "", "predict_class_probabilities"]], "sensai.tensor_model.TensorToTensorRegressionModel": [[67, 2, 1, "", "predict"]], "sensai.torch": [[69, 0, 0, "-", "torch_base"], [70, 0, 0, "-", "torch_data"], [71, 0, 0, "-", "torch_enums"], [72, 0, 0, "-", "torch_eval_util"], [86, 0, 0, "-", "torch_modules"], [87, 0, 0, "-", "torch_opt"], [88, 0, 0, "-", "torchtext"]], "sensai.torch.torch_base": [[69, 1, 1, "", "MCDropoutCapableNNModule"], [69, 1, 1, "", "OutputTensorToArrayConverter"], [69, 1, 1, "", "TorchAutoregressiveResultHandler"], [69, 1, 1, "", "TorchDataSetProviderFactory"], [69, 1, 1, "", "TorchDataSetProviderFactoryClassificationDefault"], [69, 1, 1, "", "TorchDataSetProviderFactoryRegressionDefault"], [69, 1, 1, "", "TorchModel"], [69, 1, 1, "", "TorchModelFactoryFromModule"], [69, 1, 1, "", "TorchModelFittingStrategy"], [69, 1, 1, "", "TorchModelFittingStrategyDefault"], [69, 1, 1, "", "TorchModelFromModule"], [69, 1, 1, "", "TorchModelFromModuleFactory"], [69, 1, 1, "", "TorchVectorClassificationModel"], [69, 1, 1, "", "TorchVectorRegressionModel"], [69, 1, 1, "", "VectorTorchModel"]], "sensai.torch.torch_base.MCDropoutCapableNNModule": [[69, 2, 1, "", "infer_mc_dropout"]], "sensai.torch.torch_base.OutputTensorToArrayConverter": [[69, 2, 1, "", "convert"]], "sensai.torch.torch_base.TorchAutoregressiveResultHandler": [[69, 2, 1, "", "clear_results"], [69, 2, 1, "", "save_results"]], "sensai.torch.torch_base.TorchDataSetProviderFactory": [[69, 2, 1, "", "create_data_set_provider"]], "sensai.torch.torch_base.TorchDataSetProviderFactoryClassificationDefault": [[69, 2, 1, "", "create_data_set_provider"]], "sensai.torch.torch_base.TorchDataSetProviderFactoryRegressionDefault": [[69, 2, 1, "", "create_data_set_provider"]], "sensai.torch.torch_base.TorchModel": [[69, 2, 1, "", "apply"], [69, 2, 1, "", "apply_scaled"], [69, 4, 1, "", "best_epoch"], [69, 2, 1, "", "create_torch_module"], [69, 2, 1, "", "fit"], [69, 2, 1, "", "get_module_bytes"], [69, 2, 1, "", "get_torch_module"], [69, 3, 1, "", "log"], [69, 2, 1, "", "scaled_output"], [69, 2, 1, "", "set_module_bytes"], [69, 2, 1, "", "set_normalisation_check_threshold"], [69, 2, 1, "", "set_torch_module"], [69, 4, 1, "", "total_epochs"]], "sensai.torch.torch_base.TorchModelFittingStrategy": [[69, 2, 1, "", "fit"]], "sensai.torch.torch_base.TorchModelFittingStrategyDefault": [[69, 2, 1, "", "fit"]], "sensai.torch.torch_base.TorchModelFromModule": [[69, 2, 1, "", "create_torch_module"]], "sensai.torch.torch_base.TorchModelFromModuleFactory": [[69, 2, 1, "", "create_torch_module"]], "sensai.torch.torch_base.TorchVectorClassificationModel": [[69, 2, 1, "", "from_module"], [69, 2, 1, "", "with_data_frame_splitter"], [69, 2, 1, "", "with_input_tensoriser"], [69, 2, 1, "", "with_normalisation_check_threshold"], [69, 2, 1, "", "with_output_tensoriser"], [69, 2, 1, "", "with_torch_data_set_provider_factory"]], "sensai.torch.torch_base.TorchVectorRegressionModel": [[69, 2, 1, "", "from_module"], [69, 2, 1, "", "with_autoregressive_result_handler"], [69, 2, 1, "", "with_data_frame_splitter"], [69, 2, 1, "", "with_input_tensoriser"], [69, 2, 1, "", "with_normalisation_check_threshold"], [69, 2, 1, "", "with_output_tensor_to_array_converter"], [69, 2, 1, "", "with_output_tensoriser"], [69, 2, 1, "", "with_torch_data_set_provider_factory"]], "sensai.torch.torch_base.VectorTorchModel": [[69, 2, 1, "", "create_torch_module"], [69, 2, 1, "", "create_torch_module_for_dims"]], "sensai.torch.torch_data": [[70, 1, 1, "", "ClassificationVectorDataUtil"], [70, 1, 1, "", "DataUtil"], [70, 1, 1, "", "RuleBasedTensoriser"], [70, 1, 1, "", "TensorScaler"], [70, 1, 1, "", "TensorScalerCentreAndScale"], [70, 1, 1, "", "TensorScalerFromDFTSkLearnTransformer"], [70, 1, 1, "", "TensorScalerFromVectorDataScaler"], [70, 1, 1, "", "TensorScalerIdentity"], [70, 1, 1, "", "TensorTransformer"], [70, 1, 1, "", "TensorTuple"], [70, 1, 1, "", "Tensoriser"], [70, 1, 1, "", "TensoriserClassLabelIndices"], [70, 1, 1, "", "TensoriserDataFrameFloatValuesMatrix"], [70, 1, 1, "", "TorchDataSet"], [70, 1, 1, "", "TorchDataSetFromDataFrames"], [70, 1, 1, "", "TorchDataSetFromDataFramesDynamicallyTensorised"], [70, 1, 1, "", "TorchDataSetFromDataFramesPreTensorised"], [70, 1, 1, "", "TorchDataSetFromTensors"], [70, 1, 1, "", "TorchDataSetProvider"], [70, 1, 1, "", "TorchDataSetProviderFromDataUtil"], [70, 1, 1, "", "TorchDataSetProviderFromVectorDataUtil"], [70, 1, 1, "", "VectorDataUtil"], [70, 5, 1, "", "to_tensor"]], "sensai.torch.torch_data.ClassificationVectorDataUtil": [[70, 2, 1, "", "model_output_dim"]], "sensai.torch.torch_data.DataUtil": [[70, 2, 1, "", "get_input_tensor_scaler"], [70, 2, 1, "", "get_output_tensor_scaler"], [70, 2, 1, "", "input_dim"], [70, 2, 1, "", "model_output_dim"], [70, 2, 1, "", "split_into_tensors"]], "sensai.torch.torch_data.RuleBasedTensoriser": [[70, 2, 1, "", "fit"]], "sensai.torch.torch_data.TensorScaler": [[70, 2, 1, "", "cuda"], [70, 2, 1, "", "denormalise"], [70, 2, 1, "", "normalise"]], "sensai.torch.torch_data.TensorScalerCentreAndScale": [[70, 2, 1, "", "cuda"], [70, 2, 1, "", "denormalise"], [70, 2, 1, "", "normalise"]], "sensai.torch.torch_data.TensorScalerIdentity": [[70, 2, 1, "", "cuda"], [70, 2, 1, "", "denormalise"], [70, 2, 1, "", "normalise"]], "sensai.torch.torch_data.TensorTransformer": [[70, 2, 1, "", "transform"]], "sensai.torch.torch_data.TensorTuple": [[70, 2, 1, "", "concat"], [70, 2, 1, "", "cuda"], [70, 2, 1, "", "item"], [70, 2, 1, "", "tuple"]], "sensai.torch.torch_data.Tensoriser": [[70, 2, 1, "", "fit"], [70, 2, 1, "", "tensorise"]], "sensai.torch.torch_data.TorchDataSet": [[70, 2, 1, "", "iter_batches"], [70, 2, 1, "", "size"]], "sensai.torch.torch_data.TorchDataSetFromDataFrames": [[70, 2, 1, "", "iter_batches"], [70, 2, 1, "", "size"]], "sensai.torch.torch_data.TorchDataSetFromDataFramesDynamicallyTensorised": [[70, 2, 1, "", "iter_batches"], [70, 2, 1, "", "size"]], "sensai.torch.torch_data.TorchDataSetFromTensors": [[70, 2, 1, "", "iter_batches"], [70, 2, 1, "", "size"]], "sensai.torch.torch_data.TorchDataSetProvider": [[70, 2, 1, "", "get_input_dim"], [70, 2, 1, "", "get_input_tensor_scaler"], [70, 2, 1, "", "get_model_output_dim"], [70, 2, 1, "", "get_output_tensor_scaler"], [70, 2, 1, "", "provide_split"]], "sensai.torch.torch_data.TorchDataSetProviderFromDataUtil": [[70, 2, 1, "", "provide_split"]], "sensai.torch.torch_data.TorchDataSetProviderFromVectorDataUtil": [[70, 2, 1, "", "provide_split"]], "sensai.torch.torch_data.VectorDataUtil": [[70, 2, 1, "", "get_input_tensor_scaler"], [70, 2, 1, "", "get_output_tensor_scaler"], [70, 2, 1, "", "input_dim"], [70, 2, 1, "", "model_output_dim"], [70, 2, 1, "", "output_dim"], [70, 2, 1, "", "split_into_data_sets"], [70, 2, 1, "", "split_into_tensors"]], "sensai.torch.torch_enums": [[71, 1, 1, "", "ActivationFunction"], [71, 1, 1, "", "ClassificationOutputMode"]], "sensai.torch.torch_enums.ActivationFunction": [[71, 3, 1, "", "LOG_SOFTMAX"], [71, 3, 1, "", "NONE"], [71, 3, 1, "", "RELU"], [71, 3, 1, "", "SIGMOID"], [71, 3, 1, "", "SOFTMAX"], [71, 3, 1, "", "TANH"], [71, 2, 1, "", "from_name"], [71, 2, 1, "", "get_name"], [71, 2, 1, "", "get_torch_function"], [71, 2, 1, "", "torch_function_from_any"]], "sensai.torch.torch_enums.ClassificationOutputMode": [[71, 3, 1, "", "LOG_PROBABILITIES"], [71, 3, 1, "", "PROBABILITIES"], [71, 3, 1, "", "UNNORMALISED_LOG_PROBABILITIES"], [71, 2, 1, "", "for_activation_fn"]], "sensai.torch.torch_eval_util": [[72, 1, 1, "", "TorchVectorRegressionModelEvaluationUtil"]], "sensai.torch.torch_models.lstnet": [[75, 0, 0, "-", "lstnet_models"], [76, 0, 0, "-", "lstnet_modules"]], "sensai.torch.torch_models.lstnet.lstnet_models": [[75, 1, 1, "", "LSTNetworkVectorClassificationModel"]], "sensai.torch.torch_models.lstnet.lstnet_models.LSTNetworkVectorClassificationModel": [[75, 1, 1, "", "DataUtil"]], "sensai.torch.torch_models.lstnet.lstnet_models.LSTNetworkVectorClassificationModel.DataUtil": [[75, 2, 1, "", "get_input_output_pair"], [75, 2, 1, "", "get_input_tensor_scaler"], [75, 2, 1, "", "get_output_tensor_scaler"], [75, 2, 1, "", "input_dim"], [75, 2, 1, "", "model_output_dim"], [75, 2, 1, "", "split_into_tensors"]], "sensai.torch.torch_models.lstnet.lstnet_modules": [[76, 1, 1, "", "LSTNetwork"]], "sensai.torch.torch_models.lstnet.lstnet_modules.LSTNetwork": [[76, 1, 1, "", "Mode"], [76, 2, 1, "", "compute_encoder_dim"], [76, 2, 1, "", "forward"], [76, 2, 1, "", "get_encoder_dim"]], "sensai.torch.torch_models.lstnet.lstnet_modules.LSTNetwork.Mode": [[76, 3, 1, "", "CLASSIFICATION"], [76, 3, 1, "", "ENCODER"], [76, 3, 1, "", "REGRESSION"]], "sensai.torch.torch_models.mlp": [[78, 0, 0, "-", "mlp_models"], [79, 0, 0, "-", "mlp_modules"]], "sensai.torch.torch_models.mlp.mlp_models": [[78, 1, 1, "", "MultiLayerPerceptronTorchModel"], [78, 1, 1, "", "MultiLayerPerceptronVectorClassificationModel"], [78, 1, 1, "", "MultiLayerPerceptronVectorRegressionModel"]], "sensai.torch.torch_models.mlp.mlp_models.MultiLayerPerceptronTorchModel": [[78, 2, 1, "", "create_torch_module_for_dims"]], "sensai.torch.torch_models.mlp.mlp_modules": [[79, 1, 1, "", "MultiLayerPerceptron"]], "sensai.torch.torch_models.mlp.mlp_modules.MultiLayerPerceptron": [[79, 2, 1, "", "forward"]], "sensai.torch.torch_models.residualffn": [[81, 0, 0, "-", "residualffn_models"], [82, 0, 0, "-", "residualffn_modules"]], "sensai.torch.torch_models.residualffn.residualffn_models": [[81, 1, 1, "", "ResidualFeedForwardNetworkTorchModel"], [81, 1, 1, "", "ResidualFeedForwardNetworkVectorRegressionModel"]], "sensai.torch.torch_models.residualffn.residualffn_models.ResidualFeedForwardNetworkTorchModel": [[81, 2, 1, "", "create_torch_module_for_dims"]], "sensai.torch.torch_models.residualffn.residualffn_modules": [[82, 1, 1, "", "ResidualFeedForwardNetwork"]], "sensai.torch.torch_models.residualffn.residualffn_modules.ResidualFeedForwardNetwork": [[82, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq": [[84, 0, 0, "-", "seq_models"], [85, 0, 0, "-", "seq_modules"]], "sensai.torch.torch_models.seq.seq_models": [[84, 1, 1, "", "EncoderDecoderVectorClassificationModel"], [84, 1, 1, "", "EncoderDecoderVectorRegressionModel"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorClassificationModel": [[84, 1, 1, "", "EncoderDecoderModel"], [84, 1, 1, "", "InputTensoriser"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorClassificationModel.EncoderDecoderModel": [[84, 2, 1, "", "create_torch_module_for_dims"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorClassificationModel.InputTensoriser": [[84, 2, 1, "", "fit"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorRegressionModel": [[84, 1, 1, "", "EncoderDecoderModel"], [84, 1, 1, "", "InputTensoriser"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorRegressionModel.EncoderDecoderModel": [[84, 2, 1, "", "create_torch_module"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorRegressionModel.InputTensoriser": [[84, 2, 1, "", "fit"]], "sensai.torch.torch_models.seq.seq_modules": [[85, 1, 1, "", "DecoderFactory"], [85, 1, 1, "", "DecoderProtocol"], [85, 1, 1, "", "EncoderDecoderModule"], [85, 1, 1, "", "EncoderFactory"], [85, 1, 1, "", "EncoderProtocol"], [85, 1, 1, "", "LSTNetworkEncoder"], [85, 1, 1, "", "LSTNetworkEncoderFactory"], [85, 1, 1, "", "LinearPredictorFactory"], [85, 1, 1, "", "MLPPredictorFactory"], [85, 1, 1, "", "PredictorFactory"], [85, 1, 1, "", "PredictorProtocol"], [85, 1, 1, "", "RnnEncoderFactory"], [85, 1, 1, "", "RnnEncoderModule"], [85, 1, 1, "", "SingleTargetDecoderFactory"], [85, 1, 1, "", "SingleTargetDecoderModule"], [85, 1, 1, "", "TargetSequenceDecoderFactory"], [85, 1, 1, "", "TargetSequenceDecoderModule"]], "sensai.torch.torch_models.seq.seq_modules.DecoderFactory": [[85, 2, 1, "", "create_decoder"]], "sensai.torch.torch_models.seq.seq_modules.DecoderProtocol": [[85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.EncoderDecoderModule": [[85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.EncoderFactory": [[85, 2, 1, "", "create_encoder"]], "sensai.torch.torch_models.seq.seq_modules.EncoderProtocol": [[85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.LSTNetworkEncoder": [[85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.LSTNetworkEncoderFactory": [[85, 2, 1, "", "create_encoder"], [85, 2, 1, "", "get_latent_dim"]], "sensai.torch.torch_models.seq.seq_modules.LinearPredictorFactory": [[85, 2, 1, "", "create_predictor"]], "sensai.torch.torch_models.seq.seq_modules.MLPPredictorFactory": [[85, 2, 1, "", "create_predictor"]], "sensai.torch.torch_models.seq.seq_modules.PredictorFactory": [[85, 2, 1, "", "create_predictor"]], "sensai.torch.torch_models.seq.seq_modules.PredictorProtocol": [[85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.RnnEncoderFactory": [[85, 2, 1, "", "create_encoder"]], "sensai.torch.torch_models.seq.seq_modules.RnnEncoderModule": [[85, 1, 1, "", "RnnType"], [85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.RnnEncoderModule.RnnType": [[85, 3, 1, "", "GRU"], [85, 3, 1, "", "LSTM"]], "sensai.torch.torch_models.seq.seq_modules.SingleTargetDecoderFactory": [[85, 2, 1, "", "create_decoder"]], "sensai.torch.torch_models.seq.seq_modules.SingleTargetDecoderModule": [[85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderFactory": [[85, 2, 1, "", "create_decoder"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderModule": [[85, 1, 1, "", "LatentPassOnMode"], [85, 1, 1, "", "OutputMode"], [85, 1, 1, "", "PredictionMode"], [85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderModule.LatentPassOnMode": [[85, 3, 1, "", "CONCAT_INPUT"], [85, 3, 1, "", "INIT_HIDDEN"], [85, 3, 1, "", "NO_LATENT"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderModule.OutputMode": [[85, 3, 1, "", "MULTI_OUTPUT"], [85, 3, 1, "", "SINGLE_OUTPUT"], [85, 3, 1, "", "SINGLE_OUTPUT_MEAN"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderModule.PredictionMode": [[85, 3, 1, "", "DIRECT"], [85, 3, 1, "", "MULTI_LATENT"], [85, 3, 1, "", "SINGLE_LATENT"]], "sensai.torch.torch_opt": [[87, 1, 1, "", "NNLossEvaluator"], [87, 1, 1, "", "NNLossEvaluatorClassification"], [87, 1, 1, "", "NNLossEvaluatorFixedDim"], [87, 1, 1, "", "NNLossEvaluatorRegression"], [87, 1, 1, "", "NNOptimiser"], [87, 1, 1, "", "NNOptimiserParams"], [87, 1, 1, "", "Optimiser"], [87, 1, 1, "", "TrainingInfo"]], "sensai.torch.torch_opt.NNLossEvaluator": [[87, 1, 1, "", "Evaluation"], [87, 2, 1, "", "get_validation_metric_name"], [87, 2, 1, "", "start_evaluation"]], "sensai.torch.torch_opt.NNLossEvaluator.Evaluation": [[87, 2, 1, "", "compute_train_batch_loss"], [87, 2, 1, "", "get_epoch_train_loss"], [87, 2, 1, "", "get_validation_metrics"], [87, 2, 1, "", "process_validation_batch"], [87, 2, 1, "", "start_epoch"]], "sensai.torch.torch_opt.NNLossEvaluatorClassification": [[87, 1, 1, "", "LossFunction"], [87, 1, 1, "", "ValidationLossEvaluator"], [87, 2, 1, "", "create_validation_loss_evaluator"], [87, 2, 1, "", "get_class_weights_tensor"], [87, 2, 1, "", "get_output_dim_weights"], [87, 2, 1, "", "get_training_criterion"], [87, 2, 1, "", "get_validation_metric_name"]], "sensai.torch.torch_opt.NNLossEvaluatorClassification.LossFunction": [[87, 3, 1, "", "CROSSENTROPY"], [87, 3, 1, "", "NLL"], [87, 2, 1, "", "create_criterion"], [87, 2, 1, "", "default_for_output_mode"], [87, 2, 1, "", "get_validation_metric_key"]], "sensai.torch.torch_opt.NNLossEvaluatorClassification.ValidationLossEvaluator": [[87, 2, 1, "", "end_validation_collection"], [87, 2, 1, "", "process_validation_result_batch"], [87, 2, 1, "", "start_validation_collection"]], "sensai.torch.torch_opt.NNLossEvaluatorFixedDim": [[87, 1, 1, "", "Evaluation"], [87, 1, 1, "", "ValidationLossEvaluator"], [87, 2, 1, "", "create_validation_loss_evaluator"], [87, 2, 1, "", "get_output_dim_weights"], [87, 2, 1, "", "get_training_criterion"], [87, 2, 1, "", "get_validation_metric_name"], [87, 2, 1, "", "start_evaluation"]], "sensai.torch.torch_opt.NNLossEvaluatorFixedDim.Evaluation": [[87, 2, 1, "", "compute_train_batch_loss"], [87, 2, 1, "", "get_epoch_train_loss"], [87, 2, 1, "", "get_validation_metrics"], [87, 2, 1, "", "process_validation_batch"], [87, 2, 1, "", "start_epoch"]], "sensai.torch.torch_opt.NNLossEvaluatorFixedDim.ValidationLossEvaluator": [[87, 2, 1, "", "end_validation_collection"], [87, 2, 1, "", "process_validation_result_batch"], [87, 2, 1, "", "start_validation_collection"]], "sensai.torch.torch_opt.NNLossEvaluatorRegression": [[87, 1, 1, "", "LossFunction"], [87, 1, 1, "", "ValidationLossEvaluator"], [87, 2, 1, "", "create_validation_loss_evaluator"], [87, 2, 1, "", "get_output_dim_weights"], [87, 2, 1, "", "get_training_criterion"], [87, 2, 1, "", "get_validation_metric_name"]], "sensai.torch.torch_opt.NNLossEvaluatorRegression.LossFunction": [[87, 3, 1, "", "L1LOSS"], [87, 3, 1, "", "L2LOSS"], [87, 3, 1, "", "MSELOSS"], [87, 3, 1, "", "SMOOTHL1LOSS"]], "sensai.torch.torch_opt.NNLossEvaluatorRegression.ValidationLossEvaluator": [[87, 2, 1, "", "end_validation_collection"], [87, 2, 1, "", "process_validation_result_batch"], [87, 2, 1, "", "start_validation_collection"]], "sensai.torch.torch_opt.NNOptimiser": [[87, 2, 1, "", "fit"], [87, 3, 1, "", "log"]], "sensai.torch.torch_opt.NNOptimiserParams": [[87, 3, 1, "", "REMOVED_PARAMS"], [87, 3, 1, "", "RENAMED_PARAMS"], [87, 2, 1, "", "from_dict"], [87, 2, 1, "", "from_dict_or_instance"], [87, 2, 1, "", "from_either_dict_or_instance"]], "sensai.torch.torch_opt.Optimiser": [[87, 3, 1, "", "ADADELTA"], [87, 3, 1, "", "ADAGRAD"], [87, 3, 1, "", "ADAM"], [87, 3, 1, "", "ADAMAX"], [87, 3, 1, "", "ADAMW"], [87, 3, 1, "", "ASGD"], [87, 3, 1, "", "LBFGS"], [87, 3, 1, "", "RMSPROP"], [87, 3, 1, "", "RPROP"], [87, 3, 1, "", "SGD"], [87, 2, 1, "", "from_name"], [87, 2, 1, "", "from_name_or_instance"]], "sensai.torch.torch_opt.TrainingInfo": [[87, 2, 1, "", "get_training_loss_series"], [87, 2, 1, "", "get_validation_metric_series"], [87, 2, 1, "", "plot_all"]], "sensai.torch.torchtext": [[88, 1, 1, "", "TorchDataSetFromTorchtextDataSet"], [88, 1, 1, "", "TorchDataSetProviderFromTorchtextDataSet"], [88, 1, 1, "", "TorchtextDataSetFromDataFrame"]], "sensai.torch.torchtext.TorchDataSetFromTorchtextDataSet": [[88, 2, 1, "", "iter_batches"], [88, 2, 1, "", "size"]], "sensai.torch.torchtext.TorchDataSetProviderFromTorchtextDataSet": [[88, 2, 1, "", "provide_split"]], "sensai.tracking": [[89, 0, 0, "-", "azure_tracking"], [90, 0, 0, "-", "clearml_tracking"], [92, 0, 0, "-", "mlflow_tracking"], [93, 0, 0, "-", "tracking_base"]], "sensai.tracking.azure_tracking": [[89, 1, 1, "", "TrackedAzureMLEvaluation"], [89, 1, 1, "", "TrackedAzureMLExperiment"]], "sensai.tracking.azure_tracking.TrackedAzureMLEvaluation": [[89, 2, 1, "", "eval_model"]], "sensai.tracking.clearml_tracking": [[90, 1, 1, "", "ClearMLExperiment"], [90, 1, 1, "", "ClearMLTrackingContext"]], "sensai.tracking.clearml_tracking.ClearMLTrackingContext": [[90, 2, 1, "", "track_figure"], [90, 2, 1, "", "track_text"]], "sensai.tracking.mlflow_tracking": [[92, 1, 1, "", "MLFlowExperiment"], [92, 1, 1, "", "MLFlowTrackingContext"]], "sensai.tracking.mlflow_tracking.MLFlowExperiment": [[92, 2, 1, "", "begin_context_for_model"], [92, 2, 1, "", "end_context"]], "sensai.tracking.mlflow_tracking.MLFlowTrackingContext": [[92, 2, 1, "", "track_figure"], [92, 2, 1, "", "track_tag"], [92, 2, 1, "", "track_text"]], "sensai.tracking.tracking_base": [[93, 1, 1, "", "DummyTrackingContext"], [93, 1, 1, "", "TrackedExperiment"], [93, 1, 1, "", "TrackingContext"], [93, 1, 1, "", "TrackingMixin"]], "sensai.tracking.tracking_base.DummyTrackingContext": [[93, 2, 1, "", "is_enabled"], [93, 2, 1, "", "track_figure"], [93, 2, 1, "", "track_text"]], "sensai.tracking.tracking_base.TrackedExperiment": [[93, 2, 1, "", "begin_context"], [93, 2, 1, "", "begin_context_for_model"], [93, 2, 1, "", "end_context"], [93, 2, 1, "", "track_values"]], "sensai.tracking.tracking_base.TrackingContext": [[93, 2, 1, "", "end"], [93, 2, 1, "", "from_optional_experiment"], [93, 2, 1, "", "is_enabled"], [93, 2, 1, "", "track_figure"], [93, 2, 1, "", "track_metrics"], [93, 2, 1, "", "track_text"]], "sensai.tracking.tracking_base.TrackingMixin": [[93, 2, 1, "", "begin_optional_tracking_context_for_model"], [93, 2, 1, "", "set_tracked_experiment"], [93, 4, 1, "", "tracked_experiment"], [93, 2, 1, "", "unset_tracked_experiment"]], "sensai.util": [[94, 0, 0, "-", "aggregation"], [95, 0, 0, "-", "cache"], [96, 0, 0, "-", "cache_azure"], [97, 0, 0, "-", "cache_mysql"], [98, 0, 0, "-", "datastruct"], [99, 0, 0, "-", "deprecation"], [100, 0, 0, "-", "dtype"], [101, 0, 0, "-", "git"], [102, 0, 0, "-", "hash"], [103, 0, 0, "-", "helper"], [105, 0, 0, "-", "io"], [106, 0, 0, "-", "jscode"], [107, 0, 0, "-", "logging"], [108, 0, 0, "-", "math"], [109, 0, 0, "-", "multiprocessing"], [110, 0, 0, "-", "pandas"], [111, 0, 0, "-", "pickle"], [112, 0, 0, "-", "plot"], [113, 0, 0, "-", "profiling"], [114, 0, 0, "-", "sequences"], [115, 0, 0, "-", "string"], [116, 0, 0, "-", "tensorboard"], [117, 0, 0, "-", "test"], [118, 0, 0, "-", "time"], [119, 0, 0, "-", "typing"], [120, 0, 0, "-", "version"]], "sensai.util.aggregation": [[94, 1, 1, "", "DistributionCounter"], [94, 1, 1, "", "RelativeFrequencyCounter"], [94, 1, 1, "", "WeightedMean"]], "sensai.util.aggregation.DistributionCounter": [[94, 2, 1, "", "count"], [94, 2, 1, "", "get_distribution"]], "sensai.util.aggregation.RelativeFrequencyCounter": [[94, 2, 1, "", "add"], [94, 2, 1, "", "count"], [94, 2, 1, "", "get_relative_frequency"]], "sensai.util.aggregation.WeightedMean": [[94, 2, 1, "", "add"], [94, 2, 1, "", "get_weighted_mean"]], "sensai.util.cache": [[95, 1, 1, "", "BoxedValue"], [95, 1, 1, "", "CachedValueProviderMixin"], [95, 1, 1, "", "DelayedUpdateHook"], [95, 1, 1, "", "InMemoryKeyValueCache"], [95, 1, 1, "", "KeyValueCache"], [95, 1, 1, "", "LRUCache"], [95, 1, 1, "", "LoadSaveInterface"], [95, 1, 1, "", "PeriodicUpdateHook"], [95, 1, 1, "", "PersistentKeyValueCache"], [95, 1, 1, "", "PersistentList"], [95, 5, 1, "", "PickleCached"], [95, 1, 1, "", "PickleLoadSaveMixin"], [95, 1, 1, "", "PicklePersistentKeyValueCache"], [95, 1, 1, "", "SlicedPicklePersistentList"], [95, 1, 1, "", "SqliteConnectionManager"], [95, 1, 1, "", "SqlitePersistentKeyValueCache"], [95, 1, 1, "", "SqlitePersistentList"], [95, 5, 1, "", "cached"], [95, 5, 1, "", "pickle_cached"]], "sensai.util.cache.DelayedUpdateHook": [[95, 2, 1, "", "handle_update"]], "sensai.util.cache.InMemoryKeyValueCache": [[95, 2, 1, "", "empty"], [95, 2, 1, "", "get"], [95, 2, 1, "", "set"]], "sensai.util.cache.KeyValueCache": [[95, 2, 1, "", "get"], [95, 2, 1, "", "set"]], "sensai.util.cache.LRUCache": [[95, 2, 1, "", "clear"], [95, 2, 1, "", "get"], [95, 2, 1, "", "set"]], "sensai.util.cache.LoadSaveInterface": [[95, 2, 1, "", "load"], [95, 2, 1, "", "save"]], "sensai.util.cache.PeriodicUpdateHook": [[95, 2, 1, "", "handle_update"]], "sensai.util.cache.PersistentList": [[95, 2, 1, "", "append"], [95, 2, 1, "", "iter_items"]], "sensai.util.cache.PickleLoadSaveMixin": [[95, 2, 1, "", "load"], [95, 2, 1, "", "save"]], "sensai.util.cache.PicklePersistentKeyValueCache": [[95, 2, 1, "", "get"], [95, 2, 1, "", "save"], [95, 2, 1, "", "set"]], "sensai.util.cache.SlicedPicklePersistentList": [[95, 2, 1, "", "append"], [95, 2, 1, "", "cache_exists"], [95, 2, 1, "", "clear"], [95, 2, 1, "", "iter_items"]], "sensai.util.cache.SqliteConnectionManager": [[95, 2, 1, "", "open_connection"]], "sensai.util.cache.SqlitePersistentKeyValueCache": [[95, 1, 1, "", "KeyType"], [95, 2, 1, "", "finalise"], [95, 2, 1, "", "get"], [95, 2, 1, "", "iter_items"], [95, 2, 1, "", "set"]], "sensai.util.cache.SqlitePersistentKeyValueCache.KeyType": [[95, 3, 1, "", "INTEGER"], [95, 3, 1, "", "STRING"]], "sensai.util.cache.SqlitePersistentList": [[95, 2, 1, "", "append"], [95, 2, 1, "", "iter_items"]], "sensai.util.cache_azure": [[96, 1, 1, "", "AzureLazyBatchCommitTable"], [96, 1, 1, "", "AzureTableBlobBackend"], [96, 1, 1, "", "AzureTablePersistentKeyValueCache"], [96, 1, 1, "", "BlobBackedPropertyLoader"], [96, 1, 1, "", "BlobBackedSerialisedPropertyLoader"], [96, 1, 1, "", "BlobPerKeyAzureTableBlobBackend"], [96, 1, 1, "", "JsonAzureTableBlobBackend"], [96, 1, 1, "", "NumpyArrayJsonSerialiser"], [96, 1, 1, "", "PickleAzureTableBlobBackend"], [96, 1, 1, "", "PropertyLoader"], [96, 1, 1, "", "SerialisedPropertyLoader"], [96, 1, 1, "", "Serialiser"], [96, 1, 1, "", "TextDumpAzureTableBlobBackend"]], "sensai.util.cache_azure.AzureLazyBatchCommitTable": [[96, 3, 1, "", "AZURE_ALLOWED_TABLE_BATCH_SIZE"], [96, 3, 1, "", "AZURE_ALLOWED_TABLE_NAME_PATTERN"], [96, 1, 1, "", "PartitionCommandsPriorityQueue"], [96, 2, 1, "", "commit_blocking_largest_partition_from_queue"], [96, 2, 1, "", "commit_blocking_until_empty"], [96, 2, 1, "", "commit_non_blocking_current_queue_state"], [96, 2, 1, "", "exists"], [96, 2, 1, "", "get_entity"], [96, 2, 1, "", "insert_data_frame_to_table"], [96, 2, 1, "", "insert_entity"], [96, 2, 1, "", "insert_or_replace_entity"], [96, 2, 1, "", "iter_data_frame_chunks"], [96, 2, 1, "", "iter_records"], [96, 2, 1, "", "load_table_to_data_frame"]], "sensai.util.cache_azure.AzureLazyBatchCommitTable.PartitionCommandsPriorityQueue": [[96, 1, 1, "", "PartitionCommands"], [96, 2, 1, "", "add_command"], [96, 2, 1, "", "is_empty"], [96, 2, 1, "", "pop"], [96, 2, 1, "", "pop_all"]], "sensai.util.cache_azure.AzureLazyBatchCommitTable.PartitionCommandsPriorityQueue.PartitionCommands": [[96, 2, 1, "", "append"], [96, 2, 1, "", "execute"]], "sensai.util.cache_azure.AzureTableBlobBackend": [[96, 2, 1, "", "get_value_from_reference"], [96, 2, 1, "", "get_value_reference"], [96, 2, 1, "", "set_value_for_reference"]], "sensai.util.cache_azure.AzureTablePersistentKeyValueCache": [[96, 3, 1, "", "CACHE_VALUE_IDENTIFIER"], [96, 2, 1, "", "get"], [96, 2, 1, "", "set"]], "sensai.util.cache_azure.BlobBackedPropertyLoader": [[96, 3, 1, "", "AZURE_ALLOWED_SIZE_PER_PROPERTY_BYTES"], [96, 3, 1, "", "AZURE_ALLOWED_STRING_LENGTH_PER_PROPERTY"], [96, 2, 1, "", "load_property_value"], [96, 2, 1, "", "load_property_value_to_data_frame_column"], [96, 2, 1, "", "write_property_value"]], "sensai.util.cache_azure.BlobBackedSerialisedPropertyLoader": [[96, 2, 1, "", "load_property_value"], [96, 2, 1, "", "load_property_value_to_data_frame_column"], [96, 2, 1, "", "write_property_value"]], "sensai.util.cache_azure.BlobPerKeyAzureTableBlobBackend": [[96, 4, 1, "", "file_extension"], [96, 2, 1, "", "get_value_from_reference"], [96, 2, 1, "", "get_value_reference"], [96, 2, 1, "", "set_value_for_reference"]], "sensai.util.cache_azure.JsonAzureTableBlobBackend": [[96, 4, 1, "", "file_extension"]], "sensai.util.cache_azure.NumpyArrayJsonSerialiser": [[96, 2, 1, "", "deserialise"], [96, 2, 1, "", "serialise"]], "sensai.util.cache_azure.PickleAzureTableBlobBackend": [[96, 4, 1, "", "file_extension"]], "sensai.util.cache_azure.PropertyLoader": [[96, 2, 1, "", "load_property_value"], [96, 2, 1, "", "load_property_value_to_data_frame_column"], [96, 2, 1, "", "write_property_value"]], "sensai.util.cache_azure.SerialisedPropertyLoader": [[96, 2, 1, "", "load_property_value"], [96, 2, 1, "", "load_property_value_to_data_frame_column"], [96, 2, 1, "", "write_property_value"]], "sensai.util.cache_azure.Serialiser": [[96, 2, 1, "", "deserialise"], [96, 2, 1, "", "serialise"]], "sensai.util.cache_azure.TextDumpAzureTableBlobBackend": [[96, 4, 1, "", "file_extension"]], "sensai.util.cache_mysql": [[97, 1, 1, "", "MySQLPersistentKeyValueCache"]], "sensai.util.cache_mysql.MySQLPersistentKeyValueCache": [[97, 1, 1, "", "ValueType"], [97, 2, 1, "", "get"], [97, 2, 1, "", "set"]], "sensai.util.cache_mysql.MySQLPersistentKeyValueCache.ValueType": [[97, 3, 1, "", "BLOB"], [97, 3, 1, "", "DOUBLE"], [97, 3, 1, "", "MEDIUMBLOB"]], "sensai.util.datastruct": [[98, 1, 1, "", "DeferredParams"], [98, 1, 1, "", "Maybe"], [98, 1, 1, "", "SortedKeyValuePairs"], [98, 1, 1, "", "SortedKeyValueStructure"], [98, 1, 1, "", "SortedKeysAndValues"], [98, 1, 1, "", "SortedValues"], [98, 1, 1, "", "Trivalent"]], "sensai.util.datastruct.DeferredParams": [[98, 3, 1, "", "UNDEFINED"], [98, 2, 1, "", "get_dict"], [98, 2, 1, "", "get_param"], [98, 2, 1, "", "set_param"]], "sensai.util.datastruct.SortedKeyValuePairs": [[98, 2, 1, "", "ceil_index"], [98, 2, 1, "", "ceil_key_and_value"], [98, 2, 1, "", "ceil_value"], [98, 2, 1, "", "closest_index"], [98, 2, 1, "", "closest_key_and_value"], [98, 2, 1, "", "closest_value"], [98, 2, 1, "", "floor_index"], [98, 2, 1, "", "floor_key_and_value"], [98, 2, 1, "", "floor_value"], [98, 2, 1, "", "from_unsorted_key_value_pairs"], [98, 2, 1, "", "key_for_index"], [98, 2, 1, "", "value_for_index"], [98, 2, 1, "", "value_slice"]], "sensai.util.datastruct.SortedKeyValueStructure": [[98, 2, 1, "", "ceil_index"], [98, 2, 1, "", "ceil_key_and_value"], [98, 2, 1, "", "ceil_value"], [98, 2, 1, "", "closest_index"], [98, 2, 1, "", "closest_key_and_value"], [98, 2, 1, "", "closest_value"], [98, 2, 1, "", "floor_index"], [98, 2, 1, "", "floor_key_and_value"], [98, 2, 1, "", "floor_value"], [98, 2, 1, "", "interpolated_value"], [98, 2, 1, "", "slice"]], "sensai.util.datastruct.SortedKeysAndValues": [[98, 2, 1, "", "ceil_index"], [98, 2, 1, "", "ceil_key_and_value"], [98, 2, 1, "", "ceil_value"], [98, 2, 1, "", "closest_index"], [98, 2, 1, "", "closest_key_and_value"], [98, 2, 1, "", "closest_value"], [98, 2, 1, "", "floor_index"], [98, 2, 1, "", "floor_key_and_value"], [98, 2, 1, "", "floor_value"], [98, 2, 1, "", "from_series"], [98, 2, 1, "", "value_slice_inner"], [98, 2, 1, "", "value_slice_outer"]], "sensai.util.datastruct.SortedValues": [[98, 2, 1, "", "ceil_index"], [98, 2, 1, "", "ceil_value"], [98, 2, 1, "", "closest_index"], [98, 2, 1, "", "closest_value"], [98, 2, 1, "", "floor_index"], [98, 2, 1, "", "floor_value"], [98, 2, 1, "", "value_slice"]], "sensai.util.datastruct.Trivalent": [[98, 3, 1, "", "FALSE"], [98, 3, 1, "", "TRUE"], [98, 3, 1, "", "UNKNOWN"], [98, 2, 1, "", "from_bool"], [98, 2, 1, "", "is_false"], [98, 2, 1, "", "is_true"]], "sensai.util.deprecation": [[99, 5, 1, "", "deprecated"]], "sensai.util.dtype": [[100, 5, 1, "", "dict_to_ordered_tuples"], [100, 5, 1, "", "to_float_array"]], "sensai.util.git": [[101, 1, 1, "", "GitStatus"], [101, 5, 1, "", "git_status"]], "sensai.util.git.GitStatus": [[101, 3, 1, "", "commit"], [101, 3, 1, "", "has_staged_uncommitted_changes"], [101, 3, 1, "", "has_unstaged_changes"], [101, 3, 1, "", "has_untracked_files"], [101, 4, 1, "", "is_clean"]], "sensai.util.hash": [[102, 5, 1, "", "pickle_hash"], [102, 5, 1, "", "str_hash"]], "sensai.util.helper": [[103, 5, 1, "", "all_none"], [103, 5, 1, "", "any_none"], [103, 5, 1, "", "check_not_nan_dict"], [103, 5, 1, "", "contains_any"], [103, 5, 1, "", "count_none"], [103, 5, 1, "", "count_not_none"], [103, 5, 1, "", "flatten_arguments"], [103, 5, 1, "", "flatten_dict"], [103, 5, 1, "", "kwarg_if_not_none"], [103, 5, 1, "", "mark_used"]], "sensai.util.io": [[105, 1, 1, "", "ResultWriter"], [105, 1, 1, "", "S3Object"], [105, 5, 1, "", "create_dir_path"], [105, 5, 1, "", "create_file_path"], [105, 5, 1, "", "create_path"], [105, 5, 1, "", "filename_compatible"], [105, 5, 1, "", "is_s3_path"], [105, 5, 1, "", "read_text_file_lines"], [105, 5, 1, "", "write_text_file_lines"]], "sensai.util.io.ResultWriter": [[105, 2, 1, "", "child_for_subdirectory"], [105, 2, 1, "", "child_with_added_prefix"], [105, 3, 1, "", "log"], [105, 2, 1, "", "path"], [105, 2, 1, "", "write_data_frame_csv_file"], [105, 2, 1, "", "write_data_frame_excel_file"], [105, 2, 1, "", "write_data_frame_text_file"], [105, 2, 1, "", "write_figure"], [105, 2, 1, "", "write_figures"], [105, 2, 1, "", "write_pickle"], [105, 2, 1, "", "write_text_file"], [105, 2, 1, "", "write_text_file_lines"]], "sensai.util.io.S3Object": [[105, 1, 1, "", "OutputFile"], [105, 2, 1, "", "get_file_content"], [105, 2, 1, "", "open_file"], [105, 2, 1, "", "put"]], "sensai.util.io.S3Object.OutputFile": [[105, 2, 1, "", "write"]], "sensai.util.jscode": [[106, 1, 1, "", "JsClassInstance"], [106, 1, 1, "", "JsCode"], [106, 1, 1, "", "JsCodeLiteral"], [106, 1, 1, "", "JsList"], [106, 1, 1, "", "JsObject"], [106, 1, 1, "", "JsValue"], [106, 1, 1, "", "JsValueLiteral"], [106, 5, 1, "", "js_arg_list"], [106, 5, 1, "", "js_value"]], "sensai.util.jscode.JsCode": [[106, 2, 1, "", "get_js_code"]], "sensai.util.jscode.JsCodeLiteral": [[106, 2, 1, "", "get_js_code"]], "sensai.util.jscode.JsObject": [[106, 2, 1, "", "add"], [106, 2, 1, "", "add_code_literal"], [106, 2, 1, "", "add_float"], [106, 2, 1, "", "add_json"], [106, 2, 1, "", "add_string"], [106, 2, 1, "", "get_js_code"]], "sensai.util.jscode.JsValue": [[106, 2, 1, "", "bool_value"], [106, 2, 1, "", "float_value"], [106, 2, 1, "", "from_python"], [106, 2, 1, "", "from_value"], [106, 2, 1, "", "int_value"], [106, 2, 1, "", "is_undefined"], [106, 2, 1, "", "null"], [106, 2, 1, "", "string_value"], [106, 2, 1, "", "undefined"]], "sensai.util.jscode.JsValueLiteral": [[106, 2, 1, "", "get_js_code"]], "sensai.util.logging": [[107, 1, 1, "", "FallbackHandler"], [107, 1, 1, "", "FileLoggerContext"], [107, 1, 1, "", "LogLevelsChangedContext"], [107, 1, 1, "", "LogTime"], [107, 1, 1, "", "LoggerContext"], [107, 1, 1, "", "LoggingDisabledContext"], [107, 1, 1, "", "MemoryLoggerContext"], [107, 1, 1, "", "MemoryStreamHandler"], [107, 1, 1, "", "StopWatch"], [107, 1, 1, "", "StopWatchManager"], [107, 1, 1, "", "SuspendedLoggersContext"], [107, 5, 1, "", "add_file_logger"], [107, 5, 1, "", "add_memory_logger"], [107, 5, 1, "", "configure"], [107, 5, 1, "", "datetime_tag"], [107, 5, 1, "", "format_log_message"], [107, 5, 1, "", "is_enabled"], [107, 5, 1, "", "is_log_handler_active"], [107, 5, 1, "", "loggers_in_hierarchy"], [107, 5, 1, "", "remove_log_handler"], [107, 5, 1, "", "remove_log_handlers"], [107, 5, 1, "", "run_cli"], [107, 5, 1, "", "run_main"], [107, 5, 1, "", "set_configure_callback"]], "sensai.util.logging.FallbackHandler": [[107, 2, 1, "", "emit"]], "sensai.util.logging.LogTime": [[107, 2, 1, "", "start"], [107, 2, 1, "", "stop"]], "sensai.util.logging.MemoryStreamHandler": [[107, 2, 1, "", "get_log"]], "sensai.util.logging.StopWatch": [[107, 2, 1, "", "get_elapsed_time_secs"], [107, 2, 1, "", "get_elapsed_time_string"], [107, 2, 1, "", "get_elapsed_timedelta"], [107, 2, 1, "", "pause"], [107, 2, 1, "", "reset"], [107, 2, 1, "", "restart"], [107, 2, 1, "", "resume"]], "sensai.util.logging.StopWatchManager": [[107, 2, 1, "", "get_instance"], [107, 2, 1, "", "is_running"], [107, 2, 1, "", "start"], [107, 2, 1, "", "stop"]], "sensai.util.math": [[108, 1, 1, "", "NormalDistribution"], [108, 5, 1, "", "reduce_float_precision_decimals"], [108, 5, 1, "", "reverse_sigmoid"], [108, 5, 1, "", "sigmoid"]], "sensai.util.math.NormalDistribution": [[108, 2, 1, "", "pdf"]], "sensai.util.multiprocessing": [[109, 1, 1, "", "VectorModelWithSeparateFeatureGeneration"]], "sensai.util.multiprocessing.VectorModelWithSeparateFeatureGeneration": [[109, 1, 1, "", "IntermediateFittingStep"], [109, 1, 1, "", "PredictFinaliser"], [109, 2, 1, "", "fit_end"], [109, 2, 1, "", "fit_start"], [109, 2, 1, "", "predict_start"]], "sensai.util.multiprocessing.VectorModelWithSeparateFeatureGeneration.IntermediateFittingStep": [[109, 2, 1, "", "execute"]], "sensai.util.multiprocessing.VectorModelWithSeparateFeatureGeneration.PredictFinaliser": [[109, 2, 1, "", "execute"]], "sensai.util.pandas": [[110, 1, 1, "", "ColumnMatcher"], [110, 1, 1, "", "ColumnMatcherCollection"], [110, 1, 1, "", "ColumnName"], [110, 1, 1, "", "ColumnRegex"], [110, 1, 1, "", "DataFrameColumnChangeTracker"], [110, 1, 1, "", "SeriesInterpolation"], [110, 1, 1, "", "SeriesInterpolationLinearIndex"], [110, 1, 1, "", "SeriesInterpolationRepeatPreceding"], [110, 5, 1, "", "average_series"], [110, 5, 1, "", "extract_array"], [110, 5, 1, "", "query_data_frame"], [110, 5, 1, "", "remove_duplicate_index_entries"]], "sensai.util.pandas.ColumnMatcher": [[110, 2, 1, "", "matches"]], "sensai.util.pandas.ColumnMatcherCollection": [[110, 2, 1, "", "matching_columns"], [110, 2, 1, "", "not_matching_columns"]], "sensai.util.pandas.ColumnName": [[110, 2, 1, "", "matches"]], "sensai.util.pandas.ColumnRegex": [[110, 2, 1, "", "matches"]], "sensai.util.pandas.DataFrameColumnChangeTracker": [[110, 2, 1, "", "assert_change_was_tracked"], [110, 2, 1, "", "column_change_string"], [110, 2, 1, "", "get_added_columns"], [110, 2, 1, "", "get_removed_columns"], [110, 2, 1, "", "track_change"]], "sensai.util.pandas.SeriesInterpolation": [[110, 2, 1, "", "interpolate"], [110, 2, 1, "", "interpolate_all_with_combined_index"]], "sensai.util.pickle": [[111, 1, 1, "", "PersistableObject"], [111, 1, 1, "", "PickleFailureDebugger"], [111, 5, 1, "", "dump_pickle"], [111, 5, 1, "", "getstate"], [111, 5, 1, "", "load_pickle"], [111, 5, 1, "", "setstate"]], "sensai.util.pickle.PickleFailureDebugger": [[111, 2, 1, "", "debug_failure"], [111, 3, 1, "", "enabled"], [111, 2, 1, "", "log_failure_if_enabled"]], "sensai.util.plot": [[112, 1, 1, "", "AverageSeriesLinePlot"], [112, 1, 1, "", "Color"], [112, 1, 1, "", "HeatMapPlot"], [112, 1, 1, "", "HistogramPlot"], [112, 1, 1, "", "LinearColorMap"], [112, 1, 1, "", "MetricComparisonBarPlot"], [112, 1, 1, "", "Plot"], [112, 1, 1, "", "ScatterPlot"], [112, 5, 1, "", "plot_matrix"]], "sensai.util.plot.Color": [[112, 2, 1, "", "alpha"], [112, 2, 1, "", "darken"], [112, 2, 1, "", "lighten"], [112, 2, 1, "", "to_hex"]], "sensai.util.plot.HeatMapPlot": [[112, 2, 1, "", "DEFAULT_CMAP_FACTORY"]], "sensai.util.plot.LinearColorMap": [[112, 2, 1, "", "get_color"]], "sensai.util.plot.Plot": [[112, 2, 1, "", "save"], [112, 2, 1, "", "show"], [112, 2, 1, "", "title"], [112, 2, 1, "", "xlabel"], [112, 2, 1, "", "xlim"], [112, 2, 1, "", "xtick"], [112, 2, 1, "", "xtick_major"], [112, 2, 1, "", "xtick_minor"], [112, 2, 1, "", "ylabel"], [112, 2, 1, "", "ylim"], [112, 2, 1, "", "ytick_major"]], "sensai.util.plot.ScatterPlot": [[112, 3, 1, "", "MAX_OPACITY"], [112, 3, 1, "", "MIN_OPACITY"], [112, 3, 1, "", "N_MAX_TRANSPARENCY"], [112, 3, 1, "", "N_MIN_TRANSPARENCY"]], "sensai.util.profiling": [[113, 5, 1, "", "profiled"], [113, 5, 1, "", "timed"]], "sensai.util.sequences": [[114, 5, 1, "", "all_equal"], [114, 5, 1, "", "ceil_index"], [114, 5, 1, "", "ceil_value"], [114, 5, 1, "", "closest_index"], [114, 5, 1, "", "closest_value"], [114, 5, 1, "", "concat_sequences"], [114, 5, 1, "", "floor_index"], [114, 5, 1, "", "floor_value"], [114, 5, 1, "", "get_first_duplicate"], [114, 5, 1, "", "value_slice_inner"], [114, 5, 1, "", "value_slice_outer"]], "sensai.util.string": [[115, 1, 1, "", "StringConverter"], [115, 1, 1, "", "TagBuilder"], [115, 1, 1, "", "TextBuilder"], [115, 1, 1, "", "ToStringMixin"], [115, 5, 1, "", "dict_string"], [115, 5, 1, "", "function_name"], [115, 5, 1, "", "list_string"], [115, 5, 1, "", "object_repr"], [115, 5, 1, "", "or_regex_group"], [115, 5, 1, "", "pretty_string_repr"], [115, 5, 1, "", "to_string"]], "sensai.util.string.StringConverter": [[115, 2, 1, "", "to_string"]], "sensai.util.string.TagBuilder": [[115, 2, 1, "", "build"], [115, 2, 1, "", "with_alternative"], [115, 2, 1, "", "with_component"], [115, 2, 1, "", "with_conditional"]], "sensai.util.string.TextBuilder": [[115, 2, 1, "", "build"], [115, 2, 1, "", "with_break"], [115, 2, 1, "", "with_line"], [115, 2, 1, "", "with_line_conditional"], [115, 2, 1, "", "with_lines"], [115, 2, 1, "", "with_lines_from_text"], [115, 2, 1, "", "with_text"]], "sensai.util.string.ToStringMixin": [[115, 2, 1, "", "_tostring_additional_entries"], [115, 2, 1, "", "_tostring_class_name"], [115, 2, 1, "", "_tostring_exclude_exceptions"], [115, 2, 1, "", "_tostring_exclude_private"], [115, 2, 1, "", "_tostring_excludes"], [115, 2, 1, "", "_tostring_includes"], [115, 2, 1, "", "_tostring_includes_forced"], [115, 2, 1, "", "_tostring_object_info"], [115, 2, 1, "", "pprint"], [115, 2, 1, "", "pprints"]], "sensai.util.tensorboard": [[116, 1, 1, "", "TensorboardData"], [116, 1, 1, "", "TensorboardSeriesComparison"]], "sensai.util.tensorboard.TensorboardData": [[116, 2, 1, "", "get_data_frame"], [116, 2, 1, "", "get_series"], [116, 2, 1, "", "get_tags"]], "sensai.util.tensorboard.TensorboardSeriesComparison": [[116, 2, 1, "", "mean_relative_difference"], [116, 2, 1, "", "plot_series"]], "sensai.util.test": [[117, 7, 1, "", "SNAPSHOT_FLOAT_DECIMALS_DEFAULT"], [117, 7, 1, "", "SNAPSHOT_SIGNIFICANT_DIGITS_DEFAULT"], [117, 5, 1, "", "convert_floats"], [117, 5, 1, "", "json_mapper"], [117, 5, 1, "", "reduce_float_precision"], [117, 5, 1, "", "snapshot_compatible"]], "sensai.util.time": [[118, 1, 1, "", "TimeInterval"], [118, 5, 1, "", "format_duration"], [118, 5, 1, "", "time_of_day"], [118, 5, 1, "", "ts_next_month"]], "sensai.util.time.TimeInterval": [[118, 2, 1, "", "contains"], [118, 2, 1, "", "contains_time"], [118, 2, 1, "", "intersection"], [118, 2, 1, "", "mid_timestamp"], [118, 2, 1, "", "overlaps_with"], [118, 2, 1, "", "time_delta"]], "sensai.util.typing": [[119, 1, 1, "", "PandasNamedTuple"]], "sensai.util.typing.PandasNamedTuple": [[119, 3, 1, "", "Index"]], "sensai.util.version": [[120, 1, 1, "", "Version"]], "sensai.util.version.Version": [[120, 2, 1, "", "is_at_least"], [120, 2, 1, "", "is_at_most"], [120, 2, 1, "", "is_equal"]], "sensai.vector_model": [[121, 1, 1, "", "RuleBasedVectorClassificationModel"], [121, 1, 1, "", "RuleBasedVectorRegressionModel"], [121, 1, 1, "", "TrainingContext"], [121, 1, 1, "", "VectorClassificationModel"], [121, 1, 1, "", "VectorModel"], [121, 1, 1, "", "VectorModelBase"], [121, 1, 1, "", "VectorRegressionModel"], [121, 5, 1, "", "get_predicted_var_name"]], "sensai.vector_model.VectorClassificationModel": [[121, 2, 1, "", "convert_class_probabilities_to_predictions"], [121, 2, 1, "", "get_class_labels"], [121, 2, 1, "", "is_regression_model"], [121, 2, 1, "", "predict_class_probabilities"]], "sensai.vector_model.VectorModel": [[121, 3, 1, "", "TOSTRING_INCLUDE_PREPROCESSORS"], [121, 2, 1, "", "compute_model_inputs"], [121, 2, 1, "", "compute_model_outputs"], [121, 2, 1, "", "fit"], [121, 2, 1, "", "fit_input_output_data"], [121, 2, 1, "", "get_feature_generator"], [121, 2, 1, "", "get_feature_transformer"], [121, 2, 1, "", "get_feature_transformer_chain"], [121, 2, 1, "", "get_input_transformer"], [121, 2, 1, "", "get_input_transformer_chain"], [121, 2, 1, "", "get_model_input_variable_names"], [121, 2, 1, "", "get_predicted_variable_names"], [121, 2, 1, "", "get_raw_input_transformer"], [121, 2, 1, "", "get_raw_input_transformer_chain"], [121, 2, 1, "", "is_being_fitted"], [121, 2, 1, "", "is_fitted"], [121, 2, 1, "", "predict"], [121, 2, 1, "", "remove_input_preprocessors"], [121, 2, 1, "", "set_feature_generator"], [121, 2, 1, "", "with_feature_collector"], [121, 2, 1, "", "with_feature_generator"], [121, 2, 1, "", "with_feature_transformers"], [121, 2, 1, "", "with_input_transformers"], [121, 2, 1, "", "with_raw_input_transformers"]], "sensai.vector_model.VectorModelBase": [[121, 2, 1, "", "get_name"], [121, 2, 1, "", "get_predicted_variable_names"], [121, 2, 1, "", "is_regression_model"], [121, 2, 1, "", "predict"], [121, 2, 1, "", "set_name"], [121, 2, 1, "", "with_name"]], "sensai.vector_model.VectorRegressionModel": [[121, 2, 1, "", "get_model_output_variable_names"], [121, 2, 1, "", "get_output_transformer_chain"], [121, 2, 1, "", "get_target_transformer"], [121, 2, 1, "", "is_fitted"], [121, 2, 1, "", "is_regression_model"], [121, 2, 1, "", "predict"], [121, 2, 1, "", "with_output_transformers"], [121, 2, 1, "", "with_target_transformer"]], "sensai.vectoriser": [[122, 1, 1, "", "EmptyVectoriser"], [122, 1, 1, "", "ItemIdentifierProvider"], [122, 1, 1, "", "SequenceVectoriser"], [122, 1, 1, "", "Vectoriser"], [122, 1, 1, "", "VectoriserRegistry"]], "sensai.vectoriser.ItemIdentifierProvider": [[122, 2, 1, "", "get_identifier"]], "sensai.vectoriser.SequenceVectoriser": [[122, 1, 1, "", "FittingMode"], [122, 2, 1, "", "apply"], [122, 2, 1, "", "apply_multi"], [122, 2, 1, "", "apply_multi_with_padding"], [122, 2, 1, "", "fit"], [122, 2, 1, "", "get_vector_dim"], [122, 3, 1, "", "log"]], "sensai.vectoriser.SequenceVectoriser.FittingMode": [[122, 3, 1, "", "CONCAT"], [122, 3, 1, "", "NONE"], [122, 3, 1, "", "UNIQUE"]], "sensai.vectoriser.Vectoriser": [[122, 1, 1, "", "ResultType"], [122, 2, 1, "", "apply"], [122, 2, 1, "", "apply_multi"], [122, 2, 1, "", "fit"], [122, 2, 1, "", "get_name"], [122, 2, 1, "", "is_fitted"], [122, 3, 1, "", "log"], [122, 2, 1, "", "set_name"]], "sensai.vectoriser.Vectoriser.ResultType": [[122, 3, 1, "", "LIST"], [122, 3, 1, "", "NUMPY_ARRAY"], [122, 3, 1, "", "SCALAR"], [122, 2, 1, "", "from_value"]], "sensai.vectoriser.VectoriserRegistry": [[122, 2, 1, "", "get_available_vectorisers"], [122, 2, 1, "", "get_vectoriser"], [122, 2, 1, "", "get_vectorisers"], [122, 2, 1, "", "register_factory"]], "sensai.xgboost": [[123, 1, 1, "", "XGBGradientBoostedVectorClassificationModel"], [123, 1, 1, "", "XGBGradientBoostedVectorRegressionModel"], [123, 1, 1, "", "XGBRandomForestVectorClassificationModel"], [123, 1, 1, "", "XGBRandomForestVectorRegressionModel"], [123, 5, 1, "", "is_xgboost_version_at_least"]], "sensai.xgboost.XGBGradientBoostedVectorClassificationModel": [[123, 2, 1, "", "is_sample_weight_supported"]], "sensai.xgboost.XGBGradientBoostedVectorRegressionModel": [[123, 2, 1, "", "is_sample_weight_supported"]], "sensai.xgboost.XGBRandomForestVectorClassificationModel": [[123, 2, 1, "", "is_sample_weight_supported"]], "sensai.xgboost.XGBRandomForestVectorRegressionModel": [[123, 2, 1, "", "is_sample_weight_supported"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"model": [0, 2, 3, 21], "modular": 0, "data": [0, 2, 12], "pipelin": 0, "vectormodel": [0, 2], "The": 0, "class": 0, "hierarchi": 0, "datafram": 0, "base": 0, "interfac": 0, "implement": 0, "custom": [0, 3], "configur": 0, "frame": [0, 2], "transform": [0, 2], "dft": [0, 14], "featur": [0, 2], "gener": [0, 2], "A": 0, "simpl": [0, 2], "rule": 0, "make": 0, "us": [0, 2], "ad": 0, "meta": 0, "downstream": 0, "collector": 0, "fulli": [0, 2], "defin": 0, "vector": 0, "s": 0, "input": [0, 3], "registri": 0, "exampl": 0, "case": 0, "titan": 0, "surviv": 0, "set": [0, 2], "raw": 0, "pre": 0, "process": 0, "customis": [0, 2], "evalu": [0, 2, 29, 31], "more": 0, "complex": 0, "notebook": 1, "tutori": 1, "introduct": 2, "sensai": [2, 4], "supervis": 2, "learn": 2, "log": [2, 107], "train": 2, "low": 2, "level": 2, "infer": 2, "integr": 2, "util": [2, 104], "plot": [2, 112], "cross": 2, "valid": 2, "compar": 2, "neural": 3, "network": 3, "imag": 3, "classif": 3, "appli": 3, "predefin": 3, "creat": 3, "cnn": 3, "wrap": 3, "torch": [3, 68], "nn": 3, "modul": 3, "instanc": 3, "an": 3, "output": 3, "adapt": 3, "welcom": 4, "indic": 4, "tabl": 4, "catboost": 5, "clustering_bas": 6, "greedy_clust": 7, "cluster": 8, "sklearn_clust": 9, "columngen": 10, "dataset": 11, "io_data": 13, "data_transform": 15, "sklearn_transform": 16, "value_transform": 17, "distance_metr": 18, "ensemble_bas": 19, "ensembl": 20, "crossval": 22, "eval_stats_bas": 23, "eval_stats_classif": 24, "eval_stats_clust": 25, "eval_stats_regress": 26, "eval_stat": 27, "eval_util": 28, "evaluator_clust": 30, "metric_comput": 32, "result_set": 33, "feature_import": 34, "feature_select": 35, "rfe": 36, "feature_gener": 37, "feature_generator_registri": 38, "featuregen": 39, "geo_clust": 40, "geo_coord": 41, "coordinate_clust": 42, "coordinate_clustering_ground_truth": 43, "coordin": 44, "geometri": 45, "graph": 46, "geopanda": 47, "geoanalyt": 48, "local_coord": 49, "map_til": 50, "hyperopt": 51, "api": 52, "refer": 52, "lightgbm": 53, "local_search": 54, "minizinc": 55, "multi_model": 56, "naive_bay": 57, "nearest_neighbor": 58, "normalis": 59, "pytorch_lightn": 60, "pl_model": 61, "sklearn": 62, "sklearn_bas": 63, "sklearn_classif": 64, "sklearn_regress": 65, "sklearn_quantil": 66, "tensor_model": 67, "torch_bas": 69, "torch_data": 70, "torch_enum": 71, "torch_eval_util": 72, "torch_model": 73, "lstnet": 74, "lstnet_model": 75, "lstnet_modul": 76, "mlp": 77, "mlp_model": 78, "mlp_modul": 79, "residualffn": 80, "residualffn_model": 81, "residualffn_modul": 82, "seq": 83, "seq_model": 84, "seq_modul": 85, "torch_modul": 86, "torch_opt": 87, "torchtext": 88, "azure_track": 89, "clearml_track": 90, "track": 91, "mlflow_track": 92, "tracking_bas": 93, "aggreg": 94, "cach": 95, "cache_azur": 96, "cache_mysql": 97, "datastruct": 98, "deprec": 99, "dtype": 100, "git": 101, "hash": 102, "helper": 103, "io": 105, "jscode": 106, "math": 108, "multiprocess": 109, "panda": 110, "pickl": 111, "profil": 113, "sequenc": 114, "string": 115, "tensorboard": 116, "test": 117, "time": 118, "type": 119, "version": 120, "vector_model": 121, "vectoris": 122, "xgboost": 123}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 56}})